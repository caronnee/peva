Grammar

    0 $accept: program $end

    1 program: global_variables declare_functions TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR block_of_instructions

    2 global_variables: /* empty */
    3                 | global_variables local_variables

    4 type: simple_type
    5     | complex_type

    6 local_variables: type names TOKEN_SEMICOLON

    7 simple_type: TOKEN_VAR_REAL
    8            | TOKEN_VAR_INT
    9            | TOKEN_LOCATION
   10            | TOKEN_OBJECT

   11 complex_type: simple_type ranges

   12 ranges: TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA
   13       | ranges TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA

   14 names: TOKEN_IDENTIFIER
   15      | TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   16      | names TOKEN_COMMA TOKEN_IDENTIFIER
   17      | names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   18      | names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END

   19 values: number
   20       | TOKEN_IDENTIFIER
   21       | values TOKEN_COMMA TOKEN_IDENTIFIER
   22       | values TOKEN_COMMA number

   23 declare_functions: /* empty */
   24                  | declare_function_

   25 function_header: TOKEN_FUNCTION TOKEN_IDENTIFIER

   26 declare_function_: type function_header TOKEN_LPAR names TOKEN_RPAR block_of_instructions
   27                  | declare_function_ type function_header TOKEN_LPAR names TOKEN_RPAR block_of_instructions
   28                  | type function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions
   29                  | declare_function_ type function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions

   30 number: TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | TOKEN_REAL
   33       | TOKEN_UINT

   34 block_of_instructions: TOKEN_BEGIN TOKEN_END
   35                      | TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | TOKEN_BEGIN commands TOKEN_END

   37 commands: matched
   38         | commands matched
   39         | unmatched
   40         | commands unmatched

   41 forcycle: TOKEN_FOR

   42 do_cycle: TOKEN_DO

   43 while_cycle: TOKEN_WHILE

   44 command: forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   45        | do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   46        | while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   47        | TOKEN_RETURN expression TOKEN_SEMICOLON
   48        | TOKEN_RETURN TOKEN_SEMICOLON
   49        | TOKEN_BREAK TOKEN_SEMICOLON
   50        | local_variables
   51        | simple_command TOKEN_SEMICOLON

   52 simple_command: assign
   53               | variable TOKEN_PLUSPLUS
   54               | variable TOKEN_MINUSMINUS
   55               | variable

   56 assign: variable_left TOKEN_ASSIGN expression

   57 variable_left: TOKEN_IDENTIFIER
   58              | TOKEN_IDENTIFIER array_access

   59 call_fce: TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR

   60 call_parameters: expression
   61                | /* empty */
   62                | call_parameters TOKEN_COMMA expression

   63 matched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   64        | command
   65        | block_of_instructions

   66 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   67          | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR command
   68          | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched

   69 init: local_variables
   70     | assign

   71 variable: TOKEN_IDENTIFIER
   72         | TOKEN_IDENTIFIER array_access
   73         | call_fce
   74         | variable TOKEN_DOT call_fce
   75         | variable TOKEN_DOT TOKEN_IDENTIFIER

   76 array_access: TOKEN_LSBRA exps TOKEN_RSBRA
   77             | array_access TOKEN_LSBRA exps TOKEN_RSBRA

   78 exps: expression
   79     | exps TOKEN_COMMA expression

   80 expression_base: variable
   81                | number
   82                | variable TOKEN_MINUSMINUS
   83                | variable TOKEN_PLUSPLUS
   84                | TOKEN_LPAR expression TOKEN_RPAR

   85 expression_mul: expression_base
   86               | expression_mul TOKEN_OPER_MUL expression_base

   87 expression_add: expression_mul
   88               | expression_add TOKEN_OPER_SIGNADD expression_mul

   89 expression: expression_add

   90 expression_bool_base: expression
   91                     | expression TOKEN_OPER_REL expression

   92 expression_bool_or: expression_bool_base
   93                   | expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR

   94 expression_bool: expression_bool_or
   95                | expression_bool TOKEN_BOOL_AND expression_bool_or


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_MAIN (258) 1
TOKEN_LOCATION (259) 9
TOKEN_OBJECT (260) 10
TOKEN_VAR_REAL (261) 7
TOKEN_VAR_INT (262) 8
TOKEN_FUNCTION (263) 25
TOKEN_IF (264) 63 66 67 68
TOKEN_ELSE (265) 63 68
TOKEN_WHILE (266) 43 45
TOKEN_DO (267) 42
TOKEN_FOR (268) 41
TOKEN_RETURN (269) 47 48
TOKEN_BREAK (270) 49
TOKEN_SEMICOLON (271) 6 35 44 45 47 48 49 51
TOKEN_DOT (272) 74 75
TOKEN_COMMA (273) 16 17 18 21 22 62 79
TOKEN_LPAR (274) 1 26 27 28 29 44 45 46 59 63 66 67 68 84 93
TOKEN_RPAR (275) 1 26 27 28 29 44 45 46 59 63 66 67 68 84 93
TOKEN_LSBRA (276) 12 13 76 77
TOKEN_RSBRA (277) 12 13 76 77
TOKEN_ASSIGN (278) 15 17 18 56
TOKEN_BEGIN (279) 18 34 35 36
TOKEN_END (280) 18 34 35 36
TOKEN_IDENTIFIER (281) 14 15 16 17 18 20 21 25 57 58 59 71 72 75
TOKEN_UINT (282) 12 13 31 33
TOKEN_REAL (283) 30 32
TOKEN_OPER_REL (284) 91
TOKEN_OPER_SIGNADD (285) 30 31 88
TOKEN_OPER_MUL (286) 86
TOKEN_PLUSPLUS (287) 53 83
TOKEN_MINUSMINUS (288) 54 82
TOKEN_BOOL_AND (289) 95
TOKEN_BOOL_OR (290) 93


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program (37)
    on left: 1, on right: 0
global_variables (38)
    on left: 2 3, on right: 1 3
type (39)
    on left: 4 5, on right: 6 26 27 28 29
local_variables (40)
    on left: 6, on right: 3 50 69
simple_type (41)
    on left: 7 8 9 10, on right: 4 11
complex_type (42)
    on left: 11, on right: 5
ranges (43)
    on left: 12 13, on right: 11 13
names (44)
    on left: 14 15 16 17 18, on right: 6 16 17 18 26 27
values (45)
    on left: 19 20 21 22, on right: 18 21 22
declare_functions (46)
    on left: 23 24, on right: 1
function_header (47)
    on left: 25, on right: 26 27 28 29
declare_function_ (48)
    on left: 26 27 28 29, on right: 24 27 29
number (49)
    on left: 30 31 32 33, on right: 19 22 81
block_of_instructions (50)
    on left: 34 35 36, on right: 1 26 27 28 29 44 45 46 65 66
commands (51)
    on left: 37 38 39 40, on right: 36 38 40
forcycle (52)
    on left: 41, on right: 44
do_cycle (53)
    on left: 42, on right: 45
while_cycle (54)
    on left: 43, on right: 46
command (55)
    on left: 44 45 46 47 48 49 50 51, on right: 64 67
simple_command (56)
    on left: 52 53 54 55, on right: 44 51
assign (57)
    on left: 56, on right: 52 70
variable_left (58)
    on left: 57 58, on right: 56
call_fce (59)
    on left: 59, on right: 73 74
call_parameters (60)
    on left: 60 61 62, on right: 59 62
matched (61)
    on left: 63 64 65, on right: 37 38 63 68
unmatched (62)
    on left: 66 67 68, on right: 39 40 68
init (63)
    on left: 69 70, on right: 44
variable (64)
    on left: 71 72 73 74 75, on right: 53 54 55 74 75 80 82 83
array_access (65)
    on left: 76 77, on right: 58 72 77
exps (66)
    on left: 78 79, on right: 76 77 79
expression_base (67)
    on left: 80 81 82 83 84, on right: 85 86
expression_mul (68)
    on left: 85 86, on right: 86 87 88
expression_add (69)
    on left: 87 88, on right: 88 89
expression (70)
    on left: 89, on right: 15 17 47 56 60 62 78 79 84 90 91
expression_bool_base (71)
    on left: 90 91, on right: 92
expression_bool_or (72)
    on left: 92 93, on right: 93 94 95
expression_bool (73)
    on left: 94 95, on right: 44 45 46 63 66 67 68 93 95


state 0

    0 $accept: . program $end
    1 program: . global_variables declare_functions TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR block_of_instructions
    2 global_variables: .
    3                 | . global_variables local_variables

    $default  reduce using rule 2 (global_variables)

    program           go to state 1
    global_variables  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: global_variables . declare_functions TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR block_of_instructions
    3 global_variables: global_variables . local_variables
    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   23 declare_functions: .  [TOKEN_MAIN]
   24                  | . declare_function_
   26 declare_function_: . type function_header TOKEN_LPAR names TOKEN_RPAR block_of_instructions
   27                  | . declare_function_ type function_header TOKEN_LPAR names TOKEN_RPAR block_of_instructions
   28                  | . type function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions
   29                  | . declare_function_ type function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_LOCATION  shift, and go to state 4
    TOKEN_OBJECT    shift, and go to state 5
    TOKEN_VAR_REAL  shift, and go to state 6
    TOKEN_VAR_INT   shift, and go to state 7

    $default  reduce using rule 23 (declare_functions)

    type               go to state 8
    local_variables    go to state 9
    simple_type        go to state 10
    complex_type       go to state 11
    declare_functions  go to state 12
    declare_function_  go to state 13


state 3

    0 $accept: program $end .

    $default  accept


state 4

    9 simple_type: TOKEN_LOCATION .

    $default  reduce using rule 9 (simple_type)


state 5

   10 simple_type: TOKEN_OBJECT .

    $default  reduce using rule 10 (simple_type)


state 6

    7 simple_type: TOKEN_VAR_REAL .

    $default  reduce using rule 7 (simple_type)


state 7

    8 simple_type: TOKEN_VAR_INT .

    $default  reduce using rule 8 (simple_type)


state 8

    6 local_variables: type . names TOKEN_SEMICOLON
   14 names: . TOKEN_IDENTIFIER
   15      | . TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   16      | . names TOKEN_COMMA TOKEN_IDENTIFIER
   17      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   18      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END
   25 function_header: . TOKEN_FUNCTION TOKEN_IDENTIFIER
   26 declare_function_: type . function_header TOKEN_LPAR names TOKEN_RPAR block_of_instructions
   28                  | type . function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_FUNCTION    shift, and go to state 14
    TOKEN_IDENTIFIER  shift, and go to state 15

    names            go to state 16
    function_header  go to state 17


state 9

    3 global_variables: global_variables local_variables .

    $default  reduce using rule 3 (global_variables)


state 10

    4 type: simple_type .  [TOKEN_FUNCTION, TOKEN_IDENTIFIER]
   11 complex_type: simple_type . ranges
   12 ranges: . TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA
   13       | . ranges TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 18

    $default  reduce using rule 4 (type)

    ranges  go to state 19


state 11

    5 type: complex_type .

    $default  reduce using rule 5 (type)


state 12

    1 program: global_variables declare_functions . TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_MAIN  shift, and go to state 20


state 13

    4 type: . simple_type
    5     | . complex_type
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   24 declare_functions: declare_function_ .  [TOKEN_MAIN]
   27 declare_function_: declare_function_ . type function_header TOKEN_LPAR names TOKEN_RPAR block_of_instructions
   29                  | declare_function_ . type function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_LOCATION  shift, and go to state 4
    TOKEN_OBJECT    shift, and go to state 5
    TOKEN_VAR_REAL  shift, and go to state 6
    TOKEN_VAR_INT   shift, and go to state 7

    $default  reduce using rule 24 (declare_functions)

    type          go to state 21
    simple_type   go to state 10
    complex_type  go to state 11


state 14

   25 function_header: TOKEN_FUNCTION . TOKEN_IDENTIFIER

    TOKEN_IDENTIFIER  shift, and go to state 22


state 15

   14 names: TOKEN_IDENTIFIER .  [TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_RPAR]
   15      | TOKEN_IDENTIFIER . TOKEN_ASSIGN expression

    TOKEN_ASSIGN  shift, and go to state 23

    $default  reduce using rule 14 (names)


state 16

    6 local_variables: type names . TOKEN_SEMICOLON
   16 names: names . TOKEN_COMMA TOKEN_IDENTIFIER
   17      | names . TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   18      | names . TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END

    TOKEN_SEMICOLON  shift, and go to state 24
    TOKEN_COMMA      shift, and go to state 25


state 17

   26 declare_function_: type function_header . TOKEN_LPAR names TOKEN_RPAR block_of_instructions
   28                  | type function_header . TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_LPAR  shift, and go to state 26


state 18

   12 ranges: TOKEN_LSBRA . TOKEN_UINT TOKEN_RSBRA

    TOKEN_UINT  shift, and go to state 27


state 19

   11 complex_type: simple_type ranges .  [TOKEN_FUNCTION, TOKEN_IDENTIFIER]
   13 ranges: ranges . TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 28

    $default  reduce using rule 11 (complex_type)


state 20

    1 program: global_variables declare_functions TOKEN_MAIN . TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_LPAR  shift, and go to state 29


state 21

   25 function_header: . TOKEN_FUNCTION TOKEN_IDENTIFIER
   27 declare_function_: declare_function_ type . function_header TOKEN_LPAR names TOKEN_RPAR block_of_instructions
   29                  | declare_function_ type . function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_FUNCTION  shift, and go to state 14

    function_header  go to state 30


state 22

   25 function_header: TOKEN_FUNCTION TOKEN_IDENTIFIER .

    $default  reduce using rule 25 (function_header)


state 23

   15 names: TOKEN_IDENTIFIER TOKEN_ASSIGN . expression
   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add

    TOKEN_LPAR          shift, and go to state 31
    TOKEN_IDENTIFIER    shift, and go to state 32
    TOKEN_UINT          shift, and go to state 33
    TOKEN_REAL          shift, and go to state 34
    TOKEN_OPER_SIGNADD  shift, and go to state 35

    number           go to state 36
    call_fce         go to state 37
    variable         go to state 38
    expression_base  go to state 39
    expression_mul   go to state 40
    expression_add   go to state 41
    expression       go to state 42


state 24

    6 local_variables: type names TOKEN_SEMICOLON .

    $default  reduce using rule 6 (local_variables)


state 25

   16 names: names TOKEN_COMMA . TOKEN_IDENTIFIER
   17      | names TOKEN_COMMA . TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   18      | names TOKEN_COMMA . TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END

    TOKEN_IDENTIFIER  shift, and go to state 43


state 26

   14 names: . TOKEN_IDENTIFIER
   15      | . TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   16      | . names TOKEN_COMMA TOKEN_IDENTIFIER
   17      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   18      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END
   26 declare_function_: type function_header TOKEN_LPAR . names TOKEN_RPAR block_of_instructions
   28                  | type function_header TOKEN_LPAR . TOKEN_RPAR block_of_instructions

    TOKEN_RPAR        shift, and go to state 44
    TOKEN_IDENTIFIER  shift, and go to state 15

    names  go to state 45


state 27

   12 ranges: TOKEN_LSBRA TOKEN_UINT . TOKEN_RSBRA

    TOKEN_RSBRA  shift, and go to state 46


state 28

   13 ranges: ranges TOKEN_LSBRA . TOKEN_UINT TOKEN_RSBRA

    TOKEN_UINT  shift, and go to state 47


state 29

    1 program: global_variables declare_functions TOKEN_MAIN TOKEN_LPAR . TOKEN_RPAR block_of_instructions

    TOKEN_RPAR  shift, and go to state 48


state 30

   27 declare_function_: declare_function_ type function_header . TOKEN_LPAR names TOKEN_RPAR block_of_instructions
   29                  | declare_function_ type function_header . TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_LPAR  shift, and go to state 49


state 31

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   84                | TOKEN_LPAR . expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add

    TOKEN_LPAR          shift, and go to state 31
    TOKEN_IDENTIFIER    shift, and go to state 32
    TOKEN_UINT          shift, and go to state 33
    TOKEN_REAL          shift, and go to state 34
    TOKEN_OPER_SIGNADD  shift, and go to state 35

    number           go to state 36
    call_fce         go to state 37
    variable         go to state 38
    expression_base  go to state 39
    expression_mul   go to state 40
    expression_add   go to state 41
    expression       go to state 50


state 32

   59 call_fce: TOKEN_IDENTIFIER . TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: TOKEN_IDENTIFIER .  [TOKEN_SEMICOLON, TOKEN_DOT, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD, TOKEN_OPER_MUL, TOKEN_PLUSPLUS, TOKEN_MINUSMINUS, TOKEN_BOOL_AND, TOKEN_BOOL_OR]
   72         | TOKEN_IDENTIFIER . array_access
   76 array_access: . TOKEN_LSBRA exps TOKEN_RSBRA
   77             | . array_access TOKEN_LSBRA exps TOKEN_RSBRA

    TOKEN_LPAR   shift, and go to state 51
    TOKEN_LSBRA  shift, and go to state 52

    $default  reduce using rule 71 (variable)

    array_access  go to state 53


state 33

   33 number: TOKEN_UINT .

    $default  reduce using rule 33 (number)


state 34

   32 number: TOKEN_REAL .

    $default  reduce using rule 32 (number)


state 35

   30 number: TOKEN_OPER_SIGNADD . TOKEN_REAL
   31       | TOKEN_OPER_SIGNADD . TOKEN_UINT

    TOKEN_UINT  shift, and go to state 54
    TOKEN_REAL  shift, and go to state 55


state 36

   81 expression_base: number .

    $default  reduce using rule 81 (expression_base)


state 37

   73 variable: call_fce .

    $default  reduce using rule 73 (variable)


state 38

   74 variable: variable . TOKEN_DOT call_fce
   75         | variable . TOKEN_DOT TOKEN_IDENTIFIER
   80 expression_base: variable .  [TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD, TOKEN_OPER_MUL, TOKEN_BOOL_AND, TOKEN_BOOL_OR]
   82                | variable . TOKEN_MINUSMINUS
   83                | variable . TOKEN_PLUSPLUS

    TOKEN_DOT         shift, and go to state 56
    TOKEN_PLUSPLUS    shift, and go to state 57
    TOKEN_MINUSMINUS  shift, and go to state 58

    $default  reduce using rule 80 (expression_base)


state 39

   85 expression_mul: expression_base .

    $default  reduce using rule 85 (expression_mul)


state 40

   86 expression_mul: expression_mul . TOKEN_OPER_MUL expression_base
   87 expression_add: expression_mul .  [TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD, TOKEN_BOOL_AND, TOKEN_BOOL_OR]

    TOKEN_OPER_MUL  shift, and go to state 59

    $default  reduce using rule 87 (expression_add)


state 41

   88 expression_add: expression_add . TOKEN_OPER_SIGNADD expression_mul
   89 expression: expression_add .  [TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_BOOL_AND, TOKEN_BOOL_OR]

    TOKEN_OPER_SIGNADD  shift, and go to state 60

    $default  reduce using rule 89 (expression)


state 42

   15 names: TOKEN_IDENTIFIER TOKEN_ASSIGN expression .

    $default  reduce using rule 15 (names)


state 43

   16 names: names TOKEN_COMMA TOKEN_IDENTIFIER .  [TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_RPAR]
   17      | names TOKEN_COMMA TOKEN_IDENTIFIER . TOKEN_ASSIGN expression
   18      | names TOKEN_COMMA TOKEN_IDENTIFIER . TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END

    TOKEN_ASSIGN  shift, and go to state 61

    $default  reduce using rule 16 (names)


state 44

   28 declare_function_: type function_header TOKEN_LPAR TOKEN_RPAR . block_of_instructions
   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END

    TOKEN_BEGIN  shift, and go to state 62

    block_of_instructions  go to state 63


state 45

   16 names: names . TOKEN_COMMA TOKEN_IDENTIFIER
   17      | names . TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   18      | names . TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END
   26 declare_function_: type function_header TOKEN_LPAR names . TOKEN_RPAR block_of_instructions

    TOKEN_COMMA  shift, and go to state 25
    TOKEN_RPAR   shift, and go to state 64


state 46

   12 ranges: TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA .

    $default  reduce using rule 12 (ranges)


state 47

   13 ranges: ranges TOKEN_LSBRA TOKEN_UINT . TOKEN_RSBRA

    TOKEN_RSBRA  shift, and go to state 65


state 48

    1 program: global_variables declare_functions TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR . block_of_instructions
   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END

    TOKEN_BEGIN  shift, and go to state 62

    block_of_instructions  go to state 66


state 49

   14 names: . TOKEN_IDENTIFIER
   15      | . TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   16      | . names TOKEN_COMMA TOKEN_IDENTIFIER
   17      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   18      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END
   27 declare_function_: declare_function_ type function_header TOKEN_LPAR . names TOKEN_RPAR block_of_instructions
   29                  | declare_function_ type function_header TOKEN_LPAR . TOKEN_RPAR block_of_instructions

    TOKEN_RPAR        shift, and go to state 67
    TOKEN_IDENTIFIER  shift, and go to state 15

    names  go to state 68


state 50

   84 expression_base: TOKEN_LPAR expression . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 69


state 51

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   59         | TOKEN_IDENTIFIER TOKEN_LPAR . call_parameters TOKEN_RPAR
   60 call_parameters: . expression
   61                | .  [TOKEN_COMMA, TOKEN_RPAR]
   62                | . call_parameters TOKEN_COMMA expression
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add

    TOKEN_LPAR          shift, and go to state 31
    TOKEN_IDENTIFIER    shift, and go to state 32
    TOKEN_UINT          shift, and go to state 33
    TOKEN_REAL          shift, and go to state 34
    TOKEN_OPER_SIGNADD  shift, and go to state 35

    $default  reduce using rule 61 (call_parameters)

    number           go to state 36
    call_fce         go to state 37
    call_parameters  go to state 70
    variable         go to state 38
    expression_base  go to state 39
    expression_mul   go to state 40
    expression_add   go to state 41
    expression       go to state 71


state 52

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   76 array_access: TOKEN_LSBRA . exps TOKEN_RSBRA
   78 exps: . expression
   79     | . exps TOKEN_COMMA expression
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add

    TOKEN_LPAR          shift, and go to state 31
    TOKEN_IDENTIFIER    shift, and go to state 32
    TOKEN_UINT          shift, and go to state 33
    TOKEN_REAL          shift, and go to state 34
    TOKEN_OPER_SIGNADD  shift, and go to state 35

    number           go to state 36
    call_fce         go to state 37
    variable         go to state 38
    exps             go to state 72
    expression_base  go to state 39
    expression_mul   go to state 40
    expression_add   go to state 41
    expression       go to state 73


state 53

   72 variable: TOKEN_IDENTIFIER array_access .  [TOKEN_SEMICOLON, TOKEN_DOT, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD, TOKEN_OPER_MUL, TOKEN_PLUSPLUS, TOKEN_MINUSMINUS, TOKEN_BOOL_AND, TOKEN_BOOL_OR]
   77 array_access: array_access . TOKEN_LSBRA exps TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 74

    $default  reduce using rule 72 (variable)


state 54

   31 number: TOKEN_OPER_SIGNADD TOKEN_UINT .

    $default  reduce using rule 31 (number)


state 55

   30 number: TOKEN_OPER_SIGNADD TOKEN_REAL .

    $default  reduce using rule 30 (number)


state 56

   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   74 variable: variable TOKEN_DOT . call_fce
   75         | variable TOKEN_DOT . TOKEN_IDENTIFIER

    TOKEN_IDENTIFIER  shift, and go to state 75

    call_fce  go to state 76


state 57

   83 expression_base: variable TOKEN_PLUSPLUS .

    $default  reduce using rule 83 (expression_base)


state 58

   82 expression_base: variable TOKEN_MINUSMINUS .

    $default  reduce using rule 82 (expression_base)


state 59

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   86 expression_mul: expression_mul TOKEN_OPER_MUL . expression_base

    TOKEN_LPAR          shift, and go to state 31
    TOKEN_IDENTIFIER    shift, and go to state 32
    TOKEN_UINT          shift, and go to state 33
    TOKEN_REAL          shift, and go to state 34
    TOKEN_OPER_SIGNADD  shift, and go to state 35

    number           go to state 36
    call_fce         go to state 37
    variable         go to state 38
    expression_base  go to state 77


state 60

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   88 expression_add: expression_add TOKEN_OPER_SIGNADD . expression_mul

    TOKEN_LPAR          shift, and go to state 31
    TOKEN_IDENTIFIER    shift, and go to state 32
    TOKEN_UINT          shift, and go to state 33
    TOKEN_REAL          shift, and go to state 34
    TOKEN_OPER_SIGNADD  shift, and go to state 35

    number           go to state 36
    call_fce         go to state 37
    variable         go to state 38
    expression_base  go to state 39
    expression_mul   go to state 78


state 61

   17 names: names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN . expression
   18      | names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN . TOKEN_BEGIN values TOKEN_END
   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add

    TOKEN_LPAR          shift, and go to state 31
    TOKEN_BEGIN         shift, and go to state 79
    TOKEN_IDENTIFIER    shift, and go to state 32
    TOKEN_UINT          shift, and go to state 33
    TOKEN_REAL          shift, and go to state 34
    TOKEN_OPER_SIGNADD  shift, and go to state 35

    number           go to state 36
    call_fce         go to state 37
    variable         go to state 38
    expression_base  go to state 39
    expression_mul   go to state 40
    expression_add   go to state 41
    expression       go to state 80


state 62

    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   34                      | TOKEN_BEGIN . TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   35                      | TOKEN_BEGIN . TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END
   36                      | TOKEN_BEGIN . commands TOKEN_END
   37 commands: . matched
   38         | . commands matched
   39         | . unmatched
   40         | . commands unmatched
   41 forcycle: . TOKEN_FOR
   42 do_cycle: . TOKEN_DO
   43 while_cycle: . TOKEN_WHILE
   44 command: . forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   45        | . do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   46        | . while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   47        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   48        | . TOKEN_RETURN TOKEN_SEMICOLON
   49        | . TOKEN_BREAK TOKEN_SEMICOLON
   50        | . local_variables
   51        | . simple_command TOKEN_SEMICOLON
   52 simple_command: . assign
   53               | . variable TOKEN_PLUSPLUS
   54               | . variable TOKEN_MINUSMINUS
   55               | . variable
   56 assign: . variable_left TOKEN_ASSIGN expression
   57 variable_left: . TOKEN_IDENTIFIER
   58              | . TOKEN_IDENTIFIER array_access
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   63 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   64        | . command
   65        | . block_of_instructions
   66 unmatched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   67          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR command
   68          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_LOCATION    shift, and go to state 4
    TOKEN_OBJECT      shift, and go to state 5
    TOKEN_VAR_REAL    shift, and go to state 6
    TOKEN_VAR_INT     shift, and go to state 7
    TOKEN_IF          shift, and go to state 81
    TOKEN_WHILE       shift, and go to state 82
    TOKEN_DO          shift, and go to state 83
    TOKEN_FOR         shift, and go to state 84
    TOKEN_RETURN      shift, and go to state 85
    TOKEN_BREAK       shift, and go to state 86
    TOKEN_SEMICOLON   shift, and go to state 87
    TOKEN_BEGIN       shift, and go to state 62
    TOKEN_END         shift, and go to state 88
    TOKEN_IDENTIFIER  shift, and go to state 89

    type                   go to state 90
    local_variables        go to state 91
    simple_type            go to state 10
    complex_type           go to state 11
    block_of_instructions  go to state 92
    commands               go to state 93
    forcycle               go to state 94
    do_cycle               go to state 95
    while_cycle            go to state 96
    command                go to state 97
    simple_command         go to state 98
    assign                 go to state 99
    variable_left          go to state 100
    call_fce               go to state 37
    matched                go to state 101
    unmatched              go to state 102
    variable               go to state 103


state 63

   28 declare_function_: type function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 28 (declare_function_)


state 64

   26 declare_function_: type function_header TOKEN_LPAR names TOKEN_RPAR . block_of_instructions
   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END

    TOKEN_BEGIN  shift, and go to state 62

    block_of_instructions  go to state 104


state 65

   13 ranges: ranges TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA .

    $default  reduce using rule 13 (ranges)


state 66

    1 program: global_variables declare_functions TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 1 (program)


state 67

   29 declare_function_: declare_function_ type function_header TOKEN_LPAR TOKEN_RPAR . block_of_instructions
   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END

    TOKEN_BEGIN  shift, and go to state 62

    block_of_instructions  go to state 105


state 68

   16 names: names . TOKEN_COMMA TOKEN_IDENTIFIER
   17      | names . TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   18      | names . TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END
   27 declare_function_: declare_function_ type function_header TOKEN_LPAR names . TOKEN_RPAR block_of_instructions

    TOKEN_COMMA  shift, and go to state 25
    TOKEN_RPAR   shift, and go to state 106


state 69

   84 expression_base: TOKEN_LPAR expression TOKEN_RPAR .

    $default  reduce using rule 84 (expression_base)


state 70

   59 call_fce: TOKEN_IDENTIFIER TOKEN_LPAR call_parameters . TOKEN_RPAR
   62 call_parameters: call_parameters . TOKEN_COMMA expression

    TOKEN_COMMA  shift, and go to state 107
    TOKEN_RPAR   shift, and go to state 108


state 71

   60 call_parameters: expression .

    $default  reduce using rule 60 (call_parameters)


state 72

   76 array_access: TOKEN_LSBRA exps . TOKEN_RSBRA
   79 exps: exps . TOKEN_COMMA expression

    TOKEN_COMMA  shift, and go to state 109
    TOKEN_RSBRA  shift, and go to state 110


state 73

   78 exps: expression .

    $default  reduce using rule 78 (exps)


state 74

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   77 array_access: array_access TOKEN_LSBRA . exps TOKEN_RSBRA
   78 exps: . expression
   79     | . exps TOKEN_COMMA expression
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add

    TOKEN_LPAR          shift, and go to state 31
    TOKEN_IDENTIFIER    shift, and go to state 32
    TOKEN_UINT          shift, and go to state 33
    TOKEN_REAL          shift, and go to state 34
    TOKEN_OPER_SIGNADD  shift, and go to state 35

    number           go to state 36
    call_fce         go to state 37
    variable         go to state 38
    exps             go to state 111
    expression_base  go to state 39
    expression_mul   go to state 40
    expression_add   go to state 41
    expression       go to state 73


state 75

   59 call_fce: TOKEN_IDENTIFIER . TOKEN_LPAR call_parameters TOKEN_RPAR
   75 variable: variable TOKEN_DOT TOKEN_IDENTIFIER .  [TOKEN_SEMICOLON, TOKEN_DOT, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD, TOKEN_OPER_MUL, TOKEN_PLUSPLUS, TOKEN_MINUSMINUS, TOKEN_BOOL_AND, TOKEN_BOOL_OR]

    TOKEN_LPAR  shift, and go to state 51

    $default  reduce using rule 75 (variable)


state 76

   74 variable: variable TOKEN_DOT call_fce .

    $default  reduce using rule 74 (variable)


state 77

   86 expression_mul: expression_mul TOKEN_OPER_MUL expression_base .

    $default  reduce using rule 86 (expression_mul)


state 78

   86 expression_mul: expression_mul . TOKEN_OPER_MUL expression_base
   88 expression_add: expression_add TOKEN_OPER_SIGNADD expression_mul .  [TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD, TOKEN_BOOL_AND, TOKEN_BOOL_OR]

    TOKEN_OPER_MUL  shift, and go to state 59

    $default  reduce using rule 88 (expression_add)


state 79

   18 names: names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN . values TOKEN_END
   19 values: . number
   20       | . TOKEN_IDENTIFIER
   21       | . values TOKEN_COMMA TOKEN_IDENTIFIER
   22       | . values TOKEN_COMMA number
   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT

    TOKEN_IDENTIFIER    shift, and go to state 112
    TOKEN_UINT          shift, and go to state 33
    TOKEN_REAL          shift, and go to state 34
    TOKEN_OPER_SIGNADD  shift, and go to state 35

    values  go to state 113
    number  go to state 114


state 80

   17 names: names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN expression .

    $default  reduce using rule 17 (names)


state 81

   63 matched: TOKEN_IF . TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   66 unmatched: TOKEN_IF . TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   67          | TOKEN_IF . TOKEN_LPAR expression_bool TOKEN_RPAR command
   68          | TOKEN_IF . TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched

    TOKEN_LPAR  shift, and go to state 115


state 82

   43 while_cycle: TOKEN_WHILE .

    $default  reduce using rule 43 (while_cycle)


state 83

   42 do_cycle: TOKEN_DO .

    $default  reduce using rule 42 (do_cycle)


state 84

   41 forcycle: TOKEN_FOR .

    $default  reduce using rule 41 (forcycle)


state 85

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   47 command: TOKEN_RETURN . expression TOKEN_SEMICOLON
   48        | TOKEN_RETURN . TOKEN_SEMICOLON
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add

    TOKEN_SEMICOLON     shift, and go to state 116
    TOKEN_LPAR          shift, and go to state 31
    TOKEN_IDENTIFIER    shift, and go to state 32
    TOKEN_UINT          shift, and go to state 33
    TOKEN_REAL          shift, and go to state 34
    TOKEN_OPER_SIGNADD  shift, and go to state 35

    number           go to state 36
    call_fce         go to state 37
    variable         go to state 38
    expression_base  go to state 39
    expression_mul   go to state 40
    expression_add   go to state 41
    expression       go to state 117


state 86

   49 command: TOKEN_BREAK . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 118


state 87

   35 block_of_instructions: TOKEN_BEGIN TOKEN_SEMICOLON . TOKEN_END

    TOKEN_END  shift, and go to state 119


state 88

   34 block_of_instructions: TOKEN_BEGIN TOKEN_END .

    $default  reduce using rule 34 (block_of_instructions)


state 89

   57 variable_left: TOKEN_IDENTIFIER .  [TOKEN_ASSIGN]
   58              | TOKEN_IDENTIFIER . array_access
   59 call_fce: TOKEN_IDENTIFIER . TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: TOKEN_IDENTIFIER .  [TOKEN_SEMICOLON, TOKEN_DOT, TOKEN_RPAR, TOKEN_PLUSPLUS, TOKEN_MINUSMINUS]
   72         | TOKEN_IDENTIFIER . array_access
   76 array_access: . TOKEN_LSBRA exps TOKEN_RSBRA
   77             | . array_access TOKEN_LSBRA exps TOKEN_RSBRA

    TOKEN_LPAR   shift, and go to state 51
    TOKEN_LSBRA  shift, and go to state 52

    TOKEN_ASSIGN  reduce using rule 57 (variable_left)
    $default      reduce using rule 71 (variable)

    array_access  go to state 120


state 90

    6 local_variables: type . names TOKEN_SEMICOLON
   14 names: . TOKEN_IDENTIFIER
   15      | . TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   16      | . names TOKEN_COMMA TOKEN_IDENTIFIER
   17      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   18      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END

    TOKEN_IDENTIFIER  shift, and go to state 15

    names  go to state 16


state 91

   50 command: local_variables .

    $default  reduce using rule 50 (command)


state 92

   65 matched: block_of_instructions .

    $default  reduce using rule 65 (matched)


state 93

    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END
   36                      | TOKEN_BEGIN commands . TOKEN_END
   38 commands: commands . matched
   40         | commands . unmatched
   41 forcycle: . TOKEN_FOR
   42 do_cycle: . TOKEN_DO
   43 while_cycle: . TOKEN_WHILE
   44 command: . forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   45        | . do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   46        | . while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   47        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   48        | . TOKEN_RETURN TOKEN_SEMICOLON
   49        | . TOKEN_BREAK TOKEN_SEMICOLON
   50        | . local_variables
   51        | . simple_command TOKEN_SEMICOLON
   52 simple_command: . assign
   53               | . variable TOKEN_PLUSPLUS
   54               | . variable TOKEN_MINUSMINUS
   55               | . variable
   56 assign: . variable_left TOKEN_ASSIGN expression
   57 variable_left: . TOKEN_IDENTIFIER
   58              | . TOKEN_IDENTIFIER array_access
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   63 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   64        | . command
   65        | . block_of_instructions
   66 unmatched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   67          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR command
   68          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_LOCATION    shift, and go to state 4
    TOKEN_OBJECT      shift, and go to state 5
    TOKEN_VAR_REAL    shift, and go to state 6
    TOKEN_VAR_INT     shift, and go to state 7
    TOKEN_IF          shift, and go to state 81
    TOKEN_WHILE       shift, and go to state 82
    TOKEN_DO          shift, and go to state 83
    TOKEN_FOR         shift, and go to state 84
    TOKEN_RETURN      shift, and go to state 85
    TOKEN_BREAK       shift, and go to state 86
    TOKEN_BEGIN       shift, and go to state 62
    TOKEN_END         shift, and go to state 121
    TOKEN_IDENTIFIER  shift, and go to state 89

    type                   go to state 90
    local_variables        go to state 91
    simple_type            go to state 10
    complex_type           go to state 11
    block_of_instructions  go to state 92
    forcycle               go to state 94
    do_cycle               go to state 95
    while_cycle            go to state 96
    command                go to state 97
    simple_command         go to state 98
    assign                 go to state 99
    variable_left          go to state 100
    call_fce               go to state 37
    matched                go to state 122
    unmatched              go to state 123
    variable               go to state 103


state 94

   44 command: forcycle . TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions

    TOKEN_LPAR  shift, and go to state 124


state 95

   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END
   45 command: do_cycle . block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON

    TOKEN_BEGIN  shift, and go to state 62

    block_of_instructions  go to state 125


state 96

   46 command: while_cycle . TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions

    TOKEN_LPAR  shift, and go to state 126


state 97

   64 matched: command .

    $default  reduce using rule 64 (matched)


state 98

   51 command: simple_command . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 127


state 99

   52 simple_command: assign .

    $default  reduce using rule 52 (simple_command)


state 100

   56 assign: variable_left . TOKEN_ASSIGN expression

    TOKEN_ASSIGN  shift, and go to state 128


state 101

   37 commands: matched .

    $default  reduce using rule 37 (commands)


state 102

   39 commands: unmatched .

    $default  reduce using rule 39 (commands)


state 103

   53 simple_command: variable . TOKEN_PLUSPLUS
   54               | variable . TOKEN_MINUSMINUS
   55               | variable .  [TOKEN_SEMICOLON, TOKEN_RPAR]
   74 variable: variable . TOKEN_DOT call_fce
   75         | variable . TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_DOT         shift, and go to state 56
    TOKEN_PLUSPLUS    shift, and go to state 129
    TOKEN_MINUSMINUS  shift, and go to state 130

    $default  reduce using rule 55 (simple_command)


state 104

   26 declare_function_: type function_header TOKEN_LPAR names TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 26 (declare_function_)


state 105

   29 declare_function_: declare_function_ type function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 29 (declare_function_)


state 106

   27 declare_function_: declare_function_ type function_header TOKEN_LPAR names TOKEN_RPAR . block_of_instructions
   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END

    TOKEN_BEGIN  shift, and go to state 62

    block_of_instructions  go to state 131


state 107

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   62 call_parameters: call_parameters TOKEN_COMMA . expression
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add

    TOKEN_LPAR          shift, and go to state 31
    TOKEN_IDENTIFIER    shift, and go to state 32
    TOKEN_UINT          shift, and go to state 33
    TOKEN_REAL          shift, and go to state 34
    TOKEN_OPER_SIGNADD  shift, and go to state 35

    number           go to state 36
    call_fce         go to state 37
    variable         go to state 38
    expression_base  go to state 39
    expression_mul   go to state 40
    expression_add   go to state 41
    expression       go to state 132


state 108

   59 call_fce: TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR .

    $default  reduce using rule 59 (call_fce)


state 109

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   79 exps: exps TOKEN_COMMA . expression
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add

    TOKEN_LPAR          shift, and go to state 31
    TOKEN_IDENTIFIER    shift, and go to state 32
    TOKEN_UINT          shift, and go to state 33
    TOKEN_REAL          shift, and go to state 34
    TOKEN_OPER_SIGNADD  shift, and go to state 35

    number           go to state 36
    call_fce         go to state 37
    variable         go to state 38
    expression_base  go to state 39
    expression_mul   go to state 40
    expression_add   go to state 41
    expression       go to state 133


state 110

   76 array_access: TOKEN_LSBRA exps TOKEN_RSBRA .

    $default  reduce using rule 76 (array_access)


state 111

   77 array_access: array_access TOKEN_LSBRA exps . TOKEN_RSBRA
   79 exps: exps . TOKEN_COMMA expression

    TOKEN_COMMA  shift, and go to state 109
    TOKEN_RSBRA  shift, and go to state 134


state 112

   20 values: TOKEN_IDENTIFIER .

    $default  reduce using rule 20 (values)


state 113

   18 names: names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values . TOKEN_END
   21 values: values . TOKEN_COMMA TOKEN_IDENTIFIER
   22       | values . TOKEN_COMMA number

    TOKEN_COMMA  shift, and go to state 135
    TOKEN_END    shift, and go to state 136


state 114

   19 values: number .

    $default  reduce using rule 19 (values)


state 115

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   63 matched: TOKEN_IF TOKEN_LPAR . expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   66 unmatched: TOKEN_IF TOKEN_LPAR . expression_bool TOKEN_RPAR block_of_instructions
   67          | TOKEN_IF TOKEN_LPAR . expression_bool TOKEN_RPAR command
   68          | TOKEN_IF TOKEN_LPAR . expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add
   90 expression_bool_base: . expression
   91                     | . expression TOKEN_OPER_REL expression
   92 expression_bool_or: . expression_bool_base
   93                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   94 expression_bool: . expression_bool_or
   95                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR          shift, and go to state 31
    TOKEN_IDENTIFIER    shift, and go to state 32
    TOKEN_UINT          shift, and go to state 33
    TOKEN_REAL          shift, and go to state 34
    TOKEN_OPER_SIGNADD  shift, and go to state 35

    number                go to state 36
    call_fce              go to state 37
    variable              go to state 38
    expression_base       go to state 39
    expression_mul        go to state 40
    expression_add        go to state 41
    expression            go to state 137
    expression_bool_base  go to state 138
    expression_bool_or    go to state 139
    expression_bool       go to state 140


state 116

   48 command: TOKEN_RETURN TOKEN_SEMICOLON .

    $default  reduce using rule 48 (command)


state 117

   47 command: TOKEN_RETURN expression . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 141


state 118

   49 command: TOKEN_BREAK TOKEN_SEMICOLON .

    $default  reduce using rule 49 (command)


state 119

   35 block_of_instructions: TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END .

    $default  reduce using rule 35 (block_of_instructions)


state 120

   58 variable_left: TOKEN_IDENTIFIER array_access .  [TOKEN_ASSIGN]
   72 variable: TOKEN_IDENTIFIER array_access .  [TOKEN_SEMICOLON, TOKEN_DOT, TOKEN_RPAR, TOKEN_PLUSPLUS, TOKEN_MINUSMINUS]
   77 array_access: array_access . TOKEN_LSBRA exps TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 74

    TOKEN_ASSIGN  reduce using rule 58 (variable_left)
    $default      reduce using rule 72 (variable)


state 121

   36 block_of_instructions: TOKEN_BEGIN commands TOKEN_END .

    $default  reduce using rule 36 (block_of_instructions)


state 122

   38 commands: commands matched .

    $default  reduce using rule 38 (commands)


state 123

   40 commands: commands unmatched .

    $default  reduce using rule 40 (commands)


state 124

    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   44 command: forcycle TOKEN_LPAR . init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   56 assign: . variable_left TOKEN_ASSIGN expression
   57 variable_left: . TOKEN_IDENTIFIER
   58              | . TOKEN_IDENTIFIER array_access
   69 init: . local_variables
   70     | . assign

    TOKEN_LOCATION    shift, and go to state 4
    TOKEN_OBJECT      shift, and go to state 5
    TOKEN_VAR_REAL    shift, and go to state 6
    TOKEN_VAR_INT     shift, and go to state 7
    TOKEN_IDENTIFIER  shift, and go to state 142

    type             go to state 90
    local_variables  go to state 143
    simple_type      go to state 10
    complex_type     go to state 11
    assign           go to state 144
    variable_left    go to state 100
    init             go to state 145


state 125

   45 command: do_cycle block_of_instructions . TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON

    TOKEN_WHILE  shift, and go to state 146


state 126

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   46 command: while_cycle TOKEN_LPAR . expression_bool TOKEN_RPAR block_of_instructions
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add
   90 expression_bool_base: . expression
   91                     | . expression TOKEN_OPER_REL expression
   92 expression_bool_or: . expression_bool_base
   93                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   94 expression_bool: . expression_bool_or
   95                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR          shift, and go to state 31
    TOKEN_IDENTIFIER    shift, and go to state 32
    TOKEN_UINT          shift, and go to state 33
    TOKEN_REAL          shift, and go to state 34
    TOKEN_OPER_SIGNADD  shift, and go to state 35

    number                go to state 36
    call_fce              go to state 37
    variable              go to state 38
    expression_base       go to state 39
    expression_mul        go to state 40
    expression_add        go to state 41
    expression            go to state 137
    expression_bool_base  go to state 138
    expression_bool_or    go to state 139
    expression_bool       go to state 147


state 127

   51 command: simple_command TOKEN_SEMICOLON .

    $default  reduce using rule 51 (command)


state 128

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   56 assign: variable_left TOKEN_ASSIGN . expression
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add

    TOKEN_LPAR          shift, and go to state 31
    TOKEN_IDENTIFIER    shift, and go to state 32
    TOKEN_UINT          shift, and go to state 33
    TOKEN_REAL          shift, and go to state 34
    TOKEN_OPER_SIGNADD  shift, and go to state 35

    number           go to state 36
    call_fce         go to state 37
    variable         go to state 38
    expression_base  go to state 39
    expression_mul   go to state 40
    expression_add   go to state 41
    expression       go to state 148


state 129

   53 simple_command: variable TOKEN_PLUSPLUS .

    $default  reduce using rule 53 (simple_command)


state 130

   54 simple_command: variable TOKEN_MINUSMINUS .

    $default  reduce using rule 54 (simple_command)


state 131

   27 declare_function_: declare_function_ type function_header TOKEN_LPAR names TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 27 (declare_function_)


state 132

   62 call_parameters: call_parameters TOKEN_COMMA expression .

    $default  reduce using rule 62 (call_parameters)


state 133

   79 exps: exps TOKEN_COMMA expression .

    $default  reduce using rule 79 (exps)


state 134

   77 array_access: array_access TOKEN_LSBRA exps TOKEN_RSBRA .

    $default  reduce using rule 77 (array_access)


state 135

   21 values: values TOKEN_COMMA . TOKEN_IDENTIFIER
   22       | values TOKEN_COMMA . number
   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT

    TOKEN_IDENTIFIER    shift, and go to state 149
    TOKEN_UINT          shift, and go to state 33
    TOKEN_REAL          shift, and go to state 34
    TOKEN_OPER_SIGNADD  shift, and go to state 35

    number  go to state 150


state 136

   18 names: names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END .

    $default  reduce using rule 18 (names)


state 137

   90 expression_bool_base: expression .  [TOKEN_SEMICOLON, TOKEN_RPAR, TOKEN_BOOL_AND, TOKEN_BOOL_OR]
   91                     | expression . TOKEN_OPER_REL expression

    TOKEN_OPER_REL  shift, and go to state 151

    $default  reduce using rule 90 (expression_bool_base)


state 138

   92 expression_bool_or: expression_bool_base .

    $default  reduce using rule 92 (expression_bool_or)


state 139

   93 expression_bool_or: expression_bool_or . TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   94 expression_bool: expression_bool_or .  [TOKEN_SEMICOLON, TOKEN_RPAR, TOKEN_BOOL_AND]

    TOKEN_BOOL_OR  shift, and go to state 152

    $default  reduce using rule 94 (expression_bool)


state 140

   63 matched: TOKEN_IF TOKEN_LPAR expression_bool . TOKEN_RPAR matched TOKEN_ELSE matched
   66 unmatched: TOKEN_IF TOKEN_LPAR expression_bool . TOKEN_RPAR block_of_instructions
   67          | TOKEN_IF TOKEN_LPAR expression_bool . TOKEN_RPAR command
   68          | TOKEN_IF TOKEN_LPAR expression_bool . TOKEN_RPAR matched TOKEN_ELSE unmatched
   95 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_RPAR      shift, and go to state 153
    TOKEN_BOOL_AND  shift, and go to state 154


state 141

   47 command: TOKEN_RETURN expression TOKEN_SEMICOLON .

    $default  reduce using rule 47 (command)


state 142

   57 variable_left: TOKEN_IDENTIFIER .  [TOKEN_ASSIGN]
   58              | TOKEN_IDENTIFIER . array_access
   76 array_access: . TOKEN_LSBRA exps TOKEN_RSBRA
   77             | . array_access TOKEN_LSBRA exps TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 52

    $default  reduce using rule 57 (variable_left)

    array_access  go to state 155


state 143

   69 init: local_variables .

    $default  reduce using rule 69 (init)


state 144

   70 init: assign .

    $default  reduce using rule 70 (init)


state 145

   44 command: forcycle TOKEN_LPAR init . TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions

    TOKEN_SEMICOLON  shift, and go to state 156


state 146

   45 command: do_cycle block_of_instructions TOKEN_WHILE . TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON

    TOKEN_LPAR  shift, and go to state 157


state 147

   46 command: while_cycle TOKEN_LPAR expression_bool . TOKEN_RPAR block_of_instructions
   95 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_RPAR      shift, and go to state 158
    TOKEN_BOOL_AND  shift, and go to state 154


state 148

   56 assign: variable_left TOKEN_ASSIGN expression .

    $default  reduce using rule 56 (assign)


state 149

   21 values: values TOKEN_COMMA TOKEN_IDENTIFIER .

    $default  reduce using rule 21 (values)


state 150

   22 values: values TOKEN_COMMA number .

    $default  reduce using rule 22 (values)


state 151

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add
   91 expression_bool_base: expression TOKEN_OPER_REL . expression

    TOKEN_LPAR          shift, and go to state 31
    TOKEN_IDENTIFIER    shift, and go to state 32
    TOKEN_UINT          shift, and go to state 33
    TOKEN_REAL          shift, and go to state 34
    TOKEN_OPER_SIGNADD  shift, and go to state 35

    number           go to state 36
    call_fce         go to state 37
    variable         go to state 38
    expression_base  go to state 39
    expression_mul   go to state 40
    expression_add   go to state 41
    expression       go to state 159


state 152

   93 expression_bool_or: expression_bool_or TOKEN_BOOL_OR . TOKEN_LPAR expression_bool TOKEN_RPAR

    TOKEN_LPAR  shift, and go to state 160


state 153

    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END
   41 forcycle: . TOKEN_FOR
   42 do_cycle: . TOKEN_DO
   43 while_cycle: . TOKEN_WHILE
   44 command: . forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   45        | . do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   46        | . while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   47        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   48        | . TOKEN_RETURN TOKEN_SEMICOLON
   49        | . TOKEN_BREAK TOKEN_SEMICOLON
   50        | . local_variables
   51        | . simple_command TOKEN_SEMICOLON
   52 simple_command: . assign
   53               | . variable TOKEN_PLUSPLUS
   54               | . variable TOKEN_MINUSMINUS
   55               | . variable
   56 assign: . variable_left TOKEN_ASSIGN expression
   57 variable_left: . TOKEN_IDENTIFIER
   58              | . TOKEN_IDENTIFIER array_access
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   63 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   63        | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR . matched TOKEN_ELSE matched
   64        | . command
   65        | . block_of_instructions
   66 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR . block_of_instructions
   67          | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR . command
   68          | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR . matched TOKEN_ELSE unmatched
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_LOCATION    shift, and go to state 4
    TOKEN_OBJECT      shift, and go to state 5
    TOKEN_VAR_REAL    shift, and go to state 6
    TOKEN_VAR_INT     shift, and go to state 7
    TOKEN_IF          shift, and go to state 161
    TOKEN_WHILE       shift, and go to state 82
    TOKEN_DO          shift, and go to state 83
    TOKEN_FOR         shift, and go to state 84
    TOKEN_RETURN      shift, and go to state 85
    TOKEN_BREAK       shift, and go to state 86
    TOKEN_BEGIN       shift, and go to state 62
    TOKEN_IDENTIFIER  shift, and go to state 89

    type                   go to state 90
    local_variables        go to state 91
    simple_type            go to state 10
    complex_type           go to state 11
    block_of_instructions  go to state 162
    forcycle               go to state 94
    do_cycle               go to state 95
    while_cycle            go to state 96
    command                go to state 163
    simple_command         go to state 98
    assign                 go to state 99
    variable_left          go to state 100
    call_fce               go to state 37
    matched                go to state 164
    variable               go to state 103


state 154

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add
   90 expression_bool_base: . expression
   91                     | . expression TOKEN_OPER_REL expression
   92 expression_bool_or: . expression_bool_base
   93                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   95 expression_bool: expression_bool TOKEN_BOOL_AND . expression_bool_or

    TOKEN_LPAR          shift, and go to state 31
    TOKEN_IDENTIFIER    shift, and go to state 32
    TOKEN_UINT          shift, and go to state 33
    TOKEN_REAL          shift, and go to state 34
    TOKEN_OPER_SIGNADD  shift, and go to state 35

    number                go to state 36
    call_fce              go to state 37
    variable              go to state 38
    expression_base       go to state 39
    expression_mul        go to state 40
    expression_add        go to state 41
    expression            go to state 137
    expression_bool_base  go to state 138
    expression_bool_or    go to state 165


state 155

   58 variable_left: TOKEN_IDENTIFIER array_access .  [TOKEN_ASSIGN]
   77 array_access: array_access . TOKEN_LSBRA exps TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 74

    $default  reduce using rule 58 (variable_left)


state 156

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   44 command: forcycle TOKEN_LPAR init TOKEN_SEMICOLON . expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add
   90 expression_bool_base: . expression
   91                     | . expression TOKEN_OPER_REL expression
   92 expression_bool_or: . expression_bool_base
   93                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   94 expression_bool: . expression_bool_or
   95                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR          shift, and go to state 31
    TOKEN_IDENTIFIER    shift, and go to state 32
    TOKEN_UINT          shift, and go to state 33
    TOKEN_REAL          shift, and go to state 34
    TOKEN_OPER_SIGNADD  shift, and go to state 35

    number                go to state 36
    call_fce              go to state 37
    variable              go to state 38
    expression_base       go to state 39
    expression_mul        go to state 40
    expression_add        go to state 41
    expression            go to state 137
    expression_bool_base  go to state 138
    expression_bool_or    go to state 139
    expression_bool       go to state 166


state 157

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   45 command: do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR . expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add
   90 expression_bool_base: . expression
   91                     | . expression TOKEN_OPER_REL expression
   92 expression_bool_or: . expression_bool_base
   93                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   94 expression_bool: . expression_bool_or
   95                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR          shift, and go to state 31
    TOKEN_IDENTIFIER    shift, and go to state 32
    TOKEN_UINT          shift, and go to state 33
    TOKEN_REAL          shift, and go to state 34
    TOKEN_OPER_SIGNADD  shift, and go to state 35

    number                go to state 36
    call_fce              go to state 37
    variable              go to state 38
    expression_base       go to state 39
    expression_mul        go to state 40
    expression_add        go to state 41
    expression            go to state 137
    expression_bool_base  go to state 138
    expression_bool_or    go to state 139
    expression_bool       go to state 167


state 158

   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END
   46 command: while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR . block_of_instructions

    TOKEN_BEGIN  shift, and go to state 62

    block_of_instructions  go to state 168


state 159

   91 expression_bool_base: expression TOKEN_OPER_REL expression .

    $default  reduce using rule 91 (expression_bool_base)


state 160

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add
   90 expression_bool_base: . expression
   91                     | . expression TOKEN_OPER_REL expression
   92 expression_bool_or: . expression_bool_base
   93                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   93                   | expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR . expression_bool TOKEN_RPAR
   94 expression_bool: . expression_bool_or
   95                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR          shift, and go to state 31
    TOKEN_IDENTIFIER    shift, and go to state 32
    TOKEN_UINT          shift, and go to state 33
    TOKEN_REAL          shift, and go to state 34
    TOKEN_OPER_SIGNADD  shift, and go to state 35

    number                go to state 36
    call_fce              go to state 37
    variable              go to state 38
    expression_base       go to state 39
    expression_mul        go to state 40
    expression_add        go to state 41
    expression            go to state 137
    expression_bool_base  go to state 138
    expression_bool_or    go to state 139
    expression_bool       go to state 169


state 161

   63 matched: TOKEN_IF . TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched

    TOKEN_LPAR  shift, and go to state 170


state 162

   65 matched: block_of_instructions .  [TOKEN_ELSE]
   66 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions .  [TOKEN_LOCATION, TOKEN_OBJECT, TOKEN_VAR_REAL, TOKEN_VAR_INT, TOKEN_IF, TOKEN_WHILE, TOKEN_DO, TOKEN_FOR, TOKEN_RETURN, TOKEN_BREAK, TOKEN_BEGIN, TOKEN_END, TOKEN_IDENTIFIER]

    TOKEN_ELSE  reduce using rule 65 (matched)
    $default    reduce using rule 66 (unmatched)


state 163

   64 matched: command .  [TOKEN_ELSE]
   67 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR command .  [TOKEN_LOCATION, TOKEN_OBJECT, TOKEN_VAR_REAL, TOKEN_VAR_INT, TOKEN_IF, TOKEN_WHILE, TOKEN_DO, TOKEN_FOR, TOKEN_RETURN, TOKEN_BREAK, TOKEN_BEGIN, TOKEN_END, TOKEN_IDENTIFIER]

    TOKEN_ELSE  reduce using rule 64 (matched)
    $default    reduce using rule 67 (unmatched)


state 164

   63 matched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched . TOKEN_ELSE matched
   68 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched . TOKEN_ELSE unmatched

    TOKEN_ELSE  shift, and go to state 171


state 165

   93 expression_bool_or: expression_bool_or . TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   95 expression_bool: expression_bool TOKEN_BOOL_AND expression_bool_or .  [TOKEN_SEMICOLON, TOKEN_RPAR, TOKEN_BOOL_AND]

    TOKEN_BOOL_OR  shift, and go to state 152

    $default  reduce using rule 95 (expression_bool)


state 166

   44 command: forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool . TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   95 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_SEMICOLON  shift, and go to state 172
    TOKEN_BOOL_AND   shift, and go to state 154


state 167

   45 command: do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool . TOKEN_RPAR TOKEN_SEMICOLON
   95 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_RPAR      shift, and go to state 173
    TOKEN_BOOL_AND  shift, and go to state 154


state 168

   46 command: while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 46 (command)


state 169

   93 expression_bool_or: expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool . TOKEN_RPAR
   95 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_RPAR      shift, and go to state 174
    TOKEN_BOOL_AND  shift, and go to state 154


state 170

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   63 matched: TOKEN_IF TOKEN_LPAR . expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add
   90 expression_bool_base: . expression
   91                     | . expression TOKEN_OPER_REL expression
   92 expression_bool_or: . expression_bool_base
   93                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   94 expression_bool: . expression_bool_or
   95                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR          shift, and go to state 31
    TOKEN_IDENTIFIER    shift, and go to state 32
    TOKEN_UINT          shift, and go to state 33
    TOKEN_REAL          shift, and go to state 34
    TOKEN_OPER_SIGNADD  shift, and go to state 35

    number                go to state 36
    call_fce              go to state 37
    variable              go to state 38
    expression_base       go to state 39
    expression_mul        go to state 40
    expression_add        go to state 41
    expression            go to state 137
    expression_bool_base  go to state 138
    expression_bool_or    go to state 139
    expression_bool       go to state 175


state 171

    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END
   41 forcycle: . TOKEN_FOR
   42 do_cycle: . TOKEN_DO
   43 while_cycle: . TOKEN_WHILE
   44 command: . forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   45        | . do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   46        | . while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   47        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   48        | . TOKEN_RETURN TOKEN_SEMICOLON
   49        | . TOKEN_BREAK TOKEN_SEMICOLON
   50        | . local_variables
   51        | . simple_command TOKEN_SEMICOLON
   52 simple_command: . assign
   53               | . variable TOKEN_PLUSPLUS
   54               | . variable TOKEN_MINUSMINUS
   55               | . variable
   56 assign: . variable_left TOKEN_ASSIGN expression
   57 variable_left: . TOKEN_IDENTIFIER
   58              | . TOKEN_IDENTIFIER array_access
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   63 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   63        | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE . matched
   64        | . command
   65        | . block_of_instructions
   66 unmatched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   67          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR command
   68          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched
   68          | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE . unmatched
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_LOCATION    shift, and go to state 4
    TOKEN_OBJECT      shift, and go to state 5
    TOKEN_VAR_REAL    shift, and go to state 6
    TOKEN_VAR_INT     shift, and go to state 7
    TOKEN_IF          shift, and go to state 81
    TOKEN_WHILE       shift, and go to state 82
    TOKEN_DO          shift, and go to state 83
    TOKEN_FOR         shift, and go to state 84
    TOKEN_RETURN      shift, and go to state 85
    TOKEN_BREAK       shift, and go to state 86
    TOKEN_BEGIN       shift, and go to state 62
    TOKEN_IDENTIFIER  shift, and go to state 89

    type                   go to state 90
    local_variables        go to state 91
    simple_type            go to state 10
    complex_type           go to state 11
    block_of_instructions  go to state 92
    forcycle               go to state 94
    do_cycle               go to state 95
    while_cycle            go to state 96
    command                go to state 97
    simple_command         go to state 98
    assign                 go to state 99
    variable_left          go to state 100
    call_fce               go to state 37
    matched                go to state 176
    unmatched              go to state 177
    variable               go to state 103


state 172

   44 command: forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON . simple_command TOKEN_RPAR block_of_instructions
   52 simple_command: . assign
   53               | . variable TOKEN_PLUSPLUS
   54               | . variable TOKEN_MINUSMINUS
   55               | . variable
   56 assign: . variable_left TOKEN_ASSIGN expression
   57 variable_left: . TOKEN_IDENTIFIER
   58              | . TOKEN_IDENTIFIER array_access
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_IDENTIFIER  shift, and go to state 89

    simple_command  go to state 178
    assign          go to state 99
    variable_left   go to state 100
    call_fce        go to state 37
    variable        go to state 103


state 173

   45 command: do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 179


state 174

   93 expression_bool_or: expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR .

    $default  reduce using rule 93 (expression_bool_or)


state 175

   63 matched: TOKEN_IF TOKEN_LPAR expression_bool . TOKEN_RPAR matched TOKEN_ELSE matched
   95 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_RPAR      shift, and go to state 180
    TOKEN_BOOL_AND  shift, and go to state 154


state 176

   63 matched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched .

    $default  reduce using rule 63 (matched)


state 177

   68 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched .

    $default  reduce using rule 68 (unmatched)


state 178

   44 command: forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command . TOKEN_RPAR block_of_instructions

    TOKEN_RPAR  shift, and go to state 181


state 179

   45 command: do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON .

    $default  reduce using rule 45 (command)


state 180

    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END
   41 forcycle: . TOKEN_FOR
   42 do_cycle: . TOKEN_DO
   43 while_cycle: . TOKEN_WHILE
   44 command: . forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   45        | . do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   46        | . while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   47        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   48        | . TOKEN_RETURN TOKEN_SEMICOLON
   49        | . TOKEN_BREAK TOKEN_SEMICOLON
   50        | . local_variables
   51        | . simple_command TOKEN_SEMICOLON
   52 simple_command: . assign
   53               | . variable TOKEN_PLUSPLUS
   54               | . variable TOKEN_MINUSMINUS
   55               | . variable
   56 assign: . variable_left TOKEN_ASSIGN expression
   57 variable_left: . TOKEN_IDENTIFIER
   58              | . TOKEN_IDENTIFIER array_access
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   63 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   63        | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR . matched TOKEN_ELSE matched
   64        | . command
   65        | . block_of_instructions
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_LOCATION    shift, and go to state 4
    TOKEN_OBJECT      shift, and go to state 5
    TOKEN_VAR_REAL    shift, and go to state 6
    TOKEN_VAR_INT     shift, and go to state 7
    TOKEN_IF          shift, and go to state 161
    TOKEN_WHILE       shift, and go to state 82
    TOKEN_DO          shift, and go to state 83
    TOKEN_FOR         shift, and go to state 84
    TOKEN_RETURN      shift, and go to state 85
    TOKEN_BREAK       shift, and go to state 86
    TOKEN_BEGIN       shift, and go to state 62
    TOKEN_IDENTIFIER  shift, and go to state 89

    type                   go to state 90
    local_variables        go to state 91
    simple_type            go to state 10
    complex_type           go to state 11
    block_of_instructions  go to state 92
    forcycle               go to state 94
    do_cycle               go to state 95
    while_cycle            go to state 96
    command                go to state 97
    simple_command         go to state 98
    assign                 go to state 99
    variable_left          go to state 100
    call_fce               go to state 37
    matched                go to state 182
    variable               go to state 103


state 181

   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END
   44 command: forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR . block_of_instructions

    TOKEN_BEGIN  shift, and go to state 62

    block_of_instructions  go to state 183


state 182

   63 matched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched . TOKEN_ELSE matched

    TOKEN_ELSE  shift, and go to state 184


state 183

   44 command: forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 44 (command)


state 184

    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END
   41 forcycle: . TOKEN_FOR
   42 do_cycle: . TOKEN_DO
   43 while_cycle: . TOKEN_WHILE
   44 command: . forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   45        | . do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   46        | . while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   47        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   48        | . TOKEN_RETURN TOKEN_SEMICOLON
   49        | . TOKEN_BREAK TOKEN_SEMICOLON
   50        | . local_variables
   51        | . simple_command TOKEN_SEMICOLON
   52 simple_command: . assign
   53               | . variable TOKEN_PLUSPLUS
   54               | . variable TOKEN_MINUSMINUS
   55               | . variable
   56 assign: . variable_left TOKEN_ASSIGN expression
   57 variable_left: . TOKEN_IDENTIFIER
   58              | . TOKEN_IDENTIFIER array_access
   59 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   63 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   63        | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE . matched
   64        | . command
   65        | . block_of_instructions
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT call_fce
   75         | . variable TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_LOCATION    shift, and go to state 4
    TOKEN_OBJECT      shift, and go to state 5
    TOKEN_VAR_REAL    shift, and go to state 6
    TOKEN_VAR_INT     shift, and go to state 7
    TOKEN_IF          shift, and go to state 161
    TOKEN_WHILE       shift, and go to state 82
    TOKEN_DO          shift, and go to state 83
    TOKEN_FOR         shift, and go to state 84
    TOKEN_RETURN      shift, and go to state 85
    TOKEN_BREAK       shift, and go to state 86
    TOKEN_BEGIN       shift, and go to state 62
    TOKEN_IDENTIFIER  shift, and go to state 89

    type                   go to state 90
    local_variables        go to state 91
    simple_type            go to state 10
    complex_type           go to state 11
    block_of_instructions  go to state 92
    forcycle               go to state 94
    do_cycle               go to state 95
    while_cycle            go to state 96
    command                go to state 97
    simple_command         go to state 98
    assign                 go to state 99
    variable_left          go to state 100
    call_fce               go to state 37
    matched                go to state 176
    variable               go to state 103
