Grammar

    0 $accept: program $end

    1 program: global_variables declare_functions TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR block_of_instructions

    2 global_variables: /* empty */
    3                 | global_variables local_variables

    4 type: simple_type
    5     | complex_type

    6 local_variables: type names TOKEN_SEMICOLON

    7 simple_type: TOKEN_VAR_REAL
    8            | TOKEN_VAR_INT
    9            | TOKEN_LOCATION
   10            | TOKEN_OBJECT

   11 complex_type: simple_type ranges

   12 ranges: TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA
   13       | ranges TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA

   14 names: TOKEN_IDENTIFIER
   15      | TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   16      | names TOKEN_COMMA TOKEN_IDENTIFIER
   17      | names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   18      | names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END

   19 values: number
   20       | TOKEN_IDENTIFIER
   21       | values TOKEN_COMMA TOKEN_IDENTIFIER
   22       | values TOKEN_COMMA number

   23 declare_functions: /* empty */
   24                  | declare_function_

   25 function_header: TOKEN_FUNCTION TOKEN_IDENTIFIER

   26 return_type: type
   27            | TOKEN_VOID

   28 parameters: type TOKEN_IDENTIFIER
   29           | parameters TOKEN_COMMA type TOKEN_IDENTIFIER

   30 declare_function_: return_type function_header TOKEN_LPAR parameters TOKEN_RPAR block_of_instructions
   31                  | declare_function_ return_type function_header TOKEN_LPAR parameters TOKEN_RPAR block_of_instructions
   32                  | return_type function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions
   33                  | declare_function_ return_type function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions

   34 number: TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | TOKEN_REAL
   37       | TOKEN_UINT

   38 begin: TOKEN_BEGIN

   39 end: TOKEN_END

   40 block_of_instructions: begin end
   41                      | begin TOKEN_SEMICOLON end
   42                      | begin commands end

   43 commands: matched
   44         | commands matched
   45         | unmatched
   46         | commands unmatched

   47 forcycle: TOKEN_FOR

   48 do_cycle: TOKEN_DO

   49 while_cycle: TOKEN_WHILE

   50 command: forcycle TOKEN_LPAR init expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   51        | do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   52        | while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   53        | TOKEN_RETURN expression TOKEN_SEMICOLON
   54        | TOKEN_RETURN TOKEN_SEMICOLON
   55        | TOKEN_BREAK TOKEN_SEMICOLON
   56        | simple_command TOKEN_SEMICOLON

   57 command_var: local_variables
   58            | command

   59 simple_command: assign
   60               | variable TOKEN_PLUSPLUS
   61               | variable TOKEN_MINUSMINUS
   62               | variable

   63 assign: variable_left TOKEN_ASSIGN expression

   64 variable_left: TOKEN_IDENTIFIER
   65              | TOKEN_IDENTIFIER array_access

   66 call_fce: TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR

   68 call_parameters: expression
   69                | /* empty */
   70                | call_parameters TOKEN_COMMA expression

   71 matched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   72        | command_var
   73        | block_of_instructions

   74 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   75          | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR command
   76          | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched

   77 init: local_variables
   78     | assign TOKEN_SEMICOLON

   79 variable: TOKEN_IDENTIFIER
   80         | TOKEN_IDENTIFIER array_access
   81         | call_fce
   82         | variable TOKEN_DOT call_fce
   83         | variable TOKEN_DOT TOKEN_IDENTIFIER

   84 array_access: TOKEN_LSBRA exps TOKEN_RSBRA
   85             | array_access TOKEN_LSBRA exps TOKEN_RSBRA

   86 exps: expression
   87     | exps TOKEN_COMMA expression

   88 expression_base: variable
   89                | number
   90                | variable TOKEN_MINUSMINUS
   91                | variable TOKEN_PLUSPLUS
   92                | TOKEN_LPAR expression TOKEN_RPAR

   93 expression_mul: expression_base
   94               | expression_mul TOKEN_OPER_MUL expression_base

   95 expression_add: expression_mul
   96               | expression_add TOKEN_OPER_SIGNADD expression_mul

   97 expression: expression_add

   98 expression_bool_base: expression
   99                     | expression TOKEN_OPER_REL expression

  100 expression_bool_or: expression_bool_base
  101                   | expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR

  102 expression_bool: expression_bool_or
  103                | expression_bool TOKEN_BOOL_AND expression_bool_or


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_MAIN (258) 1
TOKEN_LOCATION (259) 9
TOKEN_OBJECT (260) 10
TOKEN_VAR_REAL (261) 7
TOKEN_VAR_INT (262) 8
TOKEN_VOID (263) 27
TOKEN_FUNCTION (264) 25
TOKEN_IF (265) 71 74 75 76
TOKEN_ELSE (266) 71 76
TOKEN_WHILE (267) 49 51
TOKEN_DO (268) 48
TOKEN_FOR (269) 47
TOKEN_RETURN (270) 53 54
TOKEN_BREAK (271) 55
TOKEN_SEMICOLON (272) 6 41 50 51 53 54 55 56 78
TOKEN_DOT (273) 82 83
TOKEN_COMMA (274) 16 17 18 21 22 29 70 87
TOKEN_LPAR (275) 1 30 31 32 33 50 51 52 66 67 71 74 75 76 92 101
TOKEN_RPAR (276) 1 30 31 32 33 50 51 52 66 67 71 74 75 76 92 101
TOKEN_LSBRA (277) 12 13 84 85
TOKEN_RSBRA (278) 12 13 84 85
TOKEN_ASSIGN (279) 15 17 18 63
TOKEN_BEGIN (280) 18 38
TOKEN_END (281) 18 39
TOKEN_OBJECT_FEATURE (282) 67
TOKEN_IDENTIFIER (283) 14 15 16 17 18 20 21 25 28 29 64 65 66 79 80
    83
TOKEN_UINT (284) 12 13 35 37
TOKEN_REAL (285) 34 36
TOKEN_OPER_REL (286) 99
TOKEN_OPER_SIGNADD (287) 34 35 96
TOKEN_OPER_MUL (288) 94
TOKEN_PLUSPLUS (289) 60 91
TOKEN_MINUSMINUS (290) 61 90
TOKEN_BOOL_AND (291) 103
TOKEN_BOOL_OR (292) 101


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1, on right: 0
global_variables (40)
    on left: 2 3, on right: 1 3
type (41)
    on left: 4 5, on right: 6 26 28 29
local_variables (42)
    on left: 6, on right: 3 57 77
simple_type (43)
    on left: 7 8 9 10, on right: 4 11
complex_type (44)
    on left: 11, on right: 5
ranges (45)
    on left: 12 13, on right: 11 13
names (46)
    on left: 14 15 16 17 18, on right: 6 16 17 18
values (47)
    on left: 19 20 21 22, on right: 18 21 22
declare_functions (48)
    on left: 23 24, on right: 1
function_header (49)
    on left: 25, on right: 30 31 32 33
return_type (50)
    on left: 26 27, on right: 30 31 32 33
parameters (51)
    on left: 28 29, on right: 29 30 31
declare_function_ (52)
    on left: 30 31 32 33, on right: 24 31 33
number (53)
    on left: 34 35 36 37, on right: 19 22 89
begin (54)
    on left: 38, on right: 40 41 42
end (55)
    on left: 39, on right: 40 41 42
block_of_instructions (56)
    on left: 40 41 42, on right: 1 30 31 32 33 50 51 52 73 74
commands (57)
    on left: 43 44 45 46, on right: 42 44 46
forcycle (58)
    on left: 47, on right: 50
do_cycle (59)
    on left: 48, on right: 51
while_cycle (60)
    on left: 49, on right: 52
command (61)
    on left: 50 51 52 53 54 55 56, on right: 58 75
command_var (62)
    on left: 57 58, on right: 72
simple_command (63)
    on left: 59 60 61 62, on right: 50 56
assign (64)
    on left: 63, on right: 59 78
variable_left (65)
    on left: 64 65, on right: 63
call_fce (66)
    on left: 66 67, on right: 81 82
call_parameters (67)
    on left: 68 69 70, on right: 66 67 70
matched (68)
    on left: 71 72 73, on right: 43 44 71 76
unmatched (69)
    on left: 74 75 76, on right: 45 46 76
init (70)
    on left: 77 78, on right: 50
variable (71)
    on left: 79 80 81 82 83, on right: 60 61 62 82 83 88 90 91
array_access (72)
    on left: 84 85, on right: 65 80 85
exps (73)
    on left: 86 87, on right: 84 85 87
expression_base (74)
    on left: 88 89 90 91 92, on right: 93 94
expression_mul (75)
    on left: 93 94, on right: 94 95 96
expression_add (76)
    on left: 95 96, on right: 96 97
expression (77)
    on left: 97, on right: 15 17 53 63 68 70 86 87 92 98 99
expression_bool_base (78)
    on left: 98 99, on right: 100
expression_bool_or (79)
    on left: 100 101, on right: 101 102 103
expression_bool (80)
    on left: 102 103, on right: 50 51 52 71 74 75 76 101 103


state 0

    0 $accept: . program $end
    1 program: . global_variables declare_functions TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR block_of_instructions
    2 global_variables: .
    3                 | . global_variables local_variables

    $default  reduce using rule 2 (global_variables)

    program           go to state 1
    global_variables  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: global_variables . declare_functions TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR block_of_instructions
    3 global_variables: global_variables . local_variables
    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   23 declare_functions: .  [TOKEN_MAIN]
   24                  | . declare_function_
   26 return_type: . type
   27            | . TOKEN_VOID
   30 declare_function_: . return_type function_header TOKEN_LPAR parameters TOKEN_RPAR block_of_instructions
   31                  | . declare_function_ return_type function_header TOKEN_LPAR parameters TOKEN_RPAR block_of_instructions
   32                  | . return_type function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions
   33                  | . declare_function_ return_type function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_LOCATION  shift, and go to state 4
    TOKEN_OBJECT    shift, and go to state 5
    TOKEN_VAR_REAL  shift, and go to state 6
    TOKEN_VAR_INT   shift, and go to state 7
    TOKEN_VOID      shift, and go to state 8

    $default  reduce using rule 23 (declare_functions)

    type               go to state 9
    local_variables    go to state 10
    simple_type        go to state 11
    complex_type       go to state 12
    declare_functions  go to state 13
    return_type        go to state 14
    declare_function_  go to state 15


state 3

    0 $accept: program $end .

    $default  accept


state 4

    9 simple_type: TOKEN_LOCATION .

    $default  reduce using rule 9 (simple_type)


state 5

   10 simple_type: TOKEN_OBJECT .

    $default  reduce using rule 10 (simple_type)


state 6

    7 simple_type: TOKEN_VAR_REAL .

    $default  reduce using rule 7 (simple_type)


state 7

    8 simple_type: TOKEN_VAR_INT .

    $default  reduce using rule 8 (simple_type)


state 8

   27 return_type: TOKEN_VOID .

    $default  reduce using rule 27 (return_type)


state 9

    6 local_variables: type . names TOKEN_SEMICOLON
   14 names: . TOKEN_IDENTIFIER
   15      | . TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   16      | . names TOKEN_COMMA TOKEN_IDENTIFIER
   17      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   18      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END
   26 return_type: type .  [TOKEN_FUNCTION]

    TOKEN_IDENTIFIER  shift, and go to state 16

    $default  reduce using rule 26 (return_type)

    names  go to state 17


state 10

    3 global_variables: global_variables local_variables .

    $default  reduce using rule 3 (global_variables)


state 11

    4 type: simple_type .  [TOKEN_FUNCTION, TOKEN_IDENTIFIER]
   11 complex_type: simple_type . ranges
   12 ranges: . TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA
   13       | . ranges TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 18

    $default  reduce using rule 4 (type)

    ranges  go to state 19


state 12

    5 type: complex_type .

    $default  reduce using rule 5 (type)


state 13

    1 program: global_variables declare_functions . TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_MAIN  shift, and go to state 20


state 14

   25 function_header: . TOKEN_FUNCTION TOKEN_IDENTIFIER
   30 declare_function_: return_type . function_header TOKEN_LPAR parameters TOKEN_RPAR block_of_instructions
   32                  | return_type . function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_FUNCTION  shift, and go to state 21

    function_header  go to state 22


state 15

    4 type: . simple_type
    5     | . complex_type
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   24 declare_functions: declare_function_ .  [TOKEN_MAIN]
   26 return_type: . type
   27            | . TOKEN_VOID
   31 declare_function_: declare_function_ . return_type function_header TOKEN_LPAR parameters TOKEN_RPAR block_of_instructions
   33                  | declare_function_ . return_type function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_LOCATION  shift, and go to state 4
    TOKEN_OBJECT    shift, and go to state 5
    TOKEN_VAR_REAL  shift, and go to state 6
    TOKEN_VAR_INT   shift, and go to state 7
    TOKEN_VOID      shift, and go to state 8

    $default  reduce using rule 24 (declare_functions)

    type          go to state 23
    simple_type   go to state 11
    complex_type  go to state 12
    return_type   go to state 24


state 16

   14 names: TOKEN_IDENTIFIER .  [TOKEN_SEMICOLON, TOKEN_COMMA]
   15      | TOKEN_IDENTIFIER . TOKEN_ASSIGN expression

    TOKEN_ASSIGN  shift, and go to state 25

    $default  reduce using rule 14 (names)


state 17

    6 local_variables: type names . TOKEN_SEMICOLON
   16 names: names . TOKEN_COMMA TOKEN_IDENTIFIER
   17      | names . TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   18      | names . TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END

    TOKEN_SEMICOLON  shift, and go to state 26
    TOKEN_COMMA      shift, and go to state 27


state 18

   12 ranges: TOKEN_LSBRA . TOKEN_UINT TOKEN_RSBRA

    TOKEN_UINT  shift, and go to state 28


state 19

   11 complex_type: simple_type ranges .  [TOKEN_FUNCTION, TOKEN_IDENTIFIER]
   13 ranges: ranges . TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 29

    $default  reduce using rule 11 (complex_type)


state 20

    1 program: global_variables declare_functions TOKEN_MAIN . TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_LPAR  shift, and go to state 30


state 21

   25 function_header: TOKEN_FUNCTION . TOKEN_IDENTIFIER

    TOKEN_IDENTIFIER  shift, and go to state 31


state 22

   30 declare_function_: return_type function_header . TOKEN_LPAR parameters TOKEN_RPAR block_of_instructions
   32                  | return_type function_header . TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_LPAR  shift, and go to state 32


state 23

   26 return_type: type .

    $default  reduce using rule 26 (return_type)


state 24

   25 function_header: . TOKEN_FUNCTION TOKEN_IDENTIFIER
   31 declare_function_: declare_function_ return_type . function_header TOKEN_LPAR parameters TOKEN_RPAR block_of_instructions
   33                  | declare_function_ return_type . function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_FUNCTION  shift, and go to state 21

    function_header  go to state 33


state 25

   15 names: TOKEN_IDENTIFIER TOKEN_ASSIGN . expression
   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   88 expression_base: . variable
   89                | . number
   90                | . variable TOKEN_MINUSMINUS
   91                | . variable TOKEN_PLUSPLUS
   92                | . TOKEN_LPAR expression TOKEN_RPAR
   93 expression_mul: . expression_base
   94               | . expression_mul TOKEN_OPER_MUL expression_base
   95 expression_add: . expression_mul
   96               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   97 expression: . expression_add

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 46


state 26

    6 local_variables: type names TOKEN_SEMICOLON .

    $default  reduce using rule 6 (local_variables)


state 27

   16 names: names TOKEN_COMMA . TOKEN_IDENTIFIER
   17      | names TOKEN_COMMA . TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   18      | names TOKEN_COMMA . TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END

    TOKEN_IDENTIFIER  shift, and go to state 47


state 28

   12 ranges: TOKEN_LSBRA TOKEN_UINT . TOKEN_RSBRA

    TOKEN_RSBRA  shift, and go to state 48


state 29

   13 ranges: ranges TOKEN_LSBRA . TOKEN_UINT TOKEN_RSBRA

    TOKEN_UINT  shift, and go to state 49


state 30

    1 program: global_variables declare_functions TOKEN_MAIN TOKEN_LPAR . TOKEN_RPAR block_of_instructions

    TOKEN_RPAR  shift, and go to state 50


state 31

   25 function_header: TOKEN_FUNCTION TOKEN_IDENTIFIER .

    $default  reduce using rule 25 (function_header)


state 32

    4 type: . simple_type
    5     | . complex_type
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   28 parameters: . type TOKEN_IDENTIFIER
   29           | . parameters TOKEN_COMMA type TOKEN_IDENTIFIER
   30 declare_function_: return_type function_header TOKEN_LPAR . parameters TOKEN_RPAR block_of_instructions
   32                  | return_type function_header TOKEN_LPAR . TOKEN_RPAR block_of_instructions

    TOKEN_LOCATION  shift, and go to state 4
    TOKEN_OBJECT    shift, and go to state 5
    TOKEN_VAR_REAL  shift, and go to state 6
    TOKEN_VAR_INT   shift, and go to state 7
    TOKEN_RPAR      shift, and go to state 51

    type          go to state 52
    simple_type   go to state 11
    complex_type  go to state 12
    parameters    go to state 53


state 33

   31 declare_function_: declare_function_ return_type function_header . TOKEN_LPAR parameters TOKEN_RPAR block_of_instructions
   33                  | declare_function_ return_type function_header . TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_LPAR  shift, and go to state 54


state 34

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   88 expression_base: . variable
   89                | . number
   90                | . variable TOKEN_MINUSMINUS
   91                | . variable TOKEN_PLUSPLUS
   92                | . TOKEN_LPAR expression TOKEN_RPAR
   92                | TOKEN_LPAR . expression TOKEN_RPAR
   93 expression_mul: . expression_base
   94               | . expression_mul TOKEN_OPER_MUL expression_base
   95 expression_add: . expression_mul
   96               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   97 expression: . expression_add

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 55


state 35

   67 call_fce: TOKEN_OBJECT_FEATURE . TOKEN_LPAR call_parameters TOKEN_RPAR

    TOKEN_LPAR  shift, and go to state 56


state 36

   66 call_fce: TOKEN_IDENTIFIER . TOKEN_LPAR call_parameters TOKEN_RPAR
   79 variable: TOKEN_IDENTIFIER .  [TOKEN_SEMICOLON, TOKEN_DOT, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD, TOKEN_OPER_MUL, TOKEN_PLUSPLUS, TOKEN_MINUSMINUS, TOKEN_BOOL_AND, TOKEN_BOOL_OR]
   80         | TOKEN_IDENTIFIER . array_access
   84 array_access: . TOKEN_LSBRA exps TOKEN_RSBRA
   85             | . array_access TOKEN_LSBRA exps TOKEN_RSBRA

    TOKEN_LPAR   shift, and go to state 57
    TOKEN_LSBRA  shift, and go to state 58

    $default  reduce using rule 79 (variable)

    array_access  go to state 59


state 37

   37 number: TOKEN_UINT .

    $default  reduce using rule 37 (number)


state 38

   36 number: TOKEN_REAL .

    $default  reduce using rule 36 (number)


state 39

   34 number: TOKEN_OPER_SIGNADD . TOKEN_REAL
   35       | TOKEN_OPER_SIGNADD . TOKEN_UINT

    TOKEN_UINT  shift, and go to state 60
    TOKEN_REAL  shift, and go to state 61


state 40

   89 expression_base: number .

    $default  reduce using rule 89 (expression_base)


state 41

   81 variable: call_fce .

    $default  reduce using rule 81 (variable)


state 42

   82 variable: variable . TOKEN_DOT call_fce
   83         | variable . TOKEN_DOT TOKEN_IDENTIFIER
   88 expression_base: variable .  [TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD, TOKEN_OPER_MUL, TOKEN_BOOL_AND, TOKEN_BOOL_OR]
   90                | variable . TOKEN_MINUSMINUS
   91                | variable . TOKEN_PLUSPLUS

    TOKEN_DOT         shift, and go to state 62
    TOKEN_PLUSPLUS    shift, and go to state 63
    TOKEN_MINUSMINUS  shift, and go to state 64

    $default  reduce using rule 88 (expression_base)


state 43

   93 expression_mul: expression_base .

    $default  reduce using rule 93 (expression_mul)


state 44

   94 expression_mul: expression_mul . TOKEN_OPER_MUL expression_base
   95 expression_add: expression_mul .  [TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD, TOKEN_BOOL_AND, TOKEN_BOOL_OR]

    TOKEN_OPER_MUL  shift, and go to state 65

    $default  reduce using rule 95 (expression_add)


state 45

   96 expression_add: expression_add . TOKEN_OPER_SIGNADD expression_mul
   97 expression: expression_add .  [TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_BOOL_AND, TOKEN_BOOL_OR]

    TOKEN_OPER_SIGNADD  shift, and go to state 66

    $default  reduce using rule 97 (expression)


state 46

   15 names: TOKEN_IDENTIFIER TOKEN_ASSIGN expression .

    $default  reduce using rule 15 (names)


state 47

   16 names: names TOKEN_COMMA TOKEN_IDENTIFIER .  [TOKEN_SEMICOLON, TOKEN_COMMA]
   17      | names TOKEN_COMMA TOKEN_IDENTIFIER . TOKEN_ASSIGN expression
   18      | names TOKEN_COMMA TOKEN_IDENTIFIER . TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END

    TOKEN_ASSIGN  shift, and go to state 67

    $default  reduce using rule 16 (names)


state 48

   12 ranges: TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA .

    $default  reduce using rule 12 (ranges)


state 49

   13 ranges: ranges TOKEN_LSBRA TOKEN_UINT . TOKEN_RSBRA

    TOKEN_RSBRA  shift, and go to state 68


state 50

    1 program: global_variables declare_functions TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR . block_of_instructions
   38 begin: . TOKEN_BEGIN
   40 block_of_instructions: . begin end
   41                      | . begin TOKEN_SEMICOLON end
   42                      | . begin commands end

    TOKEN_BEGIN  shift, and go to state 69

    begin                  go to state 70
    block_of_instructions  go to state 71


state 51

   32 declare_function_: return_type function_header TOKEN_LPAR TOKEN_RPAR . block_of_instructions
   38 begin: . TOKEN_BEGIN
   40 block_of_instructions: . begin end
   41                      | . begin TOKEN_SEMICOLON end
   42                      | . begin commands end

    TOKEN_BEGIN  shift, and go to state 69

    begin                  go to state 70
    block_of_instructions  go to state 72


state 52

   28 parameters: type . TOKEN_IDENTIFIER

    TOKEN_IDENTIFIER  shift, and go to state 73


state 53

   29 parameters: parameters . TOKEN_COMMA type TOKEN_IDENTIFIER
   30 declare_function_: return_type function_header TOKEN_LPAR parameters . TOKEN_RPAR block_of_instructions

    TOKEN_COMMA  shift, and go to state 74
    TOKEN_RPAR   shift, and go to state 75


state 54

    4 type: . simple_type
    5     | . complex_type
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   28 parameters: . type TOKEN_IDENTIFIER
   29           | . parameters TOKEN_COMMA type TOKEN_IDENTIFIER
   31 declare_function_: declare_function_ return_type function_header TOKEN_LPAR . parameters TOKEN_RPAR block_of_instructions
   33                  | declare_function_ return_type function_header TOKEN_LPAR . TOKEN_RPAR block_of_instructions

    TOKEN_LOCATION  shift, and go to state 4
    TOKEN_OBJECT    shift, and go to state 5
    TOKEN_VAR_REAL  shift, and go to state 6
    TOKEN_VAR_INT   shift, and go to state 7
    TOKEN_RPAR      shift, and go to state 76

    type          go to state 52
    simple_type   go to state 11
    complex_type  go to state 12
    parameters    go to state 77


state 55

   92 expression_base: TOKEN_LPAR expression . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 78


state 56

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | TOKEN_OBJECT_FEATURE TOKEN_LPAR . call_parameters TOKEN_RPAR
   68 call_parameters: . expression
   69                | .  [TOKEN_COMMA, TOKEN_RPAR]
   70                | . call_parameters TOKEN_COMMA expression
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   88 expression_base: . variable
   89                | . number
   90                | . variable TOKEN_MINUSMINUS
   91                | . variable TOKEN_PLUSPLUS
   92                | . TOKEN_LPAR expression TOKEN_RPAR
   93 expression_mul: . expression_base
   94               | . expression_mul TOKEN_OPER_MUL expression_base
   95 expression_add: . expression_mul
   96               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   97 expression: . expression_add

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    $default  reduce using rule 69 (call_parameters)

    number           go to state 40
    call_fce         go to state 41
    call_parameters  go to state 79
    variable         go to state 42
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 80


state 57

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   66         | TOKEN_IDENTIFIER TOKEN_LPAR . call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   68 call_parameters: . expression
   69                | .  [TOKEN_COMMA, TOKEN_RPAR]
   70                | . call_parameters TOKEN_COMMA expression
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   88 expression_base: . variable
   89                | . number
   90                | . variable TOKEN_MINUSMINUS
   91                | . variable TOKEN_PLUSPLUS
   92                | . TOKEN_LPAR expression TOKEN_RPAR
   93 expression_mul: . expression_base
   94               | . expression_mul TOKEN_OPER_MUL expression_base
   95 expression_add: . expression_mul
   96               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   97 expression: . expression_add

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    $default  reduce using rule 69 (call_parameters)

    number           go to state 40
    call_fce         go to state 41
    call_parameters  go to state 81
    variable         go to state 42
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 80


state 58

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   84 array_access: TOKEN_LSBRA . exps TOKEN_RSBRA
   86 exps: . expression
   87     | . exps TOKEN_COMMA expression
   88 expression_base: . variable
   89                | . number
   90                | . variable TOKEN_MINUSMINUS
   91                | . variable TOKEN_PLUSPLUS
   92                | . TOKEN_LPAR expression TOKEN_RPAR
   93 expression_mul: . expression_base
   94               | . expression_mul TOKEN_OPER_MUL expression_base
   95 expression_add: . expression_mul
   96               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   97 expression: . expression_add

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    exps             go to state 82
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 83


state 59

   80 variable: TOKEN_IDENTIFIER array_access .  [TOKEN_SEMICOLON, TOKEN_DOT, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD, TOKEN_OPER_MUL, TOKEN_PLUSPLUS, TOKEN_MINUSMINUS, TOKEN_BOOL_AND, TOKEN_BOOL_OR]
   85 array_access: array_access . TOKEN_LSBRA exps TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 84

    $default  reduce using rule 80 (variable)


state 60

   35 number: TOKEN_OPER_SIGNADD TOKEN_UINT .

    $default  reduce using rule 35 (number)


state 61

   34 number: TOKEN_OPER_SIGNADD TOKEN_REAL .

    $default  reduce using rule 34 (number)


state 62

   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   82 variable: variable TOKEN_DOT . call_fce
   83         | variable TOKEN_DOT . TOKEN_IDENTIFIER

    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 85

    call_fce  go to state 86


state 63

   91 expression_base: variable TOKEN_PLUSPLUS .

    $default  reduce using rule 91 (expression_base)


state 64

   90 expression_base: variable TOKEN_MINUSMINUS .

    $default  reduce using rule 90 (expression_base)


state 65

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   88 expression_base: . variable
   89                | . number
   90                | . variable TOKEN_MINUSMINUS
   91                | . variable TOKEN_PLUSPLUS
   92                | . TOKEN_LPAR expression TOKEN_RPAR
   94 expression_mul: expression_mul TOKEN_OPER_MUL . expression_base

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    expression_base  go to state 87


state 66

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   88 expression_base: . variable
   89                | . number
   90                | . variable TOKEN_MINUSMINUS
   91                | . variable TOKEN_PLUSPLUS
   92                | . TOKEN_LPAR expression TOKEN_RPAR
   93 expression_mul: . expression_base
   94               | . expression_mul TOKEN_OPER_MUL expression_base
   96 expression_add: expression_add TOKEN_OPER_SIGNADD . expression_mul

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    expression_base  go to state 43
    expression_mul   go to state 88


state 67

   17 names: names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN . expression
   18      | names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN . TOKEN_BEGIN values TOKEN_END
   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   88 expression_base: . variable
   89                | . number
   90                | . variable TOKEN_MINUSMINUS
   91                | . variable TOKEN_PLUSPLUS
   92                | . TOKEN_LPAR expression TOKEN_RPAR
   93 expression_mul: . expression_base
   94               | . expression_mul TOKEN_OPER_MUL expression_base
   95 expression_add: . expression_mul
   96               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   97 expression: . expression_add

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_BEGIN           shift, and go to state 89
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 90


state 68

   13 ranges: ranges TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA .

    $default  reduce using rule 13 (ranges)


state 69

   38 begin: TOKEN_BEGIN .

    $default  reduce using rule 38 (begin)


state 70

    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   38 begin: . TOKEN_BEGIN
   39 end: . TOKEN_END
   40 block_of_instructions: . begin end
   40                      | begin . end
   41                      | . begin TOKEN_SEMICOLON end
   41                      | begin . TOKEN_SEMICOLON end
   42                      | . begin commands end
   42                      | begin . commands end
   43 commands: . matched
   44         | . commands matched
   45         | . unmatched
   46         | . commands unmatched
   47 forcycle: . TOKEN_FOR
   48 do_cycle: . TOKEN_DO
   49 while_cycle: . TOKEN_WHILE
   50 command: . forcycle TOKEN_LPAR init expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   51        | . do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   52        | . while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   53        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   54        | . TOKEN_RETURN TOKEN_SEMICOLON
   55        | . TOKEN_BREAK TOKEN_SEMICOLON
   56        | . simple_command TOKEN_SEMICOLON
   57 command_var: . local_variables
   58            | . command
   59 simple_command: . assign
   60               | . variable TOKEN_PLUSPLUS
   61               | . variable TOKEN_MINUSMINUS
   62               | . variable
   63 assign: . variable_left TOKEN_ASSIGN expression
   64 variable_left: . TOKEN_IDENTIFIER
   65              | . TOKEN_IDENTIFIER array_access
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   71 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   72        | . command_var
   73        | . block_of_instructions
   74 unmatched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   75          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR command
   76          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_LOCATION        shift, and go to state 4
    TOKEN_OBJECT          shift, and go to state 5
    TOKEN_VAR_REAL        shift, and go to state 6
    TOKEN_VAR_INT         shift, and go to state 7
    TOKEN_IF              shift, and go to state 91
    TOKEN_WHILE           shift, and go to state 92
    TOKEN_DO              shift, and go to state 93
    TOKEN_FOR             shift, and go to state 94
    TOKEN_RETURN          shift, and go to state 95
    TOKEN_BREAK           shift, and go to state 96
    TOKEN_SEMICOLON       shift, and go to state 97
    TOKEN_BEGIN           shift, and go to state 69
    TOKEN_END             shift, and go to state 98
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 99

    type                   go to state 100
    local_variables        go to state 101
    simple_type            go to state 11
    complex_type           go to state 12
    begin                  go to state 70
    end                    go to state 102
    block_of_instructions  go to state 103
    commands               go to state 104
    forcycle               go to state 105
    do_cycle               go to state 106
    while_cycle            go to state 107
    command                go to state 108
    command_var            go to state 109
    simple_command         go to state 110
    assign                 go to state 111
    variable_left          go to state 112
    call_fce               go to state 41
    matched                go to state 113
    unmatched              go to state 114
    variable               go to state 115


state 71

    1 program: global_variables declare_functions TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 1 (program)


state 72

   32 declare_function_: return_type function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 32 (declare_function_)


state 73

   28 parameters: type TOKEN_IDENTIFIER .

    $default  reduce using rule 28 (parameters)


state 74

    4 type: . simple_type
    5     | . complex_type
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   29 parameters: parameters TOKEN_COMMA . type TOKEN_IDENTIFIER

    TOKEN_LOCATION  shift, and go to state 4
    TOKEN_OBJECT    shift, and go to state 5
    TOKEN_VAR_REAL  shift, and go to state 6
    TOKEN_VAR_INT   shift, and go to state 7

    type          go to state 116
    simple_type   go to state 11
    complex_type  go to state 12


state 75

   30 declare_function_: return_type function_header TOKEN_LPAR parameters TOKEN_RPAR . block_of_instructions
   38 begin: . TOKEN_BEGIN
   40 block_of_instructions: . begin end
   41                      | . begin TOKEN_SEMICOLON end
   42                      | . begin commands end

    TOKEN_BEGIN  shift, and go to state 69

    begin                  go to state 70
    block_of_instructions  go to state 117


state 76

   33 declare_function_: declare_function_ return_type function_header TOKEN_LPAR TOKEN_RPAR . block_of_instructions
   38 begin: . TOKEN_BEGIN
   40 block_of_instructions: . begin end
   41                      | . begin TOKEN_SEMICOLON end
   42                      | . begin commands end

    TOKEN_BEGIN  shift, and go to state 69

    begin                  go to state 70
    block_of_instructions  go to state 118


state 77

   29 parameters: parameters . TOKEN_COMMA type TOKEN_IDENTIFIER
   31 declare_function_: declare_function_ return_type function_header TOKEN_LPAR parameters . TOKEN_RPAR block_of_instructions

    TOKEN_COMMA  shift, and go to state 74
    TOKEN_RPAR   shift, and go to state 119


state 78

   92 expression_base: TOKEN_LPAR expression TOKEN_RPAR .

    $default  reduce using rule 92 (expression_base)


state 79

   67 call_fce: TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters . TOKEN_RPAR
   70 call_parameters: call_parameters . TOKEN_COMMA expression

    TOKEN_COMMA  shift, and go to state 120
    TOKEN_RPAR   shift, and go to state 121


state 80

   68 call_parameters: expression .

    $default  reduce using rule 68 (call_parameters)


state 81

   66 call_fce: TOKEN_IDENTIFIER TOKEN_LPAR call_parameters . TOKEN_RPAR
   70 call_parameters: call_parameters . TOKEN_COMMA expression

    TOKEN_COMMA  shift, and go to state 120
    TOKEN_RPAR   shift, and go to state 122


state 82

   84 array_access: TOKEN_LSBRA exps . TOKEN_RSBRA
   87 exps: exps . TOKEN_COMMA expression

    TOKEN_COMMA  shift, and go to state 123
    TOKEN_RSBRA  shift, and go to state 124


state 83

   86 exps: expression .

    $default  reduce using rule 86 (exps)


state 84

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   85 array_access: array_access TOKEN_LSBRA . exps TOKEN_RSBRA
   86 exps: . expression
   87     | . exps TOKEN_COMMA expression
   88 expression_base: . variable
   89                | . number
   90                | . variable TOKEN_MINUSMINUS
   91                | . variable TOKEN_PLUSPLUS
   92                | . TOKEN_LPAR expression TOKEN_RPAR
   93 expression_mul: . expression_base
   94               | . expression_mul TOKEN_OPER_MUL expression_base
   95 expression_add: . expression_mul
   96               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   97 expression: . expression_add

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    exps             go to state 125
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 83


state 85

   66 call_fce: TOKEN_IDENTIFIER . TOKEN_LPAR call_parameters TOKEN_RPAR
   83 variable: variable TOKEN_DOT TOKEN_IDENTIFIER .  [TOKEN_SEMICOLON, TOKEN_DOT, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD, TOKEN_OPER_MUL, TOKEN_PLUSPLUS, TOKEN_MINUSMINUS, TOKEN_BOOL_AND, TOKEN_BOOL_OR]

    TOKEN_LPAR  shift, and go to state 57

    $default  reduce using rule 83 (variable)


state 86

   82 variable: variable TOKEN_DOT call_fce .

    $default  reduce using rule 82 (variable)


state 87

   94 expression_mul: expression_mul TOKEN_OPER_MUL expression_base .

    $default  reduce using rule 94 (expression_mul)


state 88

   94 expression_mul: expression_mul . TOKEN_OPER_MUL expression_base
   96 expression_add: expression_add TOKEN_OPER_SIGNADD expression_mul .  [TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD, TOKEN_BOOL_AND, TOKEN_BOOL_OR]

    TOKEN_OPER_MUL  shift, and go to state 65

    $default  reduce using rule 96 (expression_add)


state 89

   18 names: names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN . values TOKEN_END
   19 values: . number
   20       | . TOKEN_IDENTIFIER
   21       | . values TOKEN_COMMA TOKEN_IDENTIFIER
   22       | . values TOKEN_COMMA number
   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT

    TOKEN_IDENTIFIER    shift, and go to state 126
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    values  go to state 127
    number  go to state 128


state 90

   17 names: names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN expression .

    $default  reduce using rule 17 (names)


state 91

   71 matched: TOKEN_IF . TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   74 unmatched: TOKEN_IF . TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   75          | TOKEN_IF . TOKEN_LPAR expression_bool TOKEN_RPAR command
   76          | TOKEN_IF . TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched

    TOKEN_LPAR  shift, and go to state 129


state 92

   49 while_cycle: TOKEN_WHILE .

    $default  reduce using rule 49 (while_cycle)


state 93

   48 do_cycle: TOKEN_DO .

    $default  reduce using rule 48 (do_cycle)


state 94

   47 forcycle: TOKEN_FOR .

    $default  reduce using rule 47 (forcycle)


state 95

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   53 command: TOKEN_RETURN . expression TOKEN_SEMICOLON
   54        | TOKEN_RETURN . TOKEN_SEMICOLON
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   88 expression_base: . variable
   89                | . number
   90                | . variable TOKEN_MINUSMINUS
   91                | . variable TOKEN_PLUSPLUS
   92                | . TOKEN_LPAR expression TOKEN_RPAR
   93 expression_mul: . expression_base
   94               | . expression_mul TOKEN_OPER_MUL expression_base
   95 expression_add: . expression_mul
   96               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   97 expression: . expression_add

    TOKEN_SEMICOLON       shift, and go to state 130
    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 131


state 96

   55 command: TOKEN_BREAK . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 132


state 97

   39 end: . TOKEN_END
   41 block_of_instructions: begin TOKEN_SEMICOLON . end

    TOKEN_END  shift, and go to state 98

    end  go to state 133


state 98

   39 end: TOKEN_END .

    $default  reduce using rule 39 (end)


state 99

   64 variable_left: TOKEN_IDENTIFIER .  [TOKEN_ASSIGN]
   65              | TOKEN_IDENTIFIER . array_access
   66 call_fce: TOKEN_IDENTIFIER . TOKEN_LPAR call_parameters TOKEN_RPAR
   79 variable: TOKEN_IDENTIFIER .  [TOKEN_SEMICOLON, TOKEN_DOT, TOKEN_RPAR, TOKEN_PLUSPLUS, TOKEN_MINUSMINUS]
   80         | TOKEN_IDENTIFIER . array_access
   84 array_access: . TOKEN_LSBRA exps TOKEN_RSBRA
   85             | . array_access TOKEN_LSBRA exps TOKEN_RSBRA

    TOKEN_LPAR   shift, and go to state 57
    TOKEN_LSBRA  shift, and go to state 58

    TOKEN_ASSIGN  reduce using rule 64 (variable_left)
    $default      reduce using rule 79 (variable)

    array_access  go to state 134


state 100

    6 local_variables: type . names TOKEN_SEMICOLON
   14 names: . TOKEN_IDENTIFIER
   15      | . TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   16      | . names TOKEN_COMMA TOKEN_IDENTIFIER
   17      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   18      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END

    TOKEN_IDENTIFIER  shift, and go to state 16

    names  go to state 17


state 101

   57 command_var: local_variables .

    $default  reduce using rule 57 (command_var)


state 102

   40 block_of_instructions: begin end .

    $default  reduce using rule 40 (block_of_instructions)


state 103

   73 matched: block_of_instructions .

    $default  reduce using rule 73 (matched)


state 104

    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   38 begin: . TOKEN_BEGIN
   39 end: . TOKEN_END
   40 block_of_instructions: . begin end
   41                      | . begin TOKEN_SEMICOLON end
   42                      | . begin commands end
   42                      | begin commands . end
   44 commands: commands . matched
   46         | commands . unmatched
   47 forcycle: . TOKEN_FOR
   48 do_cycle: . TOKEN_DO
   49 while_cycle: . TOKEN_WHILE
   50 command: . forcycle TOKEN_LPAR init expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   51        | . do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   52        | . while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   53        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   54        | . TOKEN_RETURN TOKEN_SEMICOLON
   55        | . TOKEN_BREAK TOKEN_SEMICOLON
   56        | . simple_command TOKEN_SEMICOLON
   57 command_var: . local_variables
   58            | . command
   59 simple_command: . assign
   60               | . variable TOKEN_PLUSPLUS
   61               | . variable TOKEN_MINUSMINUS
   62               | . variable
   63 assign: . variable_left TOKEN_ASSIGN expression
   64 variable_left: . TOKEN_IDENTIFIER
   65              | . TOKEN_IDENTIFIER array_access
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   71 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   72        | . command_var
   73        | . block_of_instructions
   74 unmatched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   75          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR command
   76          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_LOCATION        shift, and go to state 4
    TOKEN_OBJECT          shift, and go to state 5
    TOKEN_VAR_REAL        shift, and go to state 6
    TOKEN_VAR_INT         shift, and go to state 7
    TOKEN_IF              shift, and go to state 91
    TOKEN_WHILE           shift, and go to state 92
    TOKEN_DO              shift, and go to state 93
    TOKEN_FOR             shift, and go to state 94
    TOKEN_RETURN          shift, and go to state 95
    TOKEN_BREAK           shift, and go to state 96
    TOKEN_BEGIN           shift, and go to state 69
    TOKEN_END             shift, and go to state 98
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 99

    type                   go to state 100
    local_variables        go to state 101
    simple_type            go to state 11
    complex_type           go to state 12
    begin                  go to state 70
    end                    go to state 135
    block_of_instructions  go to state 103
    forcycle               go to state 105
    do_cycle               go to state 106
    while_cycle            go to state 107
    command                go to state 108
    command_var            go to state 109
    simple_command         go to state 110
    assign                 go to state 111
    variable_left          go to state 112
    call_fce               go to state 41
    matched                go to state 136
    unmatched              go to state 137
    variable               go to state 115


state 105

   50 command: forcycle . TOKEN_LPAR init expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions

    TOKEN_LPAR  shift, and go to state 138


state 106

   38 begin: . TOKEN_BEGIN
   40 block_of_instructions: . begin end
   41                      | . begin TOKEN_SEMICOLON end
   42                      | . begin commands end
   51 command: do_cycle . block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON

    TOKEN_BEGIN  shift, and go to state 69

    begin                  go to state 70
    block_of_instructions  go to state 139


state 107

   52 command: while_cycle . TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions

    TOKEN_LPAR  shift, and go to state 140


state 108

   58 command_var: command .

    $default  reduce using rule 58 (command_var)


state 109

   72 matched: command_var .

    $default  reduce using rule 72 (matched)


state 110

   56 command: simple_command . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 141


state 111

   59 simple_command: assign .

    $default  reduce using rule 59 (simple_command)


state 112

   63 assign: variable_left . TOKEN_ASSIGN expression

    TOKEN_ASSIGN  shift, and go to state 142


state 113

   43 commands: matched .

    $default  reduce using rule 43 (commands)


state 114

   45 commands: unmatched .

    $default  reduce using rule 45 (commands)


state 115

   60 simple_command: variable . TOKEN_PLUSPLUS
   61               | variable . TOKEN_MINUSMINUS
   62               | variable .  [TOKEN_SEMICOLON, TOKEN_RPAR]
   82 variable: variable . TOKEN_DOT call_fce
   83         | variable . TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_DOT         shift, and go to state 62
    TOKEN_PLUSPLUS    shift, and go to state 143
    TOKEN_MINUSMINUS  shift, and go to state 144

    $default  reduce using rule 62 (simple_command)


state 116

   29 parameters: parameters TOKEN_COMMA type . TOKEN_IDENTIFIER

    TOKEN_IDENTIFIER  shift, and go to state 145


state 117

   30 declare_function_: return_type function_header TOKEN_LPAR parameters TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 30 (declare_function_)


state 118

   33 declare_function_: declare_function_ return_type function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 33 (declare_function_)


state 119

   31 declare_function_: declare_function_ return_type function_header TOKEN_LPAR parameters TOKEN_RPAR . block_of_instructions
   38 begin: . TOKEN_BEGIN
   40 block_of_instructions: . begin end
   41                      | . begin TOKEN_SEMICOLON end
   42                      | . begin commands end

    TOKEN_BEGIN  shift, and go to state 69

    begin                  go to state 70
    block_of_instructions  go to state 146


state 120

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   70 call_parameters: call_parameters TOKEN_COMMA . expression
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   88 expression_base: . variable
   89                | . number
   90                | . variable TOKEN_MINUSMINUS
   91                | . variable TOKEN_PLUSPLUS
   92                | . TOKEN_LPAR expression TOKEN_RPAR
   93 expression_mul: . expression_base
   94               | . expression_mul TOKEN_OPER_MUL expression_base
   95 expression_add: . expression_mul
   96               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   97 expression: . expression_add

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 147


state 121

   67 call_fce: TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR .

    $default  reduce using rule 67 (call_fce)


state 122

   66 call_fce: TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR .

    $default  reduce using rule 66 (call_fce)


state 123

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   87 exps: exps TOKEN_COMMA . expression
   88 expression_base: . variable
   89                | . number
   90                | . variable TOKEN_MINUSMINUS
   91                | . variable TOKEN_PLUSPLUS
   92                | . TOKEN_LPAR expression TOKEN_RPAR
   93 expression_mul: . expression_base
   94               | . expression_mul TOKEN_OPER_MUL expression_base
   95 expression_add: . expression_mul
   96               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   97 expression: . expression_add

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 148


state 124

   84 array_access: TOKEN_LSBRA exps TOKEN_RSBRA .

    $default  reduce using rule 84 (array_access)


state 125

   85 array_access: array_access TOKEN_LSBRA exps . TOKEN_RSBRA
   87 exps: exps . TOKEN_COMMA expression

    TOKEN_COMMA  shift, and go to state 123
    TOKEN_RSBRA  shift, and go to state 149


state 126

   20 values: TOKEN_IDENTIFIER .

    $default  reduce using rule 20 (values)


state 127

   18 names: names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values . TOKEN_END
   21 values: values . TOKEN_COMMA TOKEN_IDENTIFIER
   22       | values . TOKEN_COMMA number

    TOKEN_COMMA  shift, and go to state 150
    TOKEN_END    shift, and go to state 151


state 128

   19 values: number .

    $default  reduce using rule 19 (values)


state 129

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   71 matched: TOKEN_IF TOKEN_LPAR . expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   74 unmatched: TOKEN_IF TOKEN_LPAR . expression_bool TOKEN_RPAR block_of_instructions
   75          | TOKEN_IF TOKEN_LPAR . expression_bool TOKEN_RPAR command
   76          | TOKEN_IF TOKEN_LPAR . expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   88 expression_base: . variable
   89                | . number
   90                | . variable TOKEN_MINUSMINUS
   91                | . variable TOKEN_PLUSPLUS
   92                | . TOKEN_LPAR expression TOKEN_RPAR
   93 expression_mul: . expression_base
   94               | . expression_mul TOKEN_OPER_MUL expression_base
   95 expression_add: . expression_mul
   96               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   97 expression: . expression_add
   98 expression_bool_base: . expression
   99                     | . expression TOKEN_OPER_REL expression
  100 expression_bool_or: . expression_bool_base
  101                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
  102 expression_bool: . expression_bool_or
  103                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number                go to state 40
    call_fce              go to state 41
    variable              go to state 42
    expression_base       go to state 43
    expression_mul        go to state 44
    expression_add        go to state 45
    expression            go to state 152
    expression_bool_base  go to state 153
    expression_bool_or    go to state 154
    expression_bool       go to state 155


state 130

   54 command: TOKEN_RETURN TOKEN_SEMICOLON .

    $default  reduce using rule 54 (command)


state 131

   53 command: TOKEN_RETURN expression . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 156


state 132

   55 command: TOKEN_BREAK TOKEN_SEMICOLON .

    $default  reduce using rule 55 (command)


state 133

   41 block_of_instructions: begin TOKEN_SEMICOLON end .

    $default  reduce using rule 41 (block_of_instructions)


state 134

   65 variable_left: TOKEN_IDENTIFIER array_access .  [TOKEN_ASSIGN]
   80 variable: TOKEN_IDENTIFIER array_access .  [TOKEN_SEMICOLON, TOKEN_DOT, TOKEN_RPAR, TOKEN_PLUSPLUS, TOKEN_MINUSMINUS]
   85 array_access: array_access . TOKEN_LSBRA exps TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 84

    TOKEN_ASSIGN  reduce using rule 65 (variable_left)
    $default      reduce using rule 80 (variable)


state 135

   42 block_of_instructions: begin commands end .

    $default  reduce using rule 42 (block_of_instructions)


state 136

   44 commands: commands matched .

    $default  reduce using rule 44 (commands)


state 137

   46 commands: commands unmatched .

    $default  reduce using rule 46 (commands)


state 138

    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   50 command: forcycle TOKEN_LPAR . init expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   63 assign: . variable_left TOKEN_ASSIGN expression
   64 variable_left: . TOKEN_IDENTIFIER
   65              | . TOKEN_IDENTIFIER array_access
   77 init: . local_variables
   78     | . assign TOKEN_SEMICOLON

    TOKEN_LOCATION    shift, and go to state 4
    TOKEN_OBJECT      shift, and go to state 5
    TOKEN_VAR_REAL    shift, and go to state 6
    TOKEN_VAR_INT     shift, and go to state 7
    TOKEN_IDENTIFIER  shift, and go to state 157

    type             go to state 100
    local_variables  go to state 158
    simple_type      go to state 11
    complex_type     go to state 12
    assign           go to state 159
    variable_left    go to state 112
    init             go to state 160


state 139

   51 command: do_cycle block_of_instructions . TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON

    TOKEN_WHILE  shift, and go to state 161


state 140

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   52 command: while_cycle TOKEN_LPAR . expression_bool TOKEN_RPAR block_of_instructions
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   88 expression_base: . variable
   89                | . number
   90                | . variable TOKEN_MINUSMINUS
   91                | . variable TOKEN_PLUSPLUS
   92                | . TOKEN_LPAR expression TOKEN_RPAR
   93 expression_mul: . expression_base
   94               | . expression_mul TOKEN_OPER_MUL expression_base
   95 expression_add: . expression_mul
   96               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   97 expression: . expression_add
   98 expression_bool_base: . expression
   99                     | . expression TOKEN_OPER_REL expression
  100 expression_bool_or: . expression_bool_base
  101                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
  102 expression_bool: . expression_bool_or
  103                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number                go to state 40
    call_fce              go to state 41
    variable              go to state 42
    expression_base       go to state 43
    expression_mul        go to state 44
    expression_add        go to state 45
    expression            go to state 152
    expression_bool_base  go to state 153
    expression_bool_or    go to state 154
    expression_bool       go to state 162


state 141

   56 command: simple_command TOKEN_SEMICOLON .

    $default  reduce using rule 56 (command)


state 142

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   63 assign: variable_left TOKEN_ASSIGN . expression
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   88 expression_base: . variable
   89                | . number
   90                | . variable TOKEN_MINUSMINUS
   91                | . variable TOKEN_PLUSPLUS
   92                | . TOKEN_LPAR expression TOKEN_RPAR
   93 expression_mul: . expression_base
   94               | . expression_mul TOKEN_OPER_MUL expression_base
   95 expression_add: . expression_mul
   96               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   97 expression: . expression_add

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 163


state 143

   60 simple_command: variable TOKEN_PLUSPLUS .

    $default  reduce using rule 60 (simple_command)


state 144

   61 simple_command: variable TOKEN_MINUSMINUS .

    $default  reduce using rule 61 (simple_command)


state 145

   29 parameters: parameters TOKEN_COMMA type TOKEN_IDENTIFIER .

    $default  reduce using rule 29 (parameters)


state 146

   31 declare_function_: declare_function_ return_type function_header TOKEN_LPAR parameters TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 31 (declare_function_)


state 147

   70 call_parameters: call_parameters TOKEN_COMMA expression .

    $default  reduce using rule 70 (call_parameters)


state 148

   87 exps: exps TOKEN_COMMA expression .

    $default  reduce using rule 87 (exps)


state 149

   85 array_access: array_access TOKEN_LSBRA exps TOKEN_RSBRA .

    $default  reduce using rule 85 (array_access)


state 150

   21 values: values TOKEN_COMMA . TOKEN_IDENTIFIER
   22       | values TOKEN_COMMA . number
   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT

    TOKEN_IDENTIFIER    shift, and go to state 164
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number  go to state 165


state 151

   18 names: names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END .

    $default  reduce using rule 18 (names)


state 152

   98 expression_bool_base: expression .  [TOKEN_SEMICOLON, TOKEN_RPAR, TOKEN_BOOL_AND, TOKEN_BOOL_OR]
   99                     | expression . TOKEN_OPER_REL expression

    TOKEN_OPER_REL  shift, and go to state 166

    $default  reduce using rule 98 (expression_bool_base)


state 153

  100 expression_bool_or: expression_bool_base .

    $default  reduce using rule 100 (expression_bool_or)


state 154

  101 expression_bool_or: expression_bool_or . TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
  102 expression_bool: expression_bool_or .  [TOKEN_SEMICOLON, TOKEN_RPAR, TOKEN_BOOL_AND]

    TOKEN_BOOL_OR  shift, and go to state 167

    $default  reduce using rule 102 (expression_bool)


state 155

   71 matched: TOKEN_IF TOKEN_LPAR expression_bool . TOKEN_RPAR matched TOKEN_ELSE matched
   74 unmatched: TOKEN_IF TOKEN_LPAR expression_bool . TOKEN_RPAR block_of_instructions
   75          | TOKEN_IF TOKEN_LPAR expression_bool . TOKEN_RPAR command
   76          | TOKEN_IF TOKEN_LPAR expression_bool . TOKEN_RPAR matched TOKEN_ELSE unmatched
  103 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_RPAR      shift, and go to state 168
    TOKEN_BOOL_AND  shift, and go to state 169


state 156

   53 command: TOKEN_RETURN expression TOKEN_SEMICOLON .

    $default  reduce using rule 53 (command)


state 157

   64 variable_left: TOKEN_IDENTIFIER .  [TOKEN_ASSIGN]
   65              | TOKEN_IDENTIFIER . array_access
   84 array_access: . TOKEN_LSBRA exps TOKEN_RSBRA
   85             | . array_access TOKEN_LSBRA exps TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 58

    $default  reduce using rule 64 (variable_left)

    array_access  go to state 170


state 158

   77 init: local_variables .

    $default  reduce using rule 77 (init)


state 159

   78 init: assign . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 171


state 160

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   50 command: forcycle TOKEN_LPAR init . expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   88 expression_base: . variable
   89                | . number
   90                | . variable TOKEN_MINUSMINUS
   91                | . variable TOKEN_PLUSPLUS
   92                | . TOKEN_LPAR expression TOKEN_RPAR
   93 expression_mul: . expression_base
   94               | . expression_mul TOKEN_OPER_MUL expression_base
   95 expression_add: . expression_mul
   96               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   97 expression: . expression_add
   98 expression_bool_base: . expression
   99                     | . expression TOKEN_OPER_REL expression
  100 expression_bool_or: . expression_bool_base
  101                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
  102 expression_bool: . expression_bool_or
  103                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number                go to state 40
    call_fce              go to state 41
    variable              go to state 42
    expression_base       go to state 43
    expression_mul        go to state 44
    expression_add        go to state 45
    expression            go to state 152
    expression_bool_base  go to state 153
    expression_bool_or    go to state 154
    expression_bool       go to state 172


state 161

   51 command: do_cycle block_of_instructions TOKEN_WHILE . TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON

    TOKEN_LPAR  shift, and go to state 173


state 162

   52 command: while_cycle TOKEN_LPAR expression_bool . TOKEN_RPAR block_of_instructions
  103 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_RPAR      shift, and go to state 174
    TOKEN_BOOL_AND  shift, and go to state 169


state 163

   63 assign: variable_left TOKEN_ASSIGN expression .

    $default  reduce using rule 63 (assign)


state 164

   21 values: values TOKEN_COMMA TOKEN_IDENTIFIER .

    $default  reduce using rule 21 (values)


state 165

   22 values: values TOKEN_COMMA number .

    $default  reduce using rule 22 (values)


state 166

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   88 expression_base: . variable
   89                | . number
   90                | . variable TOKEN_MINUSMINUS
   91                | . variable TOKEN_PLUSPLUS
   92                | . TOKEN_LPAR expression TOKEN_RPAR
   93 expression_mul: . expression_base
   94               | . expression_mul TOKEN_OPER_MUL expression_base
   95 expression_add: . expression_mul
   96               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   97 expression: . expression_add
   99 expression_bool_base: expression TOKEN_OPER_REL . expression

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 175


state 167

  101 expression_bool_or: expression_bool_or TOKEN_BOOL_OR . TOKEN_LPAR expression_bool TOKEN_RPAR

    TOKEN_LPAR  shift, and go to state 176


state 168

    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   38 begin: . TOKEN_BEGIN
   40 block_of_instructions: . begin end
   41                      | . begin TOKEN_SEMICOLON end
   42                      | . begin commands end
   47 forcycle: . TOKEN_FOR
   48 do_cycle: . TOKEN_DO
   49 while_cycle: . TOKEN_WHILE
   50 command: . forcycle TOKEN_LPAR init expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   51        | . do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   52        | . while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   53        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   54        | . TOKEN_RETURN TOKEN_SEMICOLON
   55        | . TOKEN_BREAK TOKEN_SEMICOLON
   56        | . simple_command TOKEN_SEMICOLON
   57 command_var: . local_variables
   58            | . command
   59 simple_command: . assign
   60               | . variable TOKEN_PLUSPLUS
   61               | . variable TOKEN_MINUSMINUS
   62               | . variable
   63 assign: . variable_left TOKEN_ASSIGN expression
   64 variable_left: . TOKEN_IDENTIFIER
   65              | . TOKEN_IDENTIFIER array_access
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   71 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   71        | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR . matched TOKEN_ELSE matched
   72        | . command_var
   73        | . block_of_instructions
   74 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR . block_of_instructions
   75          | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR . command
   76          | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR . matched TOKEN_ELSE unmatched
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_LOCATION        shift, and go to state 4
    TOKEN_OBJECT          shift, and go to state 5
    TOKEN_VAR_REAL        shift, and go to state 6
    TOKEN_VAR_INT         shift, and go to state 7
    TOKEN_IF              shift, and go to state 177
    TOKEN_WHILE           shift, and go to state 92
    TOKEN_DO              shift, and go to state 93
    TOKEN_FOR             shift, and go to state 94
    TOKEN_RETURN          shift, and go to state 95
    TOKEN_BREAK           shift, and go to state 96
    TOKEN_BEGIN           shift, and go to state 69
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 99

    type                   go to state 100
    local_variables        go to state 101
    simple_type            go to state 11
    complex_type           go to state 12
    begin                  go to state 70
    block_of_instructions  go to state 178
    forcycle               go to state 105
    do_cycle               go to state 106
    while_cycle            go to state 107
    command                go to state 179
    command_var            go to state 109
    simple_command         go to state 110
    assign                 go to state 111
    variable_left          go to state 112
    call_fce               go to state 41
    matched                go to state 180
    variable               go to state 115


state 169

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   88 expression_base: . variable
   89                | . number
   90                | . variable TOKEN_MINUSMINUS
   91                | . variable TOKEN_PLUSPLUS
   92                | . TOKEN_LPAR expression TOKEN_RPAR
   93 expression_mul: . expression_base
   94               | . expression_mul TOKEN_OPER_MUL expression_base
   95 expression_add: . expression_mul
   96               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   97 expression: . expression_add
   98 expression_bool_base: . expression
   99                     | . expression TOKEN_OPER_REL expression
  100 expression_bool_or: . expression_bool_base
  101                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
  103 expression_bool: expression_bool TOKEN_BOOL_AND . expression_bool_or

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number                go to state 40
    call_fce              go to state 41
    variable              go to state 42
    expression_base       go to state 43
    expression_mul        go to state 44
    expression_add        go to state 45
    expression            go to state 152
    expression_bool_base  go to state 153
    expression_bool_or    go to state 181


state 170

   65 variable_left: TOKEN_IDENTIFIER array_access .  [TOKEN_ASSIGN]
   85 array_access: array_access . TOKEN_LSBRA exps TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 84

    $default  reduce using rule 65 (variable_left)


state 171

   78 init: assign TOKEN_SEMICOLON .

    $default  reduce using rule 78 (init)


state 172

   50 command: forcycle TOKEN_LPAR init expression_bool . TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
  103 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_SEMICOLON  shift, and go to state 182
    TOKEN_BOOL_AND   shift, and go to state 169


state 173

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   51 command: do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR . expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   88 expression_base: . variable
   89                | . number
   90                | . variable TOKEN_MINUSMINUS
   91                | . variable TOKEN_PLUSPLUS
   92                | . TOKEN_LPAR expression TOKEN_RPAR
   93 expression_mul: . expression_base
   94               | . expression_mul TOKEN_OPER_MUL expression_base
   95 expression_add: . expression_mul
   96               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   97 expression: . expression_add
   98 expression_bool_base: . expression
   99                     | . expression TOKEN_OPER_REL expression
  100 expression_bool_or: . expression_bool_base
  101                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
  102 expression_bool: . expression_bool_or
  103                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number                go to state 40
    call_fce              go to state 41
    variable              go to state 42
    expression_base       go to state 43
    expression_mul        go to state 44
    expression_add        go to state 45
    expression            go to state 152
    expression_bool_base  go to state 153
    expression_bool_or    go to state 154
    expression_bool       go to state 183


state 174

   38 begin: . TOKEN_BEGIN
   40 block_of_instructions: . begin end
   41                      | . begin TOKEN_SEMICOLON end
   42                      | . begin commands end
   52 command: while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR . block_of_instructions

    TOKEN_BEGIN  shift, and go to state 69

    begin                  go to state 70
    block_of_instructions  go to state 184


state 175

   99 expression_bool_base: expression TOKEN_OPER_REL expression .

    $default  reduce using rule 99 (expression_bool_base)


state 176

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   88 expression_base: . variable
   89                | . number
   90                | . variable TOKEN_MINUSMINUS
   91                | . variable TOKEN_PLUSPLUS
   92                | . TOKEN_LPAR expression TOKEN_RPAR
   93 expression_mul: . expression_base
   94               | . expression_mul TOKEN_OPER_MUL expression_base
   95 expression_add: . expression_mul
   96               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   97 expression: . expression_add
   98 expression_bool_base: . expression
   99                     | . expression TOKEN_OPER_REL expression
  100 expression_bool_or: . expression_bool_base
  101                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
  101                   | expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR . expression_bool TOKEN_RPAR
  102 expression_bool: . expression_bool_or
  103                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number                go to state 40
    call_fce              go to state 41
    variable              go to state 42
    expression_base       go to state 43
    expression_mul        go to state 44
    expression_add        go to state 45
    expression            go to state 152
    expression_bool_base  go to state 153
    expression_bool_or    go to state 154
    expression_bool       go to state 185


state 177

   71 matched: TOKEN_IF . TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched

    TOKEN_LPAR  shift, and go to state 186


state 178

   73 matched: block_of_instructions .  [TOKEN_ELSE]
   74 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions .  [TOKEN_LOCATION, TOKEN_OBJECT, TOKEN_VAR_REAL, TOKEN_VAR_INT, TOKEN_IF, TOKEN_WHILE, TOKEN_DO, TOKEN_FOR, TOKEN_RETURN, TOKEN_BREAK, TOKEN_BEGIN, TOKEN_END, TOKEN_OBJECT_FEATURE, TOKEN_IDENTIFIER]

    TOKEN_ELSE  reduce using rule 73 (matched)
    $default    reduce using rule 74 (unmatched)


state 179

   58 command_var: command .  [TOKEN_ELSE]
   75 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR command .  [TOKEN_LOCATION, TOKEN_OBJECT, TOKEN_VAR_REAL, TOKEN_VAR_INT, TOKEN_IF, TOKEN_WHILE, TOKEN_DO, TOKEN_FOR, TOKEN_RETURN, TOKEN_BREAK, TOKEN_BEGIN, TOKEN_END, TOKEN_OBJECT_FEATURE, TOKEN_IDENTIFIER]

    TOKEN_ELSE  reduce using rule 58 (command_var)
    $default    reduce using rule 75 (unmatched)


state 180

   71 matched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched . TOKEN_ELSE matched
   76 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched . TOKEN_ELSE unmatched

    TOKEN_ELSE  shift, and go to state 187


state 181

  101 expression_bool_or: expression_bool_or . TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
  103 expression_bool: expression_bool TOKEN_BOOL_AND expression_bool_or .  [TOKEN_SEMICOLON, TOKEN_RPAR, TOKEN_BOOL_AND]

    TOKEN_BOOL_OR  shift, and go to state 167

    $default  reduce using rule 103 (expression_bool)


state 182

   50 command: forcycle TOKEN_LPAR init expression_bool TOKEN_SEMICOLON . simple_command TOKEN_RPAR block_of_instructions
   59 simple_command: . assign
   60               | . variable TOKEN_PLUSPLUS
   61               | . variable TOKEN_MINUSMINUS
   62               | . variable
   63 assign: . variable_left TOKEN_ASSIGN expression
   64 variable_left: . TOKEN_IDENTIFIER
   65              | . TOKEN_IDENTIFIER array_access
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 99

    simple_command  go to state 188
    assign          go to state 111
    variable_left   go to state 112
    call_fce        go to state 41
    variable        go to state 115


state 183

   51 command: do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool . TOKEN_RPAR TOKEN_SEMICOLON
  103 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_RPAR      shift, and go to state 189
    TOKEN_BOOL_AND  shift, and go to state 169


state 184

   52 command: while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 52 (command)


state 185

  101 expression_bool_or: expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool . TOKEN_RPAR
  103 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_RPAR      shift, and go to state 190
    TOKEN_BOOL_AND  shift, and go to state 169


state 186

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   71 matched: TOKEN_IF TOKEN_LPAR . expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   88 expression_base: . variable
   89                | . number
   90                | . variable TOKEN_MINUSMINUS
   91                | . variable TOKEN_PLUSPLUS
   92                | . TOKEN_LPAR expression TOKEN_RPAR
   93 expression_mul: . expression_base
   94               | . expression_mul TOKEN_OPER_MUL expression_base
   95 expression_add: . expression_mul
   96               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   97 expression: . expression_add
   98 expression_bool_base: . expression
   99                     | . expression TOKEN_OPER_REL expression
  100 expression_bool_or: . expression_bool_base
  101                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
  102 expression_bool: . expression_bool_or
  103                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number                go to state 40
    call_fce              go to state 41
    variable              go to state 42
    expression_base       go to state 43
    expression_mul        go to state 44
    expression_add        go to state 45
    expression            go to state 152
    expression_bool_base  go to state 153
    expression_bool_or    go to state 154
    expression_bool       go to state 191


state 187

    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   38 begin: . TOKEN_BEGIN
   40 block_of_instructions: . begin end
   41                      | . begin TOKEN_SEMICOLON end
   42                      | . begin commands end
   47 forcycle: . TOKEN_FOR
   48 do_cycle: . TOKEN_DO
   49 while_cycle: . TOKEN_WHILE
   50 command: . forcycle TOKEN_LPAR init expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   51        | . do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   52        | . while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   53        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   54        | . TOKEN_RETURN TOKEN_SEMICOLON
   55        | . TOKEN_BREAK TOKEN_SEMICOLON
   56        | . simple_command TOKEN_SEMICOLON
   57 command_var: . local_variables
   58            | . command
   59 simple_command: . assign
   60               | . variable TOKEN_PLUSPLUS
   61               | . variable TOKEN_MINUSMINUS
   62               | . variable
   63 assign: . variable_left TOKEN_ASSIGN expression
   64 variable_left: . TOKEN_IDENTIFIER
   65              | . TOKEN_IDENTIFIER array_access
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   71 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   71        | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE . matched
   72        | . command_var
   73        | . block_of_instructions
   74 unmatched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   75          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR command
   76          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched
   76          | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE . unmatched
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_LOCATION        shift, and go to state 4
    TOKEN_OBJECT          shift, and go to state 5
    TOKEN_VAR_REAL        shift, and go to state 6
    TOKEN_VAR_INT         shift, and go to state 7
    TOKEN_IF              shift, and go to state 91
    TOKEN_WHILE           shift, and go to state 92
    TOKEN_DO              shift, and go to state 93
    TOKEN_FOR             shift, and go to state 94
    TOKEN_RETURN          shift, and go to state 95
    TOKEN_BREAK           shift, and go to state 96
    TOKEN_BEGIN           shift, and go to state 69
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 99

    type                   go to state 100
    local_variables        go to state 101
    simple_type            go to state 11
    complex_type           go to state 12
    begin                  go to state 70
    block_of_instructions  go to state 103
    forcycle               go to state 105
    do_cycle               go to state 106
    while_cycle            go to state 107
    command                go to state 108
    command_var            go to state 109
    simple_command         go to state 110
    assign                 go to state 111
    variable_left          go to state 112
    call_fce               go to state 41
    matched                go to state 192
    unmatched              go to state 193
    variable               go to state 115


state 188

   50 command: forcycle TOKEN_LPAR init expression_bool TOKEN_SEMICOLON simple_command . TOKEN_RPAR block_of_instructions

    TOKEN_RPAR  shift, and go to state 194


state 189

   51 command: do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 195


state 190

  101 expression_bool_or: expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR .

    $default  reduce using rule 101 (expression_bool_or)


state 191

   71 matched: TOKEN_IF TOKEN_LPAR expression_bool . TOKEN_RPAR matched TOKEN_ELSE matched
  103 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_RPAR      shift, and go to state 196
    TOKEN_BOOL_AND  shift, and go to state 169


state 192

   71 matched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched .

    $default  reduce using rule 71 (matched)


state 193

   76 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched .

    $default  reduce using rule 76 (unmatched)


state 194

   38 begin: . TOKEN_BEGIN
   40 block_of_instructions: . begin end
   41                      | . begin TOKEN_SEMICOLON end
   42                      | . begin commands end
   50 command: forcycle TOKEN_LPAR init expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR . block_of_instructions

    TOKEN_BEGIN  shift, and go to state 69

    begin                  go to state 70
    block_of_instructions  go to state 197


state 195

   51 command: do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON .

    $default  reduce using rule 51 (command)


state 196

    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   38 begin: . TOKEN_BEGIN
   40 block_of_instructions: . begin end
   41                      | . begin TOKEN_SEMICOLON end
   42                      | . begin commands end
   47 forcycle: . TOKEN_FOR
   48 do_cycle: . TOKEN_DO
   49 while_cycle: . TOKEN_WHILE
   50 command: . forcycle TOKEN_LPAR init expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   51        | . do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   52        | . while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   53        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   54        | . TOKEN_RETURN TOKEN_SEMICOLON
   55        | . TOKEN_BREAK TOKEN_SEMICOLON
   56        | . simple_command TOKEN_SEMICOLON
   57 command_var: . local_variables
   58            | . command
   59 simple_command: . assign
   60               | . variable TOKEN_PLUSPLUS
   61               | . variable TOKEN_MINUSMINUS
   62               | . variable
   63 assign: . variable_left TOKEN_ASSIGN expression
   64 variable_left: . TOKEN_IDENTIFIER
   65              | . TOKEN_IDENTIFIER array_access
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   71 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   71        | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR . matched TOKEN_ELSE matched
   72        | . command_var
   73        | . block_of_instructions
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_LOCATION        shift, and go to state 4
    TOKEN_OBJECT          shift, and go to state 5
    TOKEN_VAR_REAL        shift, and go to state 6
    TOKEN_VAR_INT         shift, and go to state 7
    TOKEN_IF              shift, and go to state 177
    TOKEN_WHILE           shift, and go to state 92
    TOKEN_DO              shift, and go to state 93
    TOKEN_FOR             shift, and go to state 94
    TOKEN_RETURN          shift, and go to state 95
    TOKEN_BREAK           shift, and go to state 96
    TOKEN_BEGIN           shift, and go to state 69
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 99

    type                   go to state 100
    local_variables        go to state 101
    simple_type            go to state 11
    complex_type           go to state 12
    begin                  go to state 70
    block_of_instructions  go to state 103
    forcycle               go to state 105
    do_cycle               go to state 106
    while_cycle            go to state 107
    command                go to state 108
    command_var            go to state 109
    simple_command         go to state 110
    assign                 go to state 111
    variable_left          go to state 112
    call_fce               go to state 41
    matched                go to state 198
    variable               go to state 115


state 197

   50 command: forcycle TOKEN_LPAR init expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 50 (command)


state 198

   71 matched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched . TOKEN_ELSE matched

    TOKEN_ELSE  shift, and go to state 199


state 199

    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   38 begin: . TOKEN_BEGIN
   40 block_of_instructions: . begin end
   41                      | . begin TOKEN_SEMICOLON end
   42                      | . begin commands end
   47 forcycle: . TOKEN_FOR
   48 do_cycle: . TOKEN_DO
   49 while_cycle: . TOKEN_WHILE
   50 command: . forcycle TOKEN_LPAR init expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   51        | . do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   52        | . while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   53        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   54        | . TOKEN_RETURN TOKEN_SEMICOLON
   55        | . TOKEN_BREAK TOKEN_SEMICOLON
   56        | . simple_command TOKEN_SEMICOLON
   57 command_var: . local_variables
   58            | . command
   59 simple_command: . assign
   60               | . variable TOKEN_PLUSPLUS
   61               | . variable TOKEN_MINUSMINUS
   62               | . variable
   63 assign: . variable_left TOKEN_ASSIGN expression
   64 variable_left: . TOKEN_IDENTIFIER
   65              | . TOKEN_IDENTIFIER array_access
   66 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   71 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   71        | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE . matched
   72        | . command_var
   73        | . block_of_instructions
   79 variable: . TOKEN_IDENTIFIER
   80         | . TOKEN_IDENTIFIER array_access
   81         | . call_fce
   82         | . variable TOKEN_DOT call_fce
   83         | . variable TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_LOCATION        shift, and go to state 4
    TOKEN_OBJECT          shift, and go to state 5
    TOKEN_VAR_REAL        shift, and go to state 6
    TOKEN_VAR_INT         shift, and go to state 7
    TOKEN_IF              shift, and go to state 177
    TOKEN_WHILE           shift, and go to state 92
    TOKEN_DO              shift, and go to state 93
    TOKEN_FOR             shift, and go to state 94
    TOKEN_RETURN          shift, and go to state 95
    TOKEN_BREAK           shift, and go to state 96
    TOKEN_BEGIN           shift, and go to state 69
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 99

    type                   go to state 100
    local_variables        go to state 101
    simple_type            go to state 11
    complex_type           go to state 12
    begin                  go to state 70
    block_of_instructions  go to state 103
    forcycle               go to state 105
    do_cycle               go to state 106
    while_cycle            go to state 107
    command                go to state 108
    command_var            go to state 109
    simple_command         go to state 110
    assign                 go to state 111
    variable_left          go to state 112
    call_fce               go to state 41
    matched                go to state 192
    variable               go to state 115
