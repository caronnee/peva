Grammar

    0 $accept: program $end

    1 program: global_variables declare_functions TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR block_of_instructions

    2 global_variables: /* empty */
    3                 | global_variables local_variables

    4 type: simple_type
    5     | complex_type

    6 local_variables: type names TOKEN_SEMICOLON

    7 simple_type: TOKEN_VAR_REAL
    8            | TOKEN_VAR_INT
    9            | TOKEN_LOCATION
   10            | TOKEN_OBJECT

   11 complex_type: simple_type ranges

   12 ranges: TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA
   13       | ranges TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA

   14 names: TOKEN_IDENTIFIER
   15      | TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   16      | names TOKEN_COMMA TOKEN_IDENTIFIER
   17      | names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   18      | names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END

   19 values: number
   20       | TOKEN_IDENTIFIER
   21       | values TOKEN_COMMA TOKEN_IDENTIFIER
   22       | values TOKEN_COMMA number

   23 declare_functions: /* empty */
   24                  | declare_function_

   25 function_header: TOKEN_FUNCTION TOKEN_IDENTIFIER

   26 return_type: type
   27            | TOKEN_VOID

   28 parameters: type TOKEN_IDENTIFIER
   29           | parameters TOKEN_COMMA type TOKEN_IDENTIFIER

   30 declare_function_: return_type function_header TOKEN_LPAR parameters TOKEN_RPAR block_of_instructions
   31                  | declare_function_ return_type function_header TOKEN_LPAR parameters TOKEN_RPAR block_of_instructions
   32                  | return_type function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions
   33                  | declare_function_ return_type function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions

   34 number: TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | TOKEN_REAL
   37       | TOKEN_UINT

   38 block_of_instructions: TOKEN_BEGIN TOKEN_END
   39                      | TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   40                      | TOKEN_BEGIN commands TOKEN_END

   41 commands: matched
   42         | commands matched
   43         | unmatched
   44         | commands unmatched

   45 forcycle: TOKEN_FOR

   46 do_cycle: TOKEN_DO

   47 while_cycle: TOKEN_WHILE

   48 command: forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   49        | do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   50        | while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   51        | TOKEN_RETURN expression TOKEN_SEMICOLON
   52        | TOKEN_RETURN TOKEN_SEMICOLON
   53        | TOKEN_BREAK TOKEN_SEMICOLON
   54        | local_variables
   55        | simple_command TOKEN_SEMICOLON

   56 simple_command: assign
   57               | variable TOKEN_PLUSPLUS
   58               | variable TOKEN_MINUSMINUS
   59               | variable

   60 assign: variable_left TOKEN_ASSIGN expression

   61 variable_left: TOKEN_IDENTIFIER
   62              | TOKEN_IDENTIFIER array_access

   63 call_fce: TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR

   65 call_parameters: expression
   66                | /* empty */
   67                | call_parameters TOKEN_COMMA expression

   68 matched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   69        | command
   70        | block_of_instructions

   71 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   72          | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR command
   73          | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched

   74 init: local_variables
   75     | assign

   76 variable: TOKEN_IDENTIFIER
   77         | TOKEN_IDENTIFIER array_access
   78         | call_fce
   79         | variable TOKEN_DOT call_fce
   80         | variable TOKEN_DOT TOKEN_IDENTIFIER

   81 array_access: TOKEN_LSBRA exps TOKEN_RSBRA
   82             | array_access TOKEN_LSBRA exps TOKEN_RSBRA

   83 exps: expression
   84     | exps TOKEN_COMMA expression

   85 expression_base: variable
   86                | number
   87                | variable TOKEN_MINUSMINUS
   88                | variable TOKEN_PLUSPLUS
   89                | TOKEN_LPAR expression TOKEN_RPAR

   90 expression_mul: expression_base
   91               | expression_mul TOKEN_OPER_MUL expression_base

   92 expression_add: expression_mul
   93               | expression_add TOKEN_OPER_SIGNADD expression_mul

   94 expression: expression_add

   95 expression_bool_base: expression
   96                     | expression TOKEN_OPER_REL expression

   97 expression_bool_or: expression_bool_base
   98                   | expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR

   99 expression_bool: expression_bool_or
  100                | expression_bool TOKEN_BOOL_AND expression_bool_or


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_MAIN (258) 1
TOKEN_LOCATION (259) 9
TOKEN_OBJECT (260) 10
TOKEN_VAR_REAL (261) 7
TOKEN_VAR_INT (262) 8
TOKEN_VOID (263) 27
TOKEN_FUNCTION (264) 25
TOKEN_IF (265) 68 71 72 73
TOKEN_ELSE (266) 68 73
TOKEN_WHILE (267) 47 49
TOKEN_DO (268) 46
TOKEN_FOR (269) 45
TOKEN_RETURN (270) 51 52
TOKEN_BREAK (271) 53
TOKEN_SEMICOLON (272) 6 39 48 49 51 52 53 55
TOKEN_DOT (273) 79 80
TOKEN_COMMA (274) 16 17 18 21 22 29 67 84
TOKEN_LPAR (275) 1 30 31 32 33 48 49 50 63 64 68 71 72 73 89 98
TOKEN_RPAR (276) 1 30 31 32 33 48 49 50 63 64 68 71 72 73 89 98
TOKEN_LSBRA (277) 12 13 81 82
TOKEN_RSBRA (278) 12 13 81 82
TOKEN_ASSIGN (279) 15 17 18 60
TOKEN_BEGIN (280) 18 38 39 40
TOKEN_END (281) 18 38 39 40
TOKEN_OBJECT_FEATURE (282) 64
TOKEN_IDENTIFIER (283) 14 15 16 17 18 20 21 25 28 29 61 62 63 76 77
    80
TOKEN_UINT (284) 12 13 35 37
TOKEN_REAL (285) 34 36
TOKEN_OPER_REL (286) 96
TOKEN_OPER_SIGNADD (287) 34 35 93
TOKEN_OPER_MUL (288) 91
TOKEN_PLUSPLUS (289) 57 88
TOKEN_MINUSMINUS (290) 58 87
TOKEN_BOOL_AND (291) 100
TOKEN_BOOL_OR (292) 98


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1, on right: 0
global_variables (40)
    on left: 2 3, on right: 1 3
type (41)
    on left: 4 5, on right: 6 26 28 29
local_variables (42)
    on left: 6, on right: 3 54 74
simple_type (43)
    on left: 7 8 9 10, on right: 4 11
complex_type (44)
    on left: 11, on right: 5
ranges (45)
    on left: 12 13, on right: 11 13
names (46)
    on left: 14 15 16 17 18, on right: 6 16 17 18
values (47)
    on left: 19 20 21 22, on right: 18 21 22
declare_functions (48)
    on left: 23 24, on right: 1
function_header (49)
    on left: 25, on right: 30 31 32 33
return_type (50)
    on left: 26 27, on right: 30 31 32 33
parameters (51)
    on left: 28 29, on right: 29 30 31
declare_function_ (52)
    on left: 30 31 32 33, on right: 24 31 33
number (53)
    on left: 34 35 36 37, on right: 19 22 86
block_of_instructions (54)
    on left: 38 39 40, on right: 1 30 31 32 33 48 49 50 70 71
commands (55)
    on left: 41 42 43 44, on right: 40 42 44
forcycle (56)
    on left: 45, on right: 48
do_cycle (57)
    on left: 46, on right: 49
while_cycle (58)
    on left: 47, on right: 50
command (59)
    on left: 48 49 50 51 52 53 54 55, on right: 69 72
simple_command (60)
    on left: 56 57 58 59, on right: 48 55
assign (61)
    on left: 60, on right: 56 75
variable_left (62)
    on left: 61 62, on right: 60
call_fce (63)
    on left: 63 64, on right: 78 79
call_parameters (64)
    on left: 65 66 67, on right: 63 64 67
matched (65)
    on left: 68 69 70, on right: 41 42 68 73
unmatched (66)
    on left: 71 72 73, on right: 43 44 73
init (67)
    on left: 74 75, on right: 48
variable (68)
    on left: 76 77 78 79 80, on right: 57 58 59 79 80 85 87 88
array_access (69)
    on left: 81 82, on right: 62 77 82
exps (70)
    on left: 83 84, on right: 81 82 84
expression_base (71)
    on left: 85 86 87 88 89, on right: 90 91
expression_mul (72)
    on left: 90 91, on right: 91 92 93
expression_add (73)
    on left: 92 93, on right: 93 94
expression (74)
    on left: 94, on right: 15 17 51 60 65 67 83 84 89 95 96
expression_bool_base (75)
    on left: 95 96, on right: 97
expression_bool_or (76)
    on left: 97 98, on right: 98 99 100
expression_bool (77)
    on left: 99 100, on right: 48 49 50 68 71 72 73 98 100


state 0

    0 $accept: . program $end
    1 program: . global_variables declare_functions TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR block_of_instructions
    2 global_variables: .
    3                 | . global_variables local_variables

    $default  reduce using rule 2 (global_variables)

    program           go to state 1
    global_variables  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: global_variables . declare_functions TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR block_of_instructions
    3 global_variables: global_variables . local_variables
    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   23 declare_functions: .  [TOKEN_MAIN]
   24                  | . declare_function_
   26 return_type: . type
   27            | . TOKEN_VOID
   30 declare_function_: . return_type function_header TOKEN_LPAR parameters TOKEN_RPAR block_of_instructions
   31                  | . declare_function_ return_type function_header TOKEN_LPAR parameters TOKEN_RPAR block_of_instructions
   32                  | . return_type function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions
   33                  | . declare_function_ return_type function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_LOCATION  shift, and go to state 4
    TOKEN_OBJECT    shift, and go to state 5
    TOKEN_VAR_REAL  shift, and go to state 6
    TOKEN_VAR_INT   shift, and go to state 7
    TOKEN_VOID      shift, and go to state 8

    $default  reduce using rule 23 (declare_functions)

    type               go to state 9
    local_variables    go to state 10
    simple_type        go to state 11
    complex_type       go to state 12
    declare_functions  go to state 13
    return_type        go to state 14
    declare_function_  go to state 15


state 3

    0 $accept: program $end .

    $default  accept


state 4

    9 simple_type: TOKEN_LOCATION .

    $default  reduce using rule 9 (simple_type)


state 5

   10 simple_type: TOKEN_OBJECT .

    $default  reduce using rule 10 (simple_type)


state 6

    7 simple_type: TOKEN_VAR_REAL .

    $default  reduce using rule 7 (simple_type)


state 7

    8 simple_type: TOKEN_VAR_INT .

    $default  reduce using rule 8 (simple_type)


state 8

   27 return_type: TOKEN_VOID .

    $default  reduce using rule 27 (return_type)


state 9

    6 local_variables: type . names TOKEN_SEMICOLON
   14 names: . TOKEN_IDENTIFIER
   15      | . TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   16      | . names TOKEN_COMMA TOKEN_IDENTIFIER
   17      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   18      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END
   26 return_type: type .  [TOKEN_FUNCTION]

    TOKEN_IDENTIFIER  shift, and go to state 16

    $default  reduce using rule 26 (return_type)

    names  go to state 17


state 10

    3 global_variables: global_variables local_variables .

    $default  reduce using rule 3 (global_variables)


state 11

    4 type: simple_type .  [TOKEN_FUNCTION, TOKEN_IDENTIFIER]
   11 complex_type: simple_type . ranges
   12 ranges: . TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA
   13       | . ranges TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 18

    $default  reduce using rule 4 (type)

    ranges  go to state 19


state 12

    5 type: complex_type .

    $default  reduce using rule 5 (type)


state 13

    1 program: global_variables declare_functions . TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_MAIN  shift, and go to state 20


state 14

   25 function_header: . TOKEN_FUNCTION TOKEN_IDENTIFIER
   30 declare_function_: return_type . function_header TOKEN_LPAR parameters TOKEN_RPAR block_of_instructions
   32                  | return_type . function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_FUNCTION  shift, and go to state 21

    function_header  go to state 22


state 15

    4 type: . simple_type
    5     | . complex_type
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   24 declare_functions: declare_function_ .  [TOKEN_MAIN]
   26 return_type: . type
   27            | . TOKEN_VOID
   31 declare_function_: declare_function_ . return_type function_header TOKEN_LPAR parameters TOKEN_RPAR block_of_instructions
   33                  | declare_function_ . return_type function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_LOCATION  shift, and go to state 4
    TOKEN_OBJECT    shift, and go to state 5
    TOKEN_VAR_REAL  shift, and go to state 6
    TOKEN_VAR_INT   shift, and go to state 7
    TOKEN_VOID      shift, and go to state 8

    $default  reduce using rule 24 (declare_functions)

    type          go to state 23
    simple_type   go to state 11
    complex_type  go to state 12
    return_type   go to state 24


state 16

   14 names: TOKEN_IDENTIFIER .  [TOKEN_SEMICOLON, TOKEN_COMMA]
   15      | TOKEN_IDENTIFIER . TOKEN_ASSIGN expression

    TOKEN_ASSIGN  shift, and go to state 25

    $default  reduce using rule 14 (names)


state 17

    6 local_variables: type names . TOKEN_SEMICOLON
   16 names: names . TOKEN_COMMA TOKEN_IDENTIFIER
   17      | names . TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   18      | names . TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END

    TOKEN_SEMICOLON  shift, and go to state 26
    TOKEN_COMMA      shift, and go to state 27


state 18

   12 ranges: TOKEN_LSBRA . TOKEN_UINT TOKEN_RSBRA

    TOKEN_UINT  shift, and go to state 28


state 19

   11 complex_type: simple_type ranges .  [TOKEN_FUNCTION, TOKEN_IDENTIFIER]
   13 ranges: ranges . TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 29

    $default  reduce using rule 11 (complex_type)


state 20

    1 program: global_variables declare_functions TOKEN_MAIN . TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_LPAR  shift, and go to state 30


state 21

   25 function_header: TOKEN_FUNCTION . TOKEN_IDENTIFIER

    TOKEN_IDENTIFIER  shift, and go to state 31


state 22

   30 declare_function_: return_type function_header . TOKEN_LPAR parameters TOKEN_RPAR block_of_instructions
   32                  | return_type function_header . TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_LPAR  shift, and go to state 32


state 23

   26 return_type: type .

    $default  reduce using rule 26 (return_type)


state 24

   25 function_header: . TOKEN_FUNCTION TOKEN_IDENTIFIER
   31 declare_function_: declare_function_ return_type . function_header TOKEN_LPAR parameters TOKEN_RPAR block_of_instructions
   33                  | declare_function_ return_type . function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_FUNCTION  shift, and go to state 21

    function_header  go to state 33


state 25

   15 names: TOKEN_IDENTIFIER TOKEN_ASSIGN . expression
   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   85 expression_base: . variable
   86                | . number
   87                | . variable TOKEN_MINUSMINUS
   88                | . variable TOKEN_PLUSPLUS
   89                | . TOKEN_LPAR expression TOKEN_RPAR
   90 expression_mul: . expression_base
   91               | . expression_mul TOKEN_OPER_MUL expression_base
   92 expression_add: . expression_mul
   93               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   94 expression: . expression_add

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 46


state 26

    6 local_variables: type names TOKEN_SEMICOLON .

    $default  reduce using rule 6 (local_variables)


state 27

   16 names: names TOKEN_COMMA . TOKEN_IDENTIFIER
   17      | names TOKEN_COMMA . TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   18      | names TOKEN_COMMA . TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END

    TOKEN_IDENTIFIER  shift, and go to state 47


state 28

   12 ranges: TOKEN_LSBRA TOKEN_UINT . TOKEN_RSBRA

    TOKEN_RSBRA  shift, and go to state 48


state 29

   13 ranges: ranges TOKEN_LSBRA . TOKEN_UINT TOKEN_RSBRA

    TOKEN_UINT  shift, and go to state 49


state 30

    1 program: global_variables declare_functions TOKEN_MAIN TOKEN_LPAR . TOKEN_RPAR block_of_instructions

    TOKEN_RPAR  shift, and go to state 50


state 31

   25 function_header: TOKEN_FUNCTION TOKEN_IDENTIFIER .

    $default  reduce using rule 25 (function_header)


state 32

    4 type: . simple_type
    5     | . complex_type
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   28 parameters: . type TOKEN_IDENTIFIER
   29           | . parameters TOKEN_COMMA type TOKEN_IDENTIFIER
   30 declare_function_: return_type function_header TOKEN_LPAR . parameters TOKEN_RPAR block_of_instructions
   32                  | return_type function_header TOKEN_LPAR . TOKEN_RPAR block_of_instructions

    TOKEN_LOCATION  shift, and go to state 4
    TOKEN_OBJECT    shift, and go to state 5
    TOKEN_VAR_REAL  shift, and go to state 6
    TOKEN_VAR_INT   shift, and go to state 7
    TOKEN_RPAR      shift, and go to state 51

    type          go to state 52
    simple_type   go to state 11
    complex_type  go to state 12
    parameters    go to state 53


state 33

   31 declare_function_: declare_function_ return_type function_header . TOKEN_LPAR parameters TOKEN_RPAR block_of_instructions
   33                  | declare_function_ return_type function_header . TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_LPAR  shift, and go to state 54


state 34

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   85 expression_base: . variable
   86                | . number
   87                | . variable TOKEN_MINUSMINUS
   88                | . variable TOKEN_PLUSPLUS
   89                | . TOKEN_LPAR expression TOKEN_RPAR
   89                | TOKEN_LPAR . expression TOKEN_RPAR
   90 expression_mul: . expression_base
   91               | . expression_mul TOKEN_OPER_MUL expression_base
   92 expression_add: . expression_mul
   93               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   94 expression: . expression_add

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 55


state 35

   64 call_fce: TOKEN_OBJECT_FEATURE . TOKEN_LPAR call_parameters TOKEN_RPAR

    TOKEN_LPAR  shift, and go to state 56


state 36

   63 call_fce: TOKEN_IDENTIFIER . TOKEN_LPAR call_parameters TOKEN_RPAR
   76 variable: TOKEN_IDENTIFIER .  [TOKEN_SEMICOLON, TOKEN_DOT, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD, TOKEN_OPER_MUL, TOKEN_PLUSPLUS, TOKEN_MINUSMINUS, TOKEN_BOOL_AND, TOKEN_BOOL_OR]
   77         | TOKEN_IDENTIFIER . array_access
   81 array_access: . TOKEN_LSBRA exps TOKEN_RSBRA
   82             | . array_access TOKEN_LSBRA exps TOKEN_RSBRA

    TOKEN_LPAR   shift, and go to state 57
    TOKEN_LSBRA  shift, and go to state 58

    $default  reduce using rule 76 (variable)

    array_access  go to state 59


state 37

   37 number: TOKEN_UINT .

    $default  reduce using rule 37 (number)


state 38

   36 number: TOKEN_REAL .

    $default  reduce using rule 36 (number)


state 39

   34 number: TOKEN_OPER_SIGNADD . TOKEN_REAL
   35       | TOKEN_OPER_SIGNADD . TOKEN_UINT

    TOKEN_UINT  shift, and go to state 60
    TOKEN_REAL  shift, and go to state 61


state 40

   86 expression_base: number .

    $default  reduce using rule 86 (expression_base)


state 41

   78 variable: call_fce .

    $default  reduce using rule 78 (variable)


state 42

   79 variable: variable . TOKEN_DOT call_fce
   80         | variable . TOKEN_DOT TOKEN_IDENTIFIER
   85 expression_base: variable .  [TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD, TOKEN_OPER_MUL, TOKEN_BOOL_AND, TOKEN_BOOL_OR]
   87                | variable . TOKEN_MINUSMINUS
   88                | variable . TOKEN_PLUSPLUS

    TOKEN_DOT         shift, and go to state 62
    TOKEN_PLUSPLUS    shift, and go to state 63
    TOKEN_MINUSMINUS  shift, and go to state 64

    $default  reduce using rule 85 (expression_base)


state 43

   90 expression_mul: expression_base .

    $default  reduce using rule 90 (expression_mul)


state 44

   91 expression_mul: expression_mul . TOKEN_OPER_MUL expression_base
   92 expression_add: expression_mul .  [TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD, TOKEN_BOOL_AND, TOKEN_BOOL_OR]

    TOKEN_OPER_MUL  shift, and go to state 65

    $default  reduce using rule 92 (expression_add)


state 45

   93 expression_add: expression_add . TOKEN_OPER_SIGNADD expression_mul
   94 expression: expression_add .  [TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_BOOL_AND, TOKEN_BOOL_OR]

    TOKEN_OPER_SIGNADD  shift, and go to state 66

    $default  reduce using rule 94 (expression)


state 46

   15 names: TOKEN_IDENTIFIER TOKEN_ASSIGN expression .

    $default  reduce using rule 15 (names)


state 47

   16 names: names TOKEN_COMMA TOKEN_IDENTIFIER .  [TOKEN_SEMICOLON, TOKEN_COMMA]
   17      | names TOKEN_COMMA TOKEN_IDENTIFIER . TOKEN_ASSIGN expression
   18      | names TOKEN_COMMA TOKEN_IDENTIFIER . TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END

    TOKEN_ASSIGN  shift, and go to state 67

    $default  reduce using rule 16 (names)


state 48

   12 ranges: TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA .

    $default  reduce using rule 12 (ranges)


state 49

   13 ranges: ranges TOKEN_LSBRA TOKEN_UINT . TOKEN_RSBRA

    TOKEN_RSBRA  shift, and go to state 68


state 50

    1 program: global_variables declare_functions TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR . block_of_instructions
   38 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   39                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   40                      | . TOKEN_BEGIN commands TOKEN_END

    TOKEN_BEGIN  shift, and go to state 69

    block_of_instructions  go to state 70


state 51

   32 declare_function_: return_type function_header TOKEN_LPAR TOKEN_RPAR . block_of_instructions
   38 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   39                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   40                      | . TOKEN_BEGIN commands TOKEN_END

    TOKEN_BEGIN  shift, and go to state 69

    block_of_instructions  go to state 71


state 52

   28 parameters: type . TOKEN_IDENTIFIER

    TOKEN_IDENTIFIER  shift, and go to state 72


state 53

   29 parameters: parameters . TOKEN_COMMA type TOKEN_IDENTIFIER
   30 declare_function_: return_type function_header TOKEN_LPAR parameters . TOKEN_RPAR block_of_instructions

    TOKEN_COMMA  shift, and go to state 73
    TOKEN_RPAR   shift, and go to state 74


state 54

    4 type: . simple_type
    5     | . complex_type
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   28 parameters: . type TOKEN_IDENTIFIER
   29           | . parameters TOKEN_COMMA type TOKEN_IDENTIFIER
   31 declare_function_: declare_function_ return_type function_header TOKEN_LPAR . parameters TOKEN_RPAR block_of_instructions
   33                  | declare_function_ return_type function_header TOKEN_LPAR . TOKEN_RPAR block_of_instructions

    TOKEN_LOCATION  shift, and go to state 4
    TOKEN_OBJECT    shift, and go to state 5
    TOKEN_VAR_REAL  shift, and go to state 6
    TOKEN_VAR_INT   shift, and go to state 7
    TOKEN_RPAR      shift, and go to state 75

    type          go to state 52
    simple_type   go to state 11
    complex_type  go to state 12
    parameters    go to state 76


state 55

   89 expression_base: TOKEN_LPAR expression . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 77


state 56

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | TOKEN_OBJECT_FEATURE TOKEN_LPAR . call_parameters TOKEN_RPAR
   65 call_parameters: . expression
   66                | .  [TOKEN_COMMA, TOKEN_RPAR]
   67                | . call_parameters TOKEN_COMMA expression
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   85 expression_base: . variable
   86                | . number
   87                | . variable TOKEN_MINUSMINUS
   88                | . variable TOKEN_PLUSPLUS
   89                | . TOKEN_LPAR expression TOKEN_RPAR
   90 expression_mul: . expression_base
   91               | . expression_mul TOKEN_OPER_MUL expression_base
   92 expression_add: . expression_mul
   93               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   94 expression: . expression_add

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    $default  reduce using rule 66 (call_parameters)

    number           go to state 40
    call_fce         go to state 41
    call_parameters  go to state 78
    variable         go to state 42
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 79


state 57

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   63         | TOKEN_IDENTIFIER TOKEN_LPAR . call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   65 call_parameters: . expression
   66                | .  [TOKEN_COMMA, TOKEN_RPAR]
   67                | . call_parameters TOKEN_COMMA expression
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   85 expression_base: . variable
   86                | . number
   87                | . variable TOKEN_MINUSMINUS
   88                | . variable TOKEN_PLUSPLUS
   89                | . TOKEN_LPAR expression TOKEN_RPAR
   90 expression_mul: . expression_base
   91               | . expression_mul TOKEN_OPER_MUL expression_base
   92 expression_add: . expression_mul
   93               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   94 expression: . expression_add

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    $default  reduce using rule 66 (call_parameters)

    number           go to state 40
    call_fce         go to state 41
    call_parameters  go to state 80
    variable         go to state 42
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 79


state 58

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   81 array_access: TOKEN_LSBRA . exps TOKEN_RSBRA
   83 exps: . expression
   84     | . exps TOKEN_COMMA expression
   85 expression_base: . variable
   86                | . number
   87                | . variable TOKEN_MINUSMINUS
   88                | . variable TOKEN_PLUSPLUS
   89                | . TOKEN_LPAR expression TOKEN_RPAR
   90 expression_mul: . expression_base
   91               | . expression_mul TOKEN_OPER_MUL expression_base
   92 expression_add: . expression_mul
   93               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   94 expression: . expression_add

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    exps             go to state 81
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 82


state 59

   77 variable: TOKEN_IDENTIFIER array_access .  [TOKEN_SEMICOLON, TOKEN_DOT, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD, TOKEN_OPER_MUL, TOKEN_PLUSPLUS, TOKEN_MINUSMINUS, TOKEN_BOOL_AND, TOKEN_BOOL_OR]
   82 array_access: array_access . TOKEN_LSBRA exps TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 83

    $default  reduce using rule 77 (variable)


state 60

   35 number: TOKEN_OPER_SIGNADD TOKEN_UINT .

    $default  reduce using rule 35 (number)


state 61

   34 number: TOKEN_OPER_SIGNADD TOKEN_REAL .

    $default  reduce using rule 34 (number)


state 62

   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   79 variable: variable TOKEN_DOT . call_fce
   80         | variable TOKEN_DOT . TOKEN_IDENTIFIER

    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 84

    call_fce  go to state 85


state 63

   88 expression_base: variable TOKEN_PLUSPLUS .

    $default  reduce using rule 88 (expression_base)


state 64

   87 expression_base: variable TOKEN_MINUSMINUS .

    $default  reduce using rule 87 (expression_base)


state 65

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   85 expression_base: . variable
   86                | . number
   87                | . variable TOKEN_MINUSMINUS
   88                | . variable TOKEN_PLUSPLUS
   89                | . TOKEN_LPAR expression TOKEN_RPAR
   91 expression_mul: expression_mul TOKEN_OPER_MUL . expression_base

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    expression_base  go to state 86


state 66

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   85 expression_base: . variable
   86                | . number
   87                | . variable TOKEN_MINUSMINUS
   88                | . variable TOKEN_PLUSPLUS
   89                | . TOKEN_LPAR expression TOKEN_RPAR
   90 expression_mul: . expression_base
   91               | . expression_mul TOKEN_OPER_MUL expression_base
   93 expression_add: expression_add TOKEN_OPER_SIGNADD . expression_mul

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    expression_base  go to state 43
    expression_mul   go to state 87


state 67

   17 names: names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN . expression
   18      | names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN . TOKEN_BEGIN values TOKEN_END
   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   85 expression_base: . variable
   86                | . number
   87                | . variable TOKEN_MINUSMINUS
   88                | . variable TOKEN_PLUSPLUS
   89                | . TOKEN_LPAR expression TOKEN_RPAR
   90 expression_mul: . expression_base
   91               | . expression_mul TOKEN_OPER_MUL expression_base
   92 expression_add: . expression_mul
   93               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   94 expression: . expression_add

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_BEGIN           shift, and go to state 88
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 89


state 68

   13 ranges: ranges TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA .

    $default  reduce using rule 13 (ranges)


state 69

    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   38 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   38                      | TOKEN_BEGIN . TOKEN_END
   39                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   39                      | TOKEN_BEGIN . TOKEN_SEMICOLON TOKEN_END
   40                      | . TOKEN_BEGIN commands TOKEN_END
   40                      | TOKEN_BEGIN . commands TOKEN_END
   41 commands: . matched
   42         | . commands matched
   43         | . unmatched
   44         | . commands unmatched
   45 forcycle: . TOKEN_FOR
   46 do_cycle: . TOKEN_DO
   47 while_cycle: . TOKEN_WHILE
   48 command: . forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   49        | . do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   50        | . while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   51        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   52        | . TOKEN_RETURN TOKEN_SEMICOLON
   53        | . TOKEN_BREAK TOKEN_SEMICOLON
   54        | . local_variables
   55        | . simple_command TOKEN_SEMICOLON
   56 simple_command: . assign
   57               | . variable TOKEN_PLUSPLUS
   58               | . variable TOKEN_MINUSMINUS
   59               | . variable
   60 assign: . variable_left TOKEN_ASSIGN expression
   61 variable_left: . TOKEN_IDENTIFIER
   62              | . TOKEN_IDENTIFIER array_access
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   68 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   69        | . command
   70        | . block_of_instructions
   71 unmatched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   72          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR command
   73          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_LOCATION        shift, and go to state 4
    TOKEN_OBJECT          shift, and go to state 5
    TOKEN_VAR_REAL        shift, and go to state 6
    TOKEN_VAR_INT         shift, and go to state 7
    TOKEN_IF              shift, and go to state 90
    TOKEN_WHILE           shift, and go to state 91
    TOKEN_DO              shift, and go to state 92
    TOKEN_FOR             shift, and go to state 93
    TOKEN_RETURN          shift, and go to state 94
    TOKEN_BREAK           shift, and go to state 95
    TOKEN_SEMICOLON       shift, and go to state 96
    TOKEN_BEGIN           shift, and go to state 69
    TOKEN_END             shift, and go to state 97
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 98

    type                   go to state 99
    local_variables        go to state 100
    simple_type            go to state 11
    complex_type           go to state 12
    block_of_instructions  go to state 101
    commands               go to state 102
    forcycle               go to state 103
    do_cycle               go to state 104
    while_cycle            go to state 105
    command                go to state 106
    simple_command         go to state 107
    assign                 go to state 108
    variable_left          go to state 109
    call_fce               go to state 41
    matched                go to state 110
    unmatched              go to state 111
    variable               go to state 112


state 70

    1 program: global_variables declare_functions TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 1 (program)


state 71

   32 declare_function_: return_type function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 32 (declare_function_)


state 72

   28 parameters: type TOKEN_IDENTIFIER .

    $default  reduce using rule 28 (parameters)


state 73

    4 type: . simple_type
    5     | . complex_type
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   29 parameters: parameters TOKEN_COMMA . type TOKEN_IDENTIFIER

    TOKEN_LOCATION  shift, and go to state 4
    TOKEN_OBJECT    shift, and go to state 5
    TOKEN_VAR_REAL  shift, and go to state 6
    TOKEN_VAR_INT   shift, and go to state 7

    type          go to state 113
    simple_type   go to state 11
    complex_type  go to state 12


state 74

   30 declare_function_: return_type function_header TOKEN_LPAR parameters TOKEN_RPAR . block_of_instructions
   38 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   39                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   40                      | . TOKEN_BEGIN commands TOKEN_END

    TOKEN_BEGIN  shift, and go to state 69

    block_of_instructions  go to state 114


state 75

   33 declare_function_: declare_function_ return_type function_header TOKEN_LPAR TOKEN_RPAR . block_of_instructions
   38 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   39                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   40                      | . TOKEN_BEGIN commands TOKEN_END

    TOKEN_BEGIN  shift, and go to state 69

    block_of_instructions  go to state 115


state 76

   29 parameters: parameters . TOKEN_COMMA type TOKEN_IDENTIFIER
   31 declare_function_: declare_function_ return_type function_header TOKEN_LPAR parameters . TOKEN_RPAR block_of_instructions

    TOKEN_COMMA  shift, and go to state 73
    TOKEN_RPAR   shift, and go to state 116


state 77

   89 expression_base: TOKEN_LPAR expression TOKEN_RPAR .

    $default  reduce using rule 89 (expression_base)


state 78

   64 call_fce: TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters . TOKEN_RPAR
   67 call_parameters: call_parameters . TOKEN_COMMA expression

    TOKEN_COMMA  shift, and go to state 117
    TOKEN_RPAR   shift, and go to state 118


state 79

   65 call_parameters: expression .

    $default  reduce using rule 65 (call_parameters)


state 80

   63 call_fce: TOKEN_IDENTIFIER TOKEN_LPAR call_parameters . TOKEN_RPAR
   67 call_parameters: call_parameters . TOKEN_COMMA expression

    TOKEN_COMMA  shift, and go to state 117
    TOKEN_RPAR   shift, and go to state 119


state 81

   81 array_access: TOKEN_LSBRA exps . TOKEN_RSBRA
   84 exps: exps . TOKEN_COMMA expression

    TOKEN_COMMA  shift, and go to state 120
    TOKEN_RSBRA  shift, and go to state 121


state 82

   83 exps: expression .

    $default  reduce using rule 83 (exps)


state 83

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   82 array_access: array_access TOKEN_LSBRA . exps TOKEN_RSBRA
   83 exps: . expression
   84     | . exps TOKEN_COMMA expression
   85 expression_base: . variable
   86                | . number
   87                | . variable TOKEN_MINUSMINUS
   88                | . variable TOKEN_PLUSPLUS
   89                | . TOKEN_LPAR expression TOKEN_RPAR
   90 expression_mul: . expression_base
   91               | . expression_mul TOKEN_OPER_MUL expression_base
   92 expression_add: . expression_mul
   93               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   94 expression: . expression_add

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    exps             go to state 122
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 82


state 84

   63 call_fce: TOKEN_IDENTIFIER . TOKEN_LPAR call_parameters TOKEN_RPAR
   80 variable: variable TOKEN_DOT TOKEN_IDENTIFIER .  [TOKEN_SEMICOLON, TOKEN_DOT, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD, TOKEN_OPER_MUL, TOKEN_PLUSPLUS, TOKEN_MINUSMINUS, TOKEN_BOOL_AND, TOKEN_BOOL_OR]

    TOKEN_LPAR  shift, and go to state 57

    $default  reduce using rule 80 (variable)


state 85

   79 variable: variable TOKEN_DOT call_fce .

    $default  reduce using rule 79 (variable)


state 86

   91 expression_mul: expression_mul TOKEN_OPER_MUL expression_base .

    $default  reduce using rule 91 (expression_mul)


state 87

   91 expression_mul: expression_mul . TOKEN_OPER_MUL expression_base
   93 expression_add: expression_add TOKEN_OPER_SIGNADD expression_mul .  [TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD, TOKEN_BOOL_AND, TOKEN_BOOL_OR]

    TOKEN_OPER_MUL  shift, and go to state 65

    $default  reduce using rule 93 (expression_add)


state 88

   18 names: names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN . values TOKEN_END
   19 values: . number
   20       | . TOKEN_IDENTIFIER
   21       | . values TOKEN_COMMA TOKEN_IDENTIFIER
   22       | . values TOKEN_COMMA number
   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT

    TOKEN_IDENTIFIER    shift, and go to state 123
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    values  go to state 124
    number  go to state 125


state 89

   17 names: names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN expression .

    $default  reduce using rule 17 (names)


state 90

   68 matched: TOKEN_IF . TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   71 unmatched: TOKEN_IF . TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   72          | TOKEN_IF . TOKEN_LPAR expression_bool TOKEN_RPAR command
   73          | TOKEN_IF . TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched

    TOKEN_LPAR  shift, and go to state 126


state 91

   47 while_cycle: TOKEN_WHILE .

    $default  reduce using rule 47 (while_cycle)


state 92

   46 do_cycle: TOKEN_DO .

    $default  reduce using rule 46 (do_cycle)


state 93

   45 forcycle: TOKEN_FOR .

    $default  reduce using rule 45 (forcycle)


state 94

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   51 command: TOKEN_RETURN . expression TOKEN_SEMICOLON
   52        | TOKEN_RETURN . TOKEN_SEMICOLON
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   85 expression_base: . variable
   86                | . number
   87                | . variable TOKEN_MINUSMINUS
   88                | . variable TOKEN_PLUSPLUS
   89                | . TOKEN_LPAR expression TOKEN_RPAR
   90 expression_mul: . expression_base
   91               | . expression_mul TOKEN_OPER_MUL expression_base
   92 expression_add: . expression_mul
   93               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   94 expression: . expression_add

    TOKEN_SEMICOLON       shift, and go to state 127
    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 128


state 95

   53 command: TOKEN_BREAK . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 129


state 96

   39 block_of_instructions: TOKEN_BEGIN TOKEN_SEMICOLON . TOKEN_END

    TOKEN_END  shift, and go to state 130


state 97

   38 block_of_instructions: TOKEN_BEGIN TOKEN_END .

    $default  reduce using rule 38 (block_of_instructions)


state 98

   61 variable_left: TOKEN_IDENTIFIER .  [TOKEN_ASSIGN]
   62              | TOKEN_IDENTIFIER . array_access
   63 call_fce: TOKEN_IDENTIFIER . TOKEN_LPAR call_parameters TOKEN_RPAR
   76 variable: TOKEN_IDENTIFIER .  [TOKEN_SEMICOLON, TOKEN_DOT, TOKEN_RPAR, TOKEN_PLUSPLUS, TOKEN_MINUSMINUS]
   77         | TOKEN_IDENTIFIER . array_access
   81 array_access: . TOKEN_LSBRA exps TOKEN_RSBRA
   82             | . array_access TOKEN_LSBRA exps TOKEN_RSBRA

    TOKEN_LPAR   shift, and go to state 57
    TOKEN_LSBRA  shift, and go to state 58

    TOKEN_ASSIGN  reduce using rule 61 (variable_left)
    $default      reduce using rule 76 (variable)

    array_access  go to state 131


state 99

    6 local_variables: type . names TOKEN_SEMICOLON
   14 names: . TOKEN_IDENTIFIER
   15      | . TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   16      | . names TOKEN_COMMA TOKEN_IDENTIFIER
   17      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   18      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END

    TOKEN_IDENTIFIER  shift, and go to state 16

    names  go to state 17


state 100

   54 command: local_variables .

    $default  reduce using rule 54 (command)


state 101

   70 matched: block_of_instructions .

    $default  reduce using rule 70 (matched)


state 102

    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   38 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   39                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   40                      | . TOKEN_BEGIN commands TOKEN_END
   40                      | TOKEN_BEGIN commands . TOKEN_END
   42 commands: commands . matched
   44         | commands . unmatched
   45 forcycle: . TOKEN_FOR
   46 do_cycle: . TOKEN_DO
   47 while_cycle: . TOKEN_WHILE
   48 command: . forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   49        | . do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   50        | . while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   51        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   52        | . TOKEN_RETURN TOKEN_SEMICOLON
   53        | . TOKEN_BREAK TOKEN_SEMICOLON
   54        | . local_variables
   55        | . simple_command TOKEN_SEMICOLON
   56 simple_command: . assign
   57               | . variable TOKEN_PLUSPLUS
   58               | . variable TOKEN_MINUSMINUS
   59               | . variable
   60 assign: . variable_left TOKEN_ASSIGN expression
   61 variable_left: . TOKEN_IDENTIFIER
   62              | . TOKEN_IDENTIFIER array_access
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   68 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   69        | . command
   70        | . block_of_instructions
   71 unmatched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   72          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR command
   73          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_LOCATION        shift, and go to state 4
    TOKEN_OBJECT          shift, and go to state 5
    TOKEN_VAR_REAL        shift, and go to state 6
    TOKEN_VAR_INT         shift, and go to state 7
    TOKEN_IF              shift, and go to state 90
    TOKEN_WHILE           shift, and go to state 91
    TOKEN_DO              shift, and go to state 92
    TOKEN_FOR             shift, and go to state 93
    TOKEN_RETURN          shift, and go to state 94
    TOKEN_BREAK           shift, and go to state 95
    TOKEN_BEGIN           shift, and go to state 69
    TOKEN_END             shift, and go to state 132
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 98

    type                   go to state 99
    local_variables        go to state 100
    simple_type            go to state 11
    complex_type           go to state 12
    block_of_instructions  go to state 101
    forcycle               go to state 103
    do_cycle               go to state 104
    while_cycle            go to state 105
    command                go to state 106
    simple_command         go to state 107
    assign                 go to state 108
    variable_left          go to state 109
    call_fce               go to state 41
    matched                go to state 133
    unmatched              go to state 134
    variable               go to state 112


state 103

   48 command: forcycle . TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions

    TOKEN_LPAR  shift, and go to state 135


state 104

   38 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   39                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   40                      | . TOKEN_BEGIN commands TOKEN_END
   49 command: do_cycle . block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON

    TOKEN_BEGIN  shift, and go to state 69

    block_of_instructions  go to state 136


state 105

   50 command: while_cycle . TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions

    TOKEN_LPAR  shift, and go to state 137


state 106

   69 matched: command .

    $default  reduce using rule 69 (matched)


state 107

   55 command: simple_command . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 138


state 108

   56 simple_command: assign .

    $default  reduce using rule 56 (simple_command)


state 109

   60 assign: variable_left . TOKEN_ASSIGN expression

    TOKEN_ASSIGN  shift, and go to state 139


state 110

   41 commands: matched .

    $default  reduce using rule 41 (commands)


state 111

   43 commands: unmatched .

    $default  reduce using rule 43 (commands)


state 112

   57 simple_command: variable . TOKEN_PLUSPLUS
   58               | variable . TOKEN_MINUSMINUS
   59               | variable .  [TOKEN_SEMICOLON, TOKEN_RPAR]
   79 variable: variable . TOKEN_DOT call_fce
   80         | variable . TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_DOT         shift, and go to state 62
    TOKEN_PLUSPLUS    shift, and go to state 140
    TOKEN_MINUSMINUS  shift, and go to state 141

    $default  reduce using rule 59 (simple_command)


state 113

   29 parameters: parameters TOKEN_COMMA type . TOKEN_IDENTIFIER

    TOKEN_IDENTIFIER  shift, and go to state 142


state 114

   30 declare_function_: return_type function_header TOKEN_LPAR parameters TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 30 (declare_function_)


state 115

   33 declare_function_: declare_function_ return_type function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 33 (declare_function_)


state 116

   31 declare_function_: declare_function_ return_type function_header TOKEN_LPAR parameters TOKEN_RPAR . block_of_instructions
   38 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   39                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   40                      | . TOKEN_BEGIN commands TOKEN_END

    TOKEN_BEGIN  shift, and go to state 69

    block_of_instructions  go to state 143


state 117

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   67 call_parameters: call_parameters TOKEN_COMMA . expression
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   85 expression_base: . variable
   86                | . number
   87                | . variable TOKEN_MINUSMINUS
   88                | . variable TOKEN_PLUSPLUS
   89                | . TOKEN_LPAR expression TOKEN_RPAR
   90 expression_mul: . expression_base
   91               | . expression_mul TOKEN_OPER_MUL expression_base
   92 expression_add: . expression_mul
   93               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   94 expression: . expression_add

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 144


state 118

   64 call_fce: TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR .

    $default  reduce using rule 64 (call_fce)


state 119

   63 call_fce: TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR .

    $default  reduce using rule 63 (call_fce)


state 120

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   84 exps: exps TOKEN_COMMA . expression
   85 expression_base: . variable
   86                | . number
   87                | . variable TOKEN_MINUSMINUS
   88                | . variable TOKEN_PLUSPLUS
   89                | . TOKEN_LPAR expression TOKEN_RPAR
   90 expression_mul: . expression_base
   91               | . expression_mul TOKEN_OPER_MUL expression_base
   92 expression_add: . expression_mul
   93               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   94 expression: . expression_add

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 145


state 121

   81 array_access: TOKEN_LSBRA exps TOKEN_RSBRA .

    $default  reduce using rule 81 (array_access)


state 122

   82 array_access: array_access TOKEN_LSBRA exps . TOKEN_RSBRA
   84 exps: exps . TOKEN_COMMA expression

    TOKEN_COMMA  shift, and go to state 120
    TOKEN_RSBRA  shift, and go to state 146


state 123

   20 values: TOKEN_IDENTIFIER .

    $default  reduce using rule 20 (values)


state 124

   18 names: names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values . TOKEN_END
   21 values: values . TOKEN_COMMA TOKEN_IDENTIFIER
   22       | values . TOKEN_COMMA number

    TOKEN_COMMA  shift, and go to state 147
    TOKEN_END    shift, and go to state 148


state 125

   19 values: number .

    $default  reduce using rule 19 (values)


state 126

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   68 matched: TOKEN_IF TOKEN_LPAR . expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   71 unmatched: TOKEN_IF TOKEN_LPAR . expression_bool TOKEN_RPAR block_of_instructions
   72          | TOKEN_IF TOKEN_LPAR . expression_bool TOKEN_RPAR command
   73          | TOKEN_IF TOKEN_LPAR . expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   85 expression_base: . variable
   86                | . number
   87                | . variable TOKEN_MINUSMINUS
   88                | . variable TOKEN_PLUSPLUS
   89                | . TOKEN_LPAR expression TOKEN_RPAR
   90 expression_mul: . expression_base
   91               | . expression_mul TOKEN_OPER_MUL expression_base
   92 expression_add: . expression_mul
   93               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   94 expression: . expression_add
   95 expression_bool_base: . expression
   96                     | . expression TOKEN_OPER_REL expression
   97 expression_bool_or: . expression_bool_base
   98                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   99 expression_bool: . expression_bool_or
  100                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number                go to state 40
    call_fce              go to state 41
    variable              go to state 42
    expression_base       go to state 43
    expression_mul        go to state 44
    expression_add        go to state 45
    expression            go to state 149
    expression_bool_base  go to state 150
    expression_bool_or    go to state 151
    expression_bool       go to state 152


state 127

   52 command: TOKEN_RETURN TOKEN_SEMICOLON .

    $default  reduce using rule 52 (command)


state 128

   51 command: TOKEN_RETURN expression . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 153


state 129

   53 command: TOKEN_BREAK TOKEN_SEMICOLON .

    $default  reduce using rule 53 (command)


state 130

   39 block_of_instructions: TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END .

    $default  reduce using rule 39 (block_of_instructions)


state 131

   62 variable_left: TOKEN_IDENTIFIER array_access .  [TOKEN_ASSIGN]
   77 variable: TOKEN_IDENTIFIER array_access .  [TOKEN_SEMICOLON, TOKEN_DOT, TOKEN_RPAR, TOKEN_PLUSPLUS, TOKEN_MINUSMINUS]
   82 array_access: array_access . TOKEN_LSBRA exps TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 83

    TOKEN_ASSIGN  reduce using rule 62 (variable_left)
    $default      reduce using rule 77 (variable)


state 132

   40 block_of_instructions: TOKEN_BEGIN commands TOKEN_END .

    $default  reduce using rule 40 (block_of_instructions)


state 133

   42 commands: commands matched .

    $default  reduce using rule 42 (commands)


state 134

   44 commands: commands unmatched .

    $default  reduce using rule 44 (commands)


state 135

    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   48 command: forcycle TOKEN_LPAR . init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   60 assign: . variable_left TOKEN_ASSIGN expression
   61 variable_left: . TOKEN_IDENTIFIER
   62              | . TOKEN_IDENTIFIER array_access
   74 init: . local_variables
   75     | . assign

    TOKEN_LOCATION    shift, and go to state 4
    TOKEN_OBJECT      shift, and go to state 5
    TOKEN_VAR_REAL    shift, and go to state 6
    TOKEN_VAR_INT     shift, and go to state 7
    TOKEN_IDENTIFIER  shift, and go to state 154

    type             go to state 99
    local_variables  go to state 155
    simple_type      go to state 11
    complex_type     go to state 12
    assign           go to state 156
    variable_left    go to state 109
    init             go to state 157


state 136

   49 command: do_cycle block_of_instructions . TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON

    TOKEN_WHILE  shift, and go to state 158


state 137

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   50 command: while_cycle TOKEN_LPAR . expression_bool TOKEN_RPAR block_of_instructions
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   85 expression_base: . variable
   86                | . number
   87                | . variable TOKEN_MINUSMINUS
   88                | . variable TOKEN_PLUSPLUS
   89                | . TOKEN_LPAR expression TOKEN_RPAR
   90 expression_mul: . expression_base
   91               | . expression_mul TOKEN_OPER_MUL expression_base
   92 expression_add: . expression_mul
   93               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   94 expression: . expression_add
   95 expression_bool_base: . expression
   96                     | . expression TOKEN_OPER_REL expression
   97 expression_bool_or: . expression_bool_base
   98                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   99 expression_bool: . expression_bool_or
  100                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number                go to state 40
    call_fce              go to state 41
    variable              go to state 42
    expression_base       go to state 43
    expression_mul        go to state 44
    expression_add        go to state 45
    expression            go to state 149
    expression_bool_base  go to state 150
    expression_bool_or    go to state 151
    expression_bool       go to state 159


state 138

   55 command: simple_command TOKEN_SEMICOLON .

    $default  reduce using rule 55 (command)


state 139

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   60 assign: variable_left TOKEN_ASSIGN . expression
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   85 expression_base: . variable
   86                | . number
   87                | . variable TOKEN_MINUSMINUS
   88                | . variable TOKEN_PLUSPLUS
   89                | . TOKEN_LPAR expression TOKEN_RPAR
   90 expression_mul: . expression_base
   91               | . expression_mul TOKEN_OPER_MUL expression_base
   92 expression_add: . expression_mul
   93               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   94 expression: . expression_add

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 160


state 140

   57 simple_command: variable TOKEN_PLUSPLUS .

    $default  reduce using rule 57 (simple_command)


state 141

   58 simple_command: variable TOKEN_MINUSMINUS .

    $default  reduce using rule 58 (simple_command)


state 142

   29 parameters: parameters TOKEN_COMMA type TOKEN_IDENTIFIER .

    $default  reduce using rule 29 (parameters)


state 143

   31 declare_function_: declare_function_ return_type function_header TOKEN_LPAR parameters TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 31 (declare_function_)


state 144

   67 call_parameters: call_parameters TOKEN_COMMA expression .

    $default  reduce using rule 67 (call_parameters)


state 145

   84 exps: exps TOKEN_COMMA expression .

    $default  reduce using rule 84 (exps)


state 146

   82 array_access: array_access TOKEN_LSBRA exps TOKEN_RSBRA .

    $default  reduce using rule 82 (array_access)


state 147

   21 values: values TOKEN_COMMA . TOKEN_IDENTIFIER
   22       | values TOKEN_COMMA . number
   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT

    TOKEN_IDENTIFIER    shift, and go to state 161
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number  go to state 162


state 148

   18 names: names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END .

    $default  reduce using rule 18 (names)


state 149

   95 expression_bool_base: expression .  [TOKEN_SEMICOLON, TOKEN_RPAR, TOKEN_BOOL_AND, TOKEN_BOOL_OR]
   96                     | expression . TOKEN_OPER_REL expression

    TOKEN_OPER_REL  shift, and go to state 163

    $default  reduce using rule 95 (expression_bool_base)


state 150

   97 expression_bool_or: expression_bool_base .

    $default  reduce using rule 97 (expression_bool_or)


state 151

   98 expression_bool_or: expression_bool_or . TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   99 expression_bool: expression_bool_or .  [TOKEN_SEMICOLON, TOKEN_RPAR, TOKEN_BOOL_AND]

    TOKEN_BOOL_OR  shift, and go to state 164

    $default  reduce using rule 99 (expression_bool)


state 152

   68 matched: TOKEN_IF TOKEN_LPAR expression_bool . TOKEN_RPAR matched TOKEN_ELSE matched
   71 unmatched: TOKEN_IF TOKEN_LPAR expression_bool . TOKEN_RPAR block_of_instructions
   72          | TOKEN_IF TOKEN_LPAR expression_bool . TOKEN_RPAR command
   73          | TOKEN_IF TOKEN_LPAR expression_bool . TOKEN_RPAR matched TOKEN_ELSE unmatched
  100 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_RPAR      shift, and go to state 165
    TOKEN_BOOL_AND  shift, and go to state 166


state 153

   51 command: TOKEN_RETURN expression TOKEN_SEMICOLON .

    $default  reduce using rule 51 (command)


state 154

   61 variable_left: TOKEN_IDENTIFIER .  [TOKEN_ASSIGN]
   62              | TOKEN_IDENTIFIER . array_access
   81 array_access: . TOKEN_LSBRA exps TOKEN_RSBRA
   82             | . array_access TOKEN_LSBRA exps TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 58

    $default  reduce using rule 61 (variable_left)

    array_access  go to state 167


state 155

   74 init: local_variables .

    $default  reduce using rule 74 (init)


state 156

   75 init: assign .

    $default  reduce using rule 75 (init)


state 157

   48 command: forcycle TOKEN_LPAR init . TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions

    TOKEN_SEMICOLON  shift, and go to state 168


state 158

   49 command: do_cycle block_of_instructions TOKEN_WHILE . TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON

    TOKEN_LPAR  shift, and go to state 169


state 159

   50 command: while_cycle TOKEN_LPAR expression_bool . TOKEN_RPAR block_of_instructions
  100 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_RPAR      shift, and go to state 170
    TOKEN_BOOL_AND  shift, and go to state 166


state 160

   60 assign: variable_left TOKEN_ASSIGN expression .

    $default  reduce using rule 60 (assign)


state 161

   21 values: values TOKEN_COMMA TOKEN_IDENTIFIER .

    $default  reduce using rule 21 (values)


state 162

   22 values: values TOKEN_COMMA number .

    $default  reduce using rule 22 (values)


state 163

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   85 expression_base: . variable
   86                | . number
   87                | . variable TOKEN_MINUSMINUS
   88                | . variable TOKEN_PLUSPLUS
   89                | . TOKEN_LPAR expression TOKEN_RPAR
   90 expression_mul: . expression_base
   91               | . expression_mul TOKEN_OPER_MUL expression_base
   92 expression_add: . expression_mul
   93               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   94 expression: . expression_add
   96 expression_bool_base: expression TOKEN_OPER_REL . expression

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number           go to state 40
    call_fce         go to state 41
    variable         go to state 42
    expression_base  go to state 43
    expression_mul   go to state 44
    expression_add   go to state 45
    expression       go to state 171


state 164

   98 expression_bool_or: expression_bool_or TOKEN_BOOL_OR . TOKEN_LPAR expression_bool TOKEN_RPAR

    TOKEN_LPAR  shift, and go to state 172


state 165

    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   38 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   39                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   40                      | . TOKEN_BEGIN commands TOKEN_END
   45 forcycle: . TOKEN_FOR
   46 do_cycle: . TOKEN_DO
   47 while_cycle: . TOKEN_WHILE
   48 command: . forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   49        | . do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   50        | . while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   51        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   52        | . TOKEN_RETURN TOKEN_SEMICOLON
   53        | . TOKEN_BREAK TOKEN_SEMICOLON
   54        | . local_variables
   55        | . simple_command TOKEN_SEMICOLON
   56 simple_command: . assign
   57               | . variable TOKEN_PLUSPLUS
   58               | . variable TOKEN_MINUSMINUS
   59               | . variable
   60 assign: . variable_left TOKEN_ASSIGN expression
   61 variable_left: . TOKEN_IDENTIFIER
   62              | . TOKEN_IDENTIFIER array_access
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   68 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   68        | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR . matched TOKEN_ELSE matched
   69        | . command
   70        | . block_of_instructions
   71 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR . block_of_instructions
   72          | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR . command
   73          | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR . matched TOKEN_ELSE unmatched
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_LOCATION        shift, and go to state 4
    TOKEN_OBJECT          shift, and go to state 5
    TOKEN_VAR_REAL        shift, and go to state 6
    TOKEN_VAR_INT         shift, and go to state 7
    TOKEN_IF              shift, and go to state 173
    TOKEN_WHILE           shift, and go to state 91
    TOKEN_DO              shift, and go to state 92
    TOKEN_FOR             shift, and go to state 93
    TOKEN_RETURN          shift, and go to state 94
    TOKEN_BREAK           shift, and go to state 95
    TOKEN_BEGIN           shift, and go to state 69
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 98

    type                   go to state 99
    local_variables        go to state 100
    simple_type            go to state 11
    complex_type           go to state 12
    block_of_instructions  go to state 174
    forcycle               go to state 103
    do_cycle               go to state 104
    while_cycle            go to state 105
    command                go to state 175
    simple_command         go to state 107
    assign                 go to state 108
    variable_left          go to state 109
    call_fce               go to state 41
    matched                go to state 176
    variable               go to state 112


state 166

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   85 expression_base: . variable
   86                | . number
   87                | . variable TOKEN_MINUSMINUS
   88                | . variable TOKEN_PLUSPLUS
   89                | . TOKEN_LPAR expression TOKEN_RPAR
   90 expression_mul: . expression_base
   91               | . expression_mul TOKEN_OPER_MUL expression_base
   92 expression_add: . expression_mul
   93               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   94 expression: . expression_add
   95 expression_bool_base: . expression
   96                     | . expression TOKEN_OPER_REL expression
   97 expression_bool_or: . expression_bool_base
   98                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
  100 expression_bool: expression_bool TOKEN_BOOL_AND . expression_bool_or

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number                go to state 40
    call_fce              go to state 41
    variable              go to state 42
    expression_base       go to state 43
    expression_mul        go to state 44
    expression_add        go to state 45
    expression            go to state 149
    expression_bool_base  go to state 150
    expression_bool_or    go to state 177


state 167

   62 variable_left: TOKEN_IDENTIFIER array_access .  [TOKEN_ASSIGN]
   82 array_access: array_access . TOKEN_LSBRA exps TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 83

    $default  reduce using rule 62 (variable_left)


state 168

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   48 command: forcycle TOKEN_LPAR init TOKEN_SEMICOLON . expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   85 expression_base: . variable
   86                | . number
   87                | . variable TOKEN_MINUSMINUS
   88                | . variable TOKEN_PLUSPLUS
   89                | . TOKEN_LPAR expression TOKEN_RPAR
   90 expression_mul: . expression_base
   91               | . expression_mul TOKEN_OPER_MUL expression_base
   92 expression_add: . expression_mul
   93               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   94 expression: . expression_add
   95 expression_bool_base: . expression
   96                     | . expression TOKEN_OPER_REL expression
   97 expression_bool_or: . expression_bool_base
   98                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   99 expression_bool: . expression_bool_or
  100                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number                go to state 40
    call_fce              go to state 41
    variable              go to state 42
    expression_base       go to state 43
    expression_mul        go to state 44
    expression_add        go to state 45
    expression            go to state 149
    expression_bool_base  go to state 150
    expression_bool_or    go to state 151
    expression_bool       go to state 178


state 169

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   49 command: do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR . expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   85 expression_base: . variable
   86                | . number
   87                | . variable TOKEN_MINUSMINUS
   88                | . variable TOKEN_PLUSPLUS
   89                | . TOKEN_LPAR expression TOKEN_RPAR
   90 expression_mul: . expression_base
   91               | . expression_mul TOKEN_OPER_MUL expression_base
   92 expression_add: . expression_mul
   93               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   94 expression: . expression_add
   95 expression_bool_base: . expression
   96                     | . expression TOKEN_OPER_REL expression
   97 expression_bool_or: . expression_bool_base
   98                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   99 expression_bool: . expression_bool_or
  100                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number                go to state 40
    call_fce              go to state 41
    variable              go to state 42
    expression_base       go to state 43
    expression_mul        go to state 44
    expression_add        go to state 45
    expression            go to state 149
    expression_bool_base  go to state 150
    expression_bool_or    go to state 151
    expression_bool       go to state 179


state 170

   38 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   39                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   40                      | . TOKEN_BEGIN commands TOKEN_END
   50 command: while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR . block_of_instructions

    TOKEN_BEGIN  shift, and go to state 69

    block_of_instructions  go to state 180


state 171

   96 expression_bool_base: expression TOKEN_OPER_REL expression .

    $default  reduce using rule 96 (expression_bool_base)


state 172

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   85 expression_base: . variable
   86                | . number
   87                | . variable TOKEN_MINUSMINUS
   88                | . variable TOKEN_PLUSPLUS
   89                | . TOKEN_LPAR expression TOKEN_RPAR
   90 expression_mul: . expression_base
   91               | . expression_mul TOKEN_OPER_MUL expression_base
   92 expression_add: . expression_mul
   93               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   94 expression: . expression_add
   95 expression_bool_base: . expression
   96                     | . expression TOKEN_OPER_REL expression
   97 expression_bool_or: . expression_bool_base
   98                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   98                   | expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR . expression_bool TOKEN_RPAR
   99 expression_bool: . expression_bool_or
  100                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number                go to state 40
    call_fce              go to state 41
    variable              go to state 42
    expression_base       go to state 43
    expression_mul        go to state 44
    expression_add        go to state 45
    expression            go to state 149
    expression_bool_base  go to state 150
    expression_bool_or    go to state 151
    expression_bool       go to state 181


state 173

   68 matched: TOKEN_IF . TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched

    TOKEN_LPAR  shift, and go to state 182


state 174

   70 matched: block_of_instructions .  [TOKEN_ELSE]
   71 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions .  [TOKEN_LOCATION, TOKEN_OBJECT, TOKEN_VAR_REAL, TOKEN_VAR_INT, TOKEN_IF, TOKEN_WHILE, TOKEN_DO, TOKEN_FOR, TOKEN_RETURN, TOKEN_BREAK, TOKEN_BEGIN, TOKEN_END, TOKEN_OBJECT_FEATURE, TOKEN_IDENTIFIER]

    TOKEN_ELSE  reduce using rule 70 (matched)
    $default    reduce using rule 71 (unmatched)


state 175

   69 matched: command .  [TOKEN_ELSE]
   72 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR command .  [TOKEN_LOCATION, TOKEN_OBJECT, TOKEN_VAR_REAL, TOKEN_VAR_INT, TOKEN_IF, TOKEN_WHILE, TOKEN_DO, TOKEN_FOR, TOKEN_RETURN, TOKEN_BREAK, TOKEN_BEGIN, TOKEN_END, TOKEN_OBJECT_FEATURE, TOKEN_IDENTIFIER]

    TOKEN_ELSE  reduce using rule 69 (matched)
    $default    reduce using rule 72 (unmatched)


state 176

   68 matched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched . TOKEN_ELSE matched
   73 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched . TOKEN_ELSE unmatched

    TOKEN_ELSE  shift, and go to state 183


state 177

   98 expression_bool_or: expression_bool_or . TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
  100 expression_bool: expression_bool TOKEN_BOOL_AND expression_bool_or .  [TOKEN_SEMICOLON, TOKEN_RPAR, TOKEN_BOOL_AND]

    TOKEN_BOOL_OR  shift, and go to state 164

    $default  reduce using rule 100 (expression_bool)


state 178

   48 command: forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool . TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
  100 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_SEMICOLON  shift, and go to state 184
    TOKEN_BOOL_AND   shift, and go to state 166


state 179

   49 command: do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool . TOKEN_RPAR TOKEN_SEMICOLON
  100 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_RPAR      shift, and go to state 185
    TOKEN_BOOL_AND  shift, and go to state 166


state 180

   50 command: while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 50 (command)


state 181

   98 expression_bool_or: expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool . TOKEN_RPAR
  100 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_RPAR      shift, and go to state 186
    TOKEN_BOOL_AND  shift, and go to state 166


state 182

   34 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   35       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   36       | . TOKEN_REAL
   37       | . TOKEN_UINT
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   68 matched: TOKEN_IF TOKEN_LPAR . expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   85 expression_base: . variable
   86                | . number
   87                | . variable TOKEN_MINUSMINUS
   88                | . variable TOKEN_PLUSPLUS
   89                | . TOKEN_LPAR expression TOKEN_RPAR
   90 expression_mul: . expression_base
   91               | . expression_mul TOKEN_OPER_MUL expression_base
   92 expression_add: . expression_mul
   93               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   94 expression: . expression_add
   95 expression_bool_base: . expression
   96                     | . expression TOKEN_OPER_REL expression
   97 expression_bool_or: . expression_bool_base
   98                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   99 expression_bool: . expression_bool_or
  100                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR            shift, and go to state 34
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 36
    TOKEN_UINT            shift, and go to state 37
    TOKEN_REAL            shift, and go to state 38
    TOKEN_OPER_SIGNADD    shift, and go to state 39

    number                go to state 40
    call_fce              go to state 41
    variable              go to state 42
    expression_base       go to state 43
    expression_mul        go to state 44
    expression_add        go to state 45
    expression            go to state 149
    expression_bool_base  go to state 150
    expression_bool_or    go to state 151
    expression_bool       go to state 187


state 183

    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   38 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   39                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   40                      | . TOKEN_BEGIN commands TOKEN_END
   45 forcycle: . TOKEN_FOR
   46 do_cycle: . TOKEN_DO
   47 while_cycle: . TOKEN_WHILE
   48 command: . forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   49        | . do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   50        | . while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   51        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   52        | . TOKEN_RETURN TOKEN_SEMICOLON
   53        | . TOKEN_BREAK TOKEN_SEMICOLON
   54        | . local_variables
   55        | . simple_command TOKEN_SEMICOLON
   56 simple_command: . assign
   57               | . variable TOKEN_PLUSPLUS
   58               | . variable TOKEN_MINUSMINUS
   59               | . variable
   60 assign: . variable_left TOKEN_ASSIGN expression
   61 variable_left: . TOKEN_IDENTIFIER
   62              | . TOKEN_IDENTIFIER array_access
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   68 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   68        | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE . matched
   69        | . command
   70        | . block_of_instructions
   71 unmatched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   72          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR command
   73          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched
   73          | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE . unmatched
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_LOCATION        shift, and go to state 4
    TOKEN_OBJECT          shift, and go to state 5
    TOKEN_VAR_REAL        shift, and go to state 6
    TOKEN_VAR_INT         shift, and go to state 7
    TOKEN_IF              shift, and go to state 90
    TOKEN_WHILE           shift, and go to state 91
    TOKEN_DO              shift, and go to state 92
    TOKEN_FOR             shift, and go to state 93
    TOKEN_RETURN          shift, and go to state 94
    TOKEN_BREAK           shift, and go to state 95
    TOKEN_BEGIN           shift, and go to state 69
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 98

    type                   go to state 99
    local_variables        go to state 100
    simple_type            go to state 11
    complex_type           go to state 12
    block_of_instructions  go to state 101
    forcycle               go to state 103
    do_cycle               go to state 104
    while_cycle            go to state 105
    command                go to state 106
    simple_command         go to state 107
    assign                 go to state 108
    variable_left          go to state 109
    call_fce               go to state 41
    matched                go to state 188
    unmatched              go to state 189
    variable               go to state 112


state 184

   48 command: forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON . simple_command TOKEN_RPAR block_of_instructions
   56 simple_command: . assign
   57               | . variable TOKEN_PLUSPLUS
   58               | . variable TOKEN_MINUSMINUS
   59               | . variable
   60 assign: . variable_left TOKEN_ASSIGN expression
   61 variable_left: . TOKEN_IDENTIFIER
   62              | . TOKEN_IDENTIFIER array_access
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 98

    simple_command  go to state 190
    assign          go to state 108
    variable_left   go to state 109
    call_fce        go to state 41
    variable        go to state 112


state 185

   49 command: do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 191


state 186

   98 expression_bool_or: expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR .

    $default  reduce using rule 98 (expression_bool_or)


state 187

   68 matched: TOKEN_IF TOKEN_LPAR expression_bool . TOKEN_RPAR matched TOKEN_ELSE matched
  100 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_RPAR      shift, and go to state 192
    TOKEN_BOOL_AND  shift, and go to state 166


state 188

   68 matched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched .

    $default  reduce using rule 68 (matched)


state 189

   73 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched .

    $default  reduce using rule 73 (unmatched)


state 190

   48 command: forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command . TOKEN_RPAR block_of_instructions

    TOKEN_RPAR  shift, and go to state 193


state 191

   49 command: do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON .

    $default  reduce using rule 49 (command)


state 192

    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   38 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   39                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   40                      | . TOKEN_BEGIN commands TOKEN_END
   45 forcycle: . TOKEN_FOR
   46 do_cycle: . TOKEN_DO
   47 while_cycle: . TOKEN_WHILE
   48 command: . forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   49        | . do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   50        | . while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   51        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   52        | . TOKEN_RETURN TOKEN_SEMICOLON
   53        | . TOKEN_BREAK TOKEN_SEMICOLON
   54        | . local_variables
   55        | . simple_command TOKEN_SEMICOLON
   56 simple_command: . assign
   57               | . variable TOKEN_PLUSPLUS
   58               | . variable TOKEN_MINUSMINUS
   59               | . variable
   60 assign: . variable_left TOKEN_ASSIGN expression
   61 variable_left: . TOKEN_IDENTIFIER
   62              | . TOKEN_IDENTIFIER array_access
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   68 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   68        | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR . matched TOKEN_ELSE matched
   69        | . command
   70        | . block_of_instructions
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_LOCATION        shift, and go to state 4
    TOKEN_OBJECT          shift, and go to state 5
    TOKEN_VAR_REAL        shift, and go to state 6
    TOKEN_VAR_INT         shift, and go to state 7
    TOKEN_IF              shift, and go to state 173
    TOKEN_WHILE           shift, and go to state 91
    TOKEN_DO              shift, and go to state 92
    TOKEN_FOR             shift, and go to state 93
    TOKEN_RETURN          shift, and go to state 94
    TOKEN_BREAK           shift, and go to state 95
    TOKEN_BEGIN           shift, and go to state 69
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 98

    type                   go to state 99
    local_variables        go to state 100
    simple_type            go to state 11
    complex_type           go to state 12
    block_of_instructions  go to state 101
    forcycle               go to state 103
    do_cycle               go to state 104
    while_cycle            go to state 105
    command                go to state 106
    simple_command         go to state 107
    assign                 go to state 108
    variable_left          go to state 109
    call_fce               go to state 41
    matched                go to state 194
    variable               go to state 112


state 193

   38 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   39                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   40                      | . TOKEN_BEGIN commands TOKEN_END
   48 command: forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR . block_of_instructions

    TOKEN_BEGIN  shift, and go to state 69

    block_of_instructions  go to state 195


state 194

   68 matched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched . TOKEN_ELSE matched

    TOKEN_ELSE  shift, and go to state 196


state 195

   48 command: forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 48 (command)


state 196

    4 type: . simple_type
    5     | . complex_type
    6 local_variables: . type names TOKEN_SEMICOLON
    7 simple_type: . TOKEN_VAR_REAL
    8            | . TOKEN_VAR_INT
    9            | . TOKEN_LOCATION
   10            | . TOKEN_OBJECT
   11 complex_type: . simple_type ranges
   38 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   39                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   40                      | . TOKEN_BEGIN commands TOKEN_END
   45 forcycle: . TOKEN_FOR
   46 do_cycle: . TOKEN_DO
   47 while_cycle: . TOKEN_WHILE
   48 command: . forcycle TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   49        | . do_cycle block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   50        | . while_cycle TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   51        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   52        | . TOKEN_RETURN TOKEN_SEMICOLON
   53        | . TOKEN_BREAK TOKEN_SEMICOLON
   54        | . local_variables
   55        | . simple_command TOKEN_SEMICOLON
   56 simple_command: . assign
   57               | . variable TOKEN_PLUSPLUS
   58               | . variable TOKEN_MINUSMINUS
   59               | . variable
   60 assign: . variable_left TOKEN_ASSIGN expression
   61 variable_left: . TOKEN_IDENTIFIER
   62              | . TOKEN_IDENTIFIER array_access
   63 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   64         | . TOKEN_OBJECT_FEATURE TOKEN_LPAR call_parameters TOKEN_RPAR
   68 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   68        | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE . matched
   69        | . command
   70        | . block_of_instructions
   76 variable: . TOKEN_IDENTIFIER
   77         | . TOKEN_IDENTIFIER array_access
   78         | . call_fce
   79         | . variable TOKEN_DOT call_fce
   80         | . variable TOKEN_DOT TOKEN_IDENTIFIER

    TOKEN_LOCATION        shift, and go to state 4
    TOKEN_OBJECT          shift, and go to state 5
    TOKEN_VAR_REAL        shift, and go to state 6
    TOKEN_VAR_INT         shift, and go to state 7
    TOKEN_IF              shift, and go to state 173
    TOKEN_WHILE           shift, and go to state 91
    TOKEN_DO              shift, and go to state 92
    TOKEN_FOR             shift, and go to state 93
    TOKEN_RETURN          shift, and go to state 94
    TOKEN_BREAK           shift, and go to state 95
    TOKEN_BEGIN           shift, and go to state 69
    TOKEN_OBJECT_FEATURE  shift, and go to state 35
    TOKEN_IDENTIFIER      shift, and go to state 98

    type                   go to state 99
    local_variables        go to state 100
    simple_type            go to state 11
    complex_type           go to state 12
    block_of_instructions  go to state 101
    forcycle               go to state 103
    do_cycle               go to state 104
    while_cycle            go to state 105
    command                go to state 106
    simple_command         go to state 107
    assign                 go to state 108
    variable_left          go to state 109
    call_fce               go to state 41
    matched                go to state 188
    variable               go to state 112
