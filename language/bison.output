Terminals which are not used

   TOKEN_ARRAY


Grammar

    0 $accept: program $end

    1 program: global_variables declare_functions TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR block_of_instructions

    2 global_variables: /* empty */
    3                 | global_variables local_variables

    4 local_variables: simple_type names TOKEN_SEMICOLON
    5                | complex_type names TOKEN_SEMICOLON

    6 simple_type: TOKEN_VAR_REAL
    7            | TOKEN_VAR_INT
    8            | TOKEN_LOCATION
    9            | TOKEN_OBJECT

   10 complex_type: simple_type ranges
   11             | complex_type simple_type ranges

   12 ranges: TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA
   13       | ranges TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA

   14 names: TOKEN_IDENTIFIER
   15      | TOKEN_IDENTIFIER TOKEN_ASSIGN number
   16      | names TOKEN_COMMA TOKEN_IDENTIFIER
   17      | names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN number
   18      | names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END

   19 values: number
   20       | TOKEN_IDENTIFIER
   21       | values TOKEN_COMMA TOKEN_IDENTIFIER
   22       | values TOKEN_COMMA number

   23 declare_functions: /* empty */
   24                  | declare_function_

   25 function_header: TOKEN_FUNCTION TOKEN_IDENTIFIER

   26 declare_function_: function_header TOKEN_LPAR names TOKEN_RPAR block_of_instructions
   27                  | declare_function_ function_header TOKEN_LPAR names TOKEN_RPAR block_of_instructions
   28                  | function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions
   29                  | declare_function_ function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions

   30 number: TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | TOKEN_REAL
   33       | TOKEN_UINT

   34 block_of_instructions: TOKEN_BEGIN TOKEN_END
   35                      | TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | TOKEN_BEGIN commands TOKEN_END

   37 commands: matched
   38         | commands matched
   39         | unmatched
   40         | commands unmatched

   41 command: TOKEN_FOR TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   42        | TOKEN_DO block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   43        | TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   44        | TOKEN_RETURN expression TOKEN_SEMICOLON
   45        | TOKEN_RETURN TOKEN_SEMICOLON
   46        | TOKEN_BREAK TOKEN_SEMICOLON
   47        | local_variables
   48        | simple_command TOKEN_SEMICOLON

   49 simple_command: assign
   50               | variable TOKEN_PLUSPLUS
   51               | variable TOKEN_MINUSMINUS
   52               | variable

   53 assign: variable_left TOKEN_ASSIGN variable
   54       | variable_left TOKEN_ASSIGN number

   55 variable_left: TOKEN_IDENTIFIER
   56              | TOKEN_IDENTIFIER array_access

   57 call_fce: TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR

   58 call_parameters: expression
   59                | /* empty */
   60                | call_parameters TOKEN_COMMA expression

   61 matched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   62        | command
   63        | block_of_instructions

   64 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   65          | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR command
   66          | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched

   67 init: TOKEN_VAR_INT TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   68     | TOKEN_VAR_REAL TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   69     | TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   70     | TOKEN_IDENTIFIER TOKEN_LSBRA expression TOKEN_RSBRA TOKEN_ASSIGN expression

   71 variable: TOKEN_IDENTIFIER
   72         | TOKEN_IDENTIFIER array_access
   73         | call_fce
   74         | variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | variable TOKEN_DOT call_fce

   76 array_access: TOKEN_LSBRA exps TOKEN_RSBRA
   77             | array_access TOKEN_LSBRA exps TOKEN_RSBRA

   78 exps: expression
   79     | exps TOKEN_COMMA expression

   80 expression_base: variable
   81                | number
   82                | variable TOKEN_MINUSMINUS
   83                | variable TOKEN_PLUSPLUS
   84                | TOKEN_LPAR expression TOKEN_RPAR

   85 expression_mul: expression_base
   86               | expression_mul TOKEN_OPER_MUL expression_base

   87 expression_add: expression_mul
   88               | expression_add TOKEN_OPER_SIGNADD expression_mul

   89 expression: expression_add

   90 expression_bool_base: expression
   91                     | expression TOKEN_OPER_REL expression

   92 expression_bool_or: expression_bool_base
   93                   | expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR

   94 expression_bool: expression_bool_or
   95                | expression_bool TOKEN_BOOL_AND expression_bool_or


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_MAIN (258) 1
TOKEN_LOCATION (259) 8
TOKEN_OBJECT (260) 9
TOKEN_VAR_REAL (261) 6 68
TOKEN_VAR_INT (262) 7 67
TOKEN_FUNCTION (263) 25
TOKEN_ARRAY (264)
TOKEN_IF (265) 61 64 65 66
TOKEN_ELSE (266) 61 66
TOKEN_WHILE (267) 42 43
TOKEN_DO (268) 42
TOKEN_FOR (269) 41
TOKEN_BOOL_AND (270) 95
TOKEN_BOOL_OR (271) 93
TOKEN_RETURN (272) 44 45
TOKEN_BREAK (273) 46
TOKEN_SEMICOLON (274) 4 5 35 41 42 44 45 46 48
TOKEN_DOT (275) 74 75
TOKEN_COMMA (276) 16 17 18 21 22 60 79
TOKEN_LPAR (277) 1 26 27 28 29 41 42 43 57 61 64 65 66 84 93
TOKEN_RPAR (278) 1 26 27 28 29 41 42 43 57 61 64 65 66 84 93
TOKEN_LSBRA (279) 12 13 70 76 77
TOKEN_RSBRA (280) 12 13 70 76 77
TOKEN_ASSIGN (281) 15 17 18 53 54 67 68 69 70
TOKEN_BEGIN (282) 18 34 35 36
TOKEN_END (283) 18 34 35 36
TOKEN_IDENTIFIER (284) 14 15 16 17 18 20 21 25 55 56 57 67 68 69 70
    71 72 74
TOKEN_UINT (285) 12 13 31 33
TOKEN_REAL (286) 30 32
TOKEN_OPER_REL (287) 91
TOKEN_OPER_SIGNADD (288) 30 31 88
TOKEN_OPER_MUL (289) 86
TOKEN_PLUSPLUS (290) 50 83
TOKEN_MINUSMINUS (291) 51 82


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1, on right: 0
global_variables (39)
    on left: 2 3, on right: 1 3
local_variables (40)
    on left: 4 5, on right: 3 47
simple_type (41)
    on left: 6 7 8 9, on right: 4 10 11
complex_type (42)
    on left: 10 11, on right: 5 11
ranges (43)
    on left: 12 13, on right: 10 11 13
names (44)
    on left: 14 15 16 17 18, on right: 4 5 16 17 18 26 27
values (45)
    on left: 19 20 21 22, on right: 18 21 22
declare_functions (46)
    on left: 23 24, on right: 1
function_header (47)
    on left: 25, on right: 26 27 28 29
declare_function_ (48)
    on left: 26 27 28 29, on right: 24 27 29
number (49)
    on left: 30 31 32 33, on right: 15 17 19 22 54 81
block_of_instructions (50)
    on left: 34 35 36, on right: 1 26 27 28 29 41 42 43 63 64
commands (51)
    on left: 37 38 39 40, on right: 36 38 40
command (52)
    on left: 41 42 43 44 45 46 47 48, on right: 62 65
simple_command (53)
    on left: 49 50 51 52, on right: 41 48
assign (54)
    on left: 53 54, on right: 49
variable_left (55)
    on left: 55 56, on right: 53 54
call_fce (56)
    on left: 57, on right: 73 75
call_parameters (57)
    on left: 58 59 60, on right: 57 60
matched (58)
    on left: 61 62 63, on right: 37 38 61 66
unmatched (59)
    on left: 64 65 66, on right: 39 40 66
init (60)
    on left: 67 68 69 70, on right: 41
variable (61)
    on left: 71 72 73 74 75, on right: 50 51 52 53 74 75 80 82 83
array_access (62)
    on left: 76 77, on right: 56 72 77
exps (63)
    on left: 78 79, on right: 76 77 79
expression_base (64)
    on left: 80 81 82 83 84, on right: 85 86
expression_mul (65)
    on left: 85 86, on right: 86 87 88
expression_add (66)
    on left: 87 88, on right: 88 89
expression (67)
    on left: 89, on right: 44 58 60 67 68 69 70 78 79 84 90 91
expression_bool_base (68)
    on left: 90 91, on right: 92
expression_bool_or (69)
    on left: 92 93, on right: 93 94 95
expression_bool (70)
    on left: 94 95, on right: 41 42 43 61 64 65 66 93 95


state 0

    0 $accept: . program $end
    1 program: . global_variables declare_functions TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR block_of_instructions
    2 global_variables: .
    3                 | . global_variables local_variables

    $default  reduce using rule 2 (global_variables)

    program           go to state 1
    global_variables  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: global_variables . declare_functions TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR block_of_instructions
    3 global_variables: global_variables . local_variables
    4 local_variables: . simple_type names TOKEN_SEMICOLON
    5                | . complex_type names TOKEN_SEMICOLON
    6 simple_type: . TOKEN_VAR_REAL
    7            | . TOKEN_VAR_INT
    8            | . TOKEN_LOCATION
    9            | . TOKEN_OBJECT
   10 complex_type: . simple_type ranges
   11             | . complex_type simple_type ranges
   23 declare_functions: .  [TOKEN_MAIN]
   24                  | . declare_function_
   25 function_header: . TOKEN_FUNCTION TOKEN_IDENTIFIER
   26 declare_function_: . function_header TOKEN_LPAR names TOKEN_RPAR block_of_instructions
   27                  | . declare_function_ function_header TOKEN_LPAR names TOKEN_RPAR block_of_instructions
   28                  | . function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions
   29                  | . declare_function_ function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_LOCATION  shift, and go to state 4
    TOKEN_OBJECT    shift, and go to state 5
    TOKEN_VAR_REAL  shift, and go to state 6
    TOKEN_VAR_INT   shift, and go to state 7
    TOKEN_FUNCTION  shift, and go to state 8

    $default  reduce using rule 23 (declare_functions)

    local_variables    go to state 9
    simple_type        go to state 10
    complex_type       go to state 11
    declare_functions  go to state 12
    function_header    go to state 13
    declare_function_  go to state 14


state 3

    0 $accept: program $end .

    $default  accept


state 4

    8 simple_type: TOKEN_LOCATION .

    $default  reduce using rule 8 (simple_type)


state 5

    9 simple_type: TOKEN_OBJECT .

    $default  reduce using rule 9 (simple_type)


state 6

    6 simple_type: TOKEN_VAR_REAL .

    $default  reduce using rule 6 (simple_type)


state 7

    7 simple_type: TOKEN_VAR_INT .

    $default  reduce using rule 7 (simple_type)


state 8

   25 function_header: TOKEN_FUNCTION . TOKEN_IDENTIFIER

    TOKEN_IDENTIFIER  shift, and go to state 15


state 9

    3 global_variables: global_variables local_variables .

    $default  reduce using rule 3 (global_variables)


state 10

    4 local_variables: simple_type . names TOKEN_SEMICOLON
   10 complex_type: simple_type . ranges
   12 ranges: . TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA
   13       | . ranges TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA
   14 names: . TOKEN_IDENTIFIER
   15      | . TOKEN_IDENTIFIER TOKEN_ASSIGN number
   16      | . names TOKEN_COMMA TOKEN_IDENTIFIER
   17      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN number
   18      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END

    TOKEN_LSBRA       shift, and go to state 16
    TOKEN_IDENTIFIER  shift, and go to state 17

    ranges  go to state 18
    names   go to state 19


state 11

    5 local_variables: complex_type . names TOKEN_SEMICOLON
    6 simple_type: . TOKEN_VAR_REAL
    7            | . TOKEN_VAR_INT
    8            | . TOKEN_LOCATION
    9            | . TOKEN_OBJECT
   11 complex_type: complex_type . simple_type ranges
   14 names: . TOKEN_IDENTIFIER
   15      | . TOKEN_IDENTIFIER TOKEN_ASSIGN number
   16      | . names TOKEN_COMMA TOKEN_IDENTIFIER
   17      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN number
   18      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END

    TOKEN_LOCATION    shift, and go to state 4
    TOKEN_OBJECT      shift, and go to state 5
    TOKEN_VAR_REAL    shift, and go to state 6
    TOKEN_VAR_INT     shift, and go to state 7
    TOKEN_IDENTIFIER  shift, and go to state 17

    simple_type  go to state 20
    names        go to state 21


state 12

    1 program: global_variables declare_functions . TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_MAIN  shift, and go to state 22


state 13

   26 declare_function_: function_header . TOKEN_LPAR names TOKEN_RPAR block_of_instructions
   28                  | function_header . TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_LPAR  shift, and go to state 23


state 14

   24 declare_functions: declare_function_ .  [TOKEN_MAIN]
   25 function_header: . TOKEN_FUNCTION TOKEN_IDENTIFIER
   27 declare_function_: declare_function_ . function_header TOKEN_LPAR names TOKEN_RPAR block_of_instructions
   29                  | declare_function_ . function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_FUNCTION  shift, and go to state 8

    $default  reduce using rule 24 (declare_functions)

    function_header  go to state 24


state 15

   25 function_header: TOKEN_FUNCTION TOKEN_IDENTIFIER .

    $default  reduce using rule 25 (function_header)


state 16

   12 ranges: TOKEN_LSBRA . TOKEN_UINT TOKEN_RSBRA

    TOKEN_UINT  shift, and go to state 25


state 17

   14 names: TOKEN_IDENTIFIER .  [TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_RPAR]
   15      | TOKEN_IDENTIFIER . TOKEN_ASSIGN number

    TOKEN_ASSIGN  shift, and go to state 26

    $default  reduce using rule 14 (names)


state 18

   10 complex_type: simple_type ranges .  [TOKEN_LOCATION, TOKEN_OBJECT, TOKEN_VAR_REAL, TOKEN_VAR_INT, TOKEN_IDENTIFIER]
   13 ranges: ranges . TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 27

    $default  reduce using rule 10 (complex_type)


state 19

    4 local_variables: simple_type names . TOKEN_SEMICOLON
   16 names: names . TOKEN_COMMA TOKEN_IDENTIFIER
   17      | names . TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN number
   18      | names . TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END

    TOKEN_SEMICOLON  shift, and go to state 28
    TOKEN_COMMA      shift, and go to state 29


state 20

   11 complex_type: complex_type simple_type . ranges
   12 ranges: . TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA
   13       | . ranges TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 16

    ranges  go to state 30


state 21

    5 local_variables: complex_type names . TOKEN_SEMICOLON
   16 names: names . TOKEN_COMMA TOKEN_IDENTIFIER
   17      | names . TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN number
   18      | names . TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END

    TOKEN_SEMICOLON  shift, and go to state 31
    TOKEN_COMMA      shift, and go to state 29


state 22

    1 program: global_variables declare_functions TOKEN_MAIN . TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_LPAR  shift, and go to state 32


state 23

   14 names: . TOKEN_IDENTIFIER
   15      | . TOKEN_IDENTIFIER TOKEN_ASSIGN number
   16      | . names TOKEN_COMMA TOKEN_IDENTIFIER
   17      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN number
   18      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END
   26 declare_function_: function_header TOKEN_LPAR . names TOKEN_RPAR block_of_instructions
   28                  | function_header TOKEN_LPAR . TOKEN_RPAR block_of_instructions

    TOKEN_RPAR        shift, and go to state 33
    TOKEN_IDENTIFIER  shift, and go to state 17

    names  go to state 34


state 24

   27 declare_function_: declare_function_ function_header . TOKEN_LPAR names TOKEN_RPAR block_of_instructions
   29                  | declare_function_ function_header . TOKEN_LPAR TOKEN_RPAR block_of_instructions

    TOKEN_LPAR  shift, and go to state 35


state 25

   12 ranges: TOKEN_LSBRA TOKEN_UINT . TOKEN_RSBRA

    TOKEN_RSBRA  shift, and go to state 36


state 26

   15 names: TOKEN_IDENTIFIER TOKEN_ASSIGN . number
   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT

    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number  go to state 40


state 27

   13 ranges: ranges TOKEN_LSBRA . TOKEN_UINT TOKEN_RSBRA

    TOKEN_UINT  shift, and go to state 41


state 28

    4 local_variables: simple_type names TOKEN_SEMICOLON .

    $default  reduce using rule 4 (local_variables)


state 29

   16 names: names TOKEN_COMMA . TOKEN_IDENTIFIER
   17      | names TOKEN_COMMA . TOKEN_IDENTIFIER TOKEN_ASSIGN number
   18      | names TOKEN_COMMA . TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END

    TOKEN_IDENTIFIER  shift, and go to state 42


state 30

   11 complex_type: complex_type simple_type ranges .  [TOKEN_LOCATION, TOKEN_OBJECT, TOKEN_VAR_REAL, TOKEN_VAR_INT, TOKEN_IDENTIFIER]
   13 ranges: ranges . TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 27

    $default  reduce using rule 11 (complex_type)


state 31

    5 local_variables: complex_type names TOKEN_SEMICOLON .

    $default  reduce using rule 5 (local_variables)


state 32

    1 program: global_variables declare_functions TOKEN_MAIN TOKEN_LPAR . TOKEN_RPAR block_of_instructions

    TOKEN_RPAR  shift, and go to state 43


state 33

   28 declare_function_: function_header TOKEN_LPAR TOKEN_RPAR . block_of_instructions
   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END

    TOKEN_BEGIN  shift, and go to state 44

    block_of_instructions  go to state 45


state 34

   16 names: names . TOKEN_COMMA TOKEN_IDENTIFIER
   17      | names . TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN number
   18      | names . TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END
   26 declare_function_: function_header TOKEN_LPAR names . TOKEN_RPAR block_of_instructions

    TOKEN_COMMA  shift, and go to state 29
    TOKEN_RPAR   shift, and go to state 46


state 35

   14 names: . TOKEN_IDENTIFIER
   15      | . TOKEN_IDENTIFIER TOKEN_ASSIGN number
   16      | . names TOKEN_COMMA TOKEN_IDENTIFIER
   17      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN number
   18      | . names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END
   27 declare_function_: declare_function_ function_header TOKEN_LPAR . names TOKEN_RPAR block_of_instructions
   29                  | declare_function_ function_header TOKEN_LPAR . TOKEN_RPAR block_of_instructions

    TOKEN_RPAR        shift, and go to state 47
    TOKEN_IDENTIFIER  shift, and go to state 17

    names  go to state 48


state 36

   12 ranges: TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA .

    $default  reduce using rule 12 (ranges)


state 37

   33 number: TOKEN_UINT .

    $default  reduce using rule 33 (number)


state 38

   32 number: TOKEN_REAL .

    $default  reduce using rule 32 (number)


state 39

   30 number: TOKEN_OPER_SIGNADD . TOKEN_REAL
   31       | TOKEN_OPER_SIGNADD . TOKEN_UINT

    TOKEN_UINT  shift, and go to state 49
    TOKEN_REAL  shift, and go to state 50


state 40

   15 names: TOKEN_IDENTIFIER TOKEN_ASSIGN number .

    $default  reduce using rule 15 (names)


state 41

   13 ranges: ranges TOKEN_LSBRA TOKEN_UINT . TOKEN_RSBRA

    TOKEN_RSBRA  shift, and go to state 51


state 42

   16 names: names TOKEN_COMMA TOKEN_IDENTIFIER .  [TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_RPAR]
   17      | names TOKEN_COMMA TOKEN_IDENTIFIER . TOKEN_ASSIGN number
   18      | names TOKEN_COMMA TOKEN_IDENTIFIER . TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END

    TOKEN_ASSIGN  shift, and go to state 52

    $default  reduce using rule 16 (names)


state 43

    1 program: global_variables declare_functions TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR . block_of_instructions
   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END

    TOKEN_BEGIN  shift, and go to state 44

    block_of_instructions  go to state 53


state 44

    4 local_variables: . simple_type names TOKEN_SEMICOLON
    5                | . complex_type names TOKEN_SEMICOLON
    6 simple_type: . TOKEN_VAR_REAL
    7            | . TOKEN_VAR_INT
    8            | . TOKEN_LOCATION
    9            | . TOKEN_OBJECT
   10 complex_type: . simple_type ranges
   11             | . complex_type simple_type ranges
   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   34                      | TOKEN_BEGIN . TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   35                      | TOKEN_BEGIN . TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END
   36                      | TOKEN_BEGIN . commands TOKEN_END
   37 commands: . matched
   38         | . commands matched
   39         | . unmatched
   40         | . commands unmatched
   41 command: . TOKEN_FOR TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   42        | . TOKEN_DO block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   43        | . TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   44        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   45        | . TOKEN_RETURN TOKEN_SEMICOLON
   46        | . TOKEN_BREAK TOKEN_SEMICOLON
   47        | . local_variables
   48        | . simple_command TOKEN_SEMICOLON
   49 simple_command: . assign
   50               | . variable TOKEN_PLUSPLUS
   51               | . variable TOKEN_MINUSMINUS
   52               | . variable
   53 assign: . variable_left TOKEN_ASSIGN variable
   54       | . variable_left TOKEN_ASSIGN number
   55 variable_left: . TOKEN_IDENTIFIER
   56              | . TOKEN_IDENTIFIER array_access
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   61 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   62        | . command
   63        | . block_of_instructions
   64 unmatched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   65          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR command
   66          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce

    TOKEN_LOCATION    shift, and go to state 4
    TOKEN_OBJECT      shift, and go to state 5
    TOKEN_VAR_REAL    shift, and go to state 6
    TOKEN_VAR_INT     shift, and go to state 7
    TOKEN_IF          shift, and go to state 54
    TOKEN_WHILE       shift, and go to state 55
    TOKEN_DO          shift, and go to state 56
    TOKEN_FOR         shift, and go to state 57
    TOKEN_RETURN      shift, and go to state 58
    TOKEN_BREAK       shift, and go to state 59
    TOKEN_SEMICOLON   shift, and go to state 60
    TOKEN_BEGIN       shift, and go to state 44
    TOKEN_END         shift, and go to state 61
    TOKEN_IDENTIFIER  shift, and go to state 62

    local_variables        go to state 63
    simple_type            go to state 10
    complex_type           go to state 11
    block_of_instructions  go to state 64
    commands               go to state 65
    command                go to state 66
    simple_command         go to state 67
    assign                 go to state 68
    variable_left          go to state 69
    call_fce               go to state 70
    matched                go to state 71
    unmatched              go to state 72
    variable               go to state 73


state 45

   28 declare_function_: function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 28 (declare_function_)


state 46

   26 declare_function_: function_header TOKEN_LPAR names TOKEN_RPAR . block_of_instructions
   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END

    TOKEN_BEGIN  shift, and go to state 44

    block_of_instructions  go to state 74


state 47

   29 declare_function_: declare_function_ function_header TOKEN_LPAR TOKEN_RPAR . block_of_instructions
   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END

    TOKEN_BEGIN  shift, and go to state 44

    block_of_instructions  go to state 75


state 48

   16 names: names . TOKEN_COMMA TOKEN_IDENTIFIER
   17      | names . TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN number
   18      | names . TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END
   27 declare_function_: declare_function_ function_header TOKEN_LPAR names . TOKEN_RPAR block_of_instructions

    TOKEN_COMMA  shift, and go to state 29
    TOKEN_RPAR   shift, and go to state 76


state 49

   31 number: TOKEN_OPER_SIGNADD TOKEN_UINT .

    $default  reduce using rule 31 (number)


state 50

   30 number: TOKEN_OPER_SIGNADD TOKEN_REAL .

    $default  reduce using rule 30 (number)


state 51

   13 ranges: ranges TOKEN_LSBRA TOKEN_UINT TOKEN_RSBRA .

    $default  reduce using rule 13 (ranges)


state 52

   17 names: names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN . number
   18      | names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN . TOKEN_BEGIN values TOKEN_END
   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT

    TOKEN_BEGIN         shift, and go to state 77
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number  go to state 78


state 53

    1 program: global_variables declare_functions TOKEN_MAIN TOKEN_LPAR TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 1 (program)


state 54

   61 matched: TOKEN_IF . TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   64 unmatched: TOKEN_IF . TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   65          | TOKEN_IF . TOKEN_LPAR expression_bool TOKEN_RPAR command
   66          | TOKEN_IF . TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched

    TOKEN_LPAR  shift, and go to state 79


state 55

   43 command: TOKEN_WHILE . TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions

    TOKEN_LPAR  shift, and go to state 80


state 56

   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END
   42 command: TOKEN_DO . block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON

    TOKEN_BEGIN  shift, and go to state 44

    block_of_instructions  go to state 81


state 57

   41 command: TOKEN_FOR . TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions

    TOKEN_LPAR  shift, and go to state 82


state 58

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   44 command: TOKEN_RETURN . expression TOKEN_SEMICOLON
   45        | TOKEN_RETURN . TOKEN_SEMICOLON
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add

    TOKEN_SEMICOLON     shift, and go to state 83
    TOKEN_LPAR          shift, and go to state 84
    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number           go to state 86
    call_fce         go to state 70
    variable         go to state 87
    expression_base  go to state 88
    expression_mul   go to state 89
    expression_add   go to state 90
    expression       go to state 91


state 59

   46 command: TOKEN_BREAK . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 92


state 60

   35 block_of_instructions: TOKEN_BEGIN TOKEN_SEMICOLON . TOKEN_END

    TOKEN_END  shift, and go to state 93


state 61

   34 block_of_instructions: TOKEN_BEGIN TOKEN_END .

    $default  reduce using rule 34 (block_of_instructions)


state 62

   55 variable_left: TOKEN_IDENTIFIER .  [TOKEN_ASSIGN]
   56              | TOKEN_IDENTIFIER . array_access
   57 call_fce: TOKEN_IDENTIFIER . TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: TOKEN_IDENTIFIER .  [TOKEN_SEMICOLON, TOKEN_DOT, TOKEN_RPAR, TOKEN_PLUSPLUS, TOKEN_MINUSMINUS]
   72         | TOKEN_IDENTIFIER . array_access
   76 array_access: . TOKEN_LSBRA exps TOKEN_RSBRA
   77             | . array_access TOKEN_LSBRA exps TOKEN_RSBRA

    TOKEN_LPAR   shift, and go to state 94
    TOKEN_LSBRA  shift, and go to state 95

    TOKEN_ASSIGN  reduce using rule 55 (variable_left)
    $default      reduce using rule 71 (variable)

    array_access  go to state 96


state 63

   47 command: local_variables .

    $default  reduce using rule 47 (command)


state 64

   63 matched: block_of_instructions .

    $default  reduce using rule 63 (matched)


state 65

    4 local_variables: . simple_type names TOKEN_SEMICOLON
    5                | . complex_type names TOKEN_SEMICOLON
    6 simple_type: . TOKEN_VAR_REAL
    7            | . TOKEN_VAR_INT
    8            | . TOKEN_LOCATION
    9            | . TOKEN_OBJECT
   10 complex_type: . simple_type ranges
   11             | . complex_type simple_type ranges
   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END
   36                      | TOKEN_BEGIN commands . TOKEN_END
   38 commands: commands . matched
   40         | commands . unmatched
   41 command: . TOKEN_FOR TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   42        | . TOKEN_DO block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   43        | . TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   44        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   45        | . TOKEN_RETURN TOKEN_SEMICOLON
   46        | . TOKEN_BREAK TOKEN_SEMICOLON
   47        | . local_variables
   48        | . simple_command TOKEN_SEMICOLON
   49 simple_command: . assign
   50               | . variable TOKEN_PLUSPLUS
   51               | . variable TOKEN_MINUSMINUS
   52               | . variable
   53 assign: . variable_left TOKEN_ASSIGN variable
   54       | . variable_left TOKEN_ASSIGN number
   55 variable_left: . TOKEN_IDENTIFIER
   56              | . TOKEN_IDENTIFIER array_access
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   61 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   62        | . command
   63        | . block_of_instructions
   64 unmatched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   65          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR command
   66          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce

    TOKEN_LOCATION    shift, and go to state 4
    TOKEN_OBJECT      shift, and go to state 5
    TOKEN_VAR_REAL    shift, and go to state 6
    TOKEN_VAR_INT     shift, and go to state 7
    TOKEN_IF          shift, and go to state 54
    TOKEN_WHILE       shift, and go to state 55
    TOKEN_DO          shift, and go to state 56
    TOKEN_FOR         shift, and go to state 57
    TOKEN_RETURN      shift, and go to state 58
    TOKEN_BREAK       shift, and go to state 59
    TOKEN_BEGIN       shift, and go to state 44
    TOKEN_END         shift, and go to state 97
    TOKEN_IDENTIFIER  shift, and go to state 62

    local_variables        go to state 63
    simple_type            go to state 10
    complex_type           go to state 11
    block_of_instructions  go to state 64
    command                go to state 66
    simple_command         go to state 67
    assign                 go to state 68
    variable_left          go to state 69
    call_fce               go to state 70
    matched                go to state 98
    unmatched              go to state 99
    variable               go to state 73


state 66

   62 matched: command .

    $default  reduce using rule 62 (matched)


state 67

   48 command: simple_command . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 100


state 68

   49 simple_command: assign .

    $default  reduce using rule 49 (simple_command)


state 69

   53 assign: variable_left . TOKEN_ASSIGN variable
   54       | variable_left . TOKEN_ASSIGN number

    TOKEN_ASSIGN  shift, and go to state 101


state 70

   73 variable: call_fce .

    $default  reduce using rule 73 (variable)


state 71

   37 commands: matched .

    $default  reduce using rule 37 (commands)


state 72

   39 commands: unmatched .

    $default  reduce using rule 39 (commands)


state 73

   50 simple_command: variable . TOKEN_PLUSPLUS
   51               | variable . TOKEN_MINUSMINUS
   52               | variable .  [TOKEN_SEMICOLON, TOKEN_RPAR]
   74 variable: variable . TOKEN_DOT TOKEN_IDENTIFIER
   75         | variable . TOKEN_DOT call_fce

    TOKEN_DOT         shift, and go to state 102
    TOKEN_PLUSPLUS    shift, and go to state 103
    TOKEN_MINUSMINUS  shift, and go to state 104

    $default  reduce using rule 52 (simple_command)


state 74

   26 declare_function_: function_header TOKEN_LPAR names TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 26 (declare_function_)


state 75

   29 declare_function_: declare_function_ function_header TOKEN_LPAR TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 29 (declare_function_)


state 76

   27 declare_function_: declare_function_ function_header TOKEN_LPAR names TOKEN_RPAR . block_of_instructions
   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END

    TOKEN_BEGIN  shift, and go to state 44

    block_of_instructions  go to state 105


state 77

   18 names: names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN . values TOKEN_END
   19 values: . number
   20       | . TOKEN_IDENTIFIER
   21       | . values TOKEN_COMMA TOKEN_IDENTIFIER
   22       | . values TOKEN_COMMA number
   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT

    TOKEN_IDENTIFIER    shift, and go to state 106
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    values  go to state 107
    number  go to state 108


state 78

   17 names: names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN number .

    $default  reduce using rule 17 (names)


state 79

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   61 matched: TOKEN_IF TOKEN_LPAR . expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   64 unmatched: TOKEN_IF TOKEN_LPAR . expression_bool TOKEN_RPAR block_of_instructions
   65          | TOKEN_IF TOKEN_LPAR . expression_bool TOKEN_RPAR command
   66          | TOKEN_IF TOKEN_LPAR . expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add
   90 expression_bool_base: . expression
   91                     | . expression TOKEN_OPER_REL expression
   92 expression_bool_or: . expression_bool_base
   93                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   94 expression_bool: . expression_bool_or
   95                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR          shift, and go to state 84
    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number                go to state 86
    call_fce              go to state 70
    variable              go to state 87
    expression_base       go to state 88
    expression_mul        go to state 89
    expression_add        go to state 90
    expression            go to state 109
    expression_bool_base  go to state 110
    expression_bool_or    go to state 111
    expression_bool       go to state 112


state 80

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   43 command: TOKEN_WHILE TOKEN_LPAR . expression_bool TOKEN_RPAR block_of_instructions
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add
   90 expression_bool_base: . expression
   91                     | . expression TOKEN_OPER_REL expression
   92 expression_bool_or: . expression_bool_base
   93                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   94 expression_bool: . expression_bool_or
   95                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR          shift, and go to state 84
    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number                go to state 86
    call_fce              go to state 70
    variable              go to state 87
    expression_base       go to state 88
    expression_mul        go to state 89
    expression_add        go to state 90
    expression            go to state 109
    expression_bool_base  go to state 110
    expression_bool_or    go to state 111
    expression_bool       go to state 113


state 81

   42 command: TOKEN_DO block_of_instructions . TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON

    TOKEN_WHILE  shift, and go to state 114


state 82

   41 command: TOKEN_FOR TOKEN_LPAR . init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   67 init: . TOKEN_VAR_INT TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   68     | . TOKEN_VAR_REAL TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   69     | . TOKEN_IDENTIFIER TOKEN_ASSIGN expression
   70     | . TOKEN_IDENTIFIER TOKEN_LSBRA expression TOKEN_RSBRA TOKEN_ASSIGN expression

    TOKEN_VAR_REAL    shift, and go to state 115
    TOKEN_VAR_INT     shift, and go to state 116
    TOKEN_IDENTIFIER  shift, and go to state 117

    init  go to state 118


state 83

   45 command: TOKEN_RETURN TOKEN_SEMICOLON .

    $default  reduce using rule 45 (command)


state 84

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   84                | TOKEN_LPAR . expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add

    TOKEN_LPAR          shift, and go to state 84
    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number           go to state 86
    call_fce         go to state 70
    variable         go to state 87
    expression_base  go to state 88
    expression_mul   go to state 89
    expression_add   go to state 90
    expression       go to state 119


state 85

   57 call_fce: TOKEN_IDENTIFIER . TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: TOKEN_IDENTIFIER .  [TOKEN_BOOL_AND, TOKEN_BOOL_OR, TOKEN_SEMICOLON, TOKEN_DOT, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD, TOKEN_OPER_MUL, TOKEN_PLUSPLUS, TOKEN_MINUSMINUS]
   72         | TOKEN_IDENTIFIER . array_access
   76 array_access: . TOKEN_LSBRA exps TOKEN_RSBRA
   77             | . array_access TOKEN_LSBRA exps TOKEN_RSBRA

    TOKEN_LPAR   shift, and go to state 94
    TOKEN_LSBRA  shift, and go to state 95

    $default  reduce using rule 71 (variable)

    array_access  go to state 120


state 86

   81 expression_base: number .

    $default  reduce using rule 81 (expression_base)


state 87

   74 variable: variable . TOKEN_DOT TOKEN_IDENTIFIER
   75         | variable . TOKEN_DOT call_fce
   80 expression_base: variable .  [TOKEN_BOOL_AND, TOKEN_BOOL_OR, TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD, TOKEN_OPER_MUL]
   82                | variable . TOKEN_MINUSMINUS
   83                | variable . TOKEN_PLUSPLUS

    TOKEN_DOT         shift, and go to state 102
    TOKEN_PLUSPLUS    shift, and go to state 121
    TOKEN_MINUSMINUS  shift, and go to state 122

    $default  reduce using rule 80 (expression_base)


state 88

   85 expression_mul: expression_base .

    $default  reduce using rule 85 (expression_mul)


state 89

   86 expression_mul: expression_mul . TOKEN_OPER_MUL expression_base
   87 expression_add: expression_mul .  [TOKEN_BOOL_AND, TOKEN_BOOL_OR, TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD]

    TOKEN_OPER_MUL  shift, and go to state 123

    $default  reduce using rule 87 (expression_add)


state 90

   88 expression_add: expression_add . TOKEN_OPER_SIGNADD expression_mul
   89 expression: expression_add .  [TOKEN_BOOL_AND, TOKEN_BOOL_OR, TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL]

    TOKEN_OPER_SIGNADD  shift, and go to state 124

    $default  reduce using rule 89 (expression)


state 91

   44 command: TOKEN_RETURN expression . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 125


state 92

   46 command: TOKEN_BREAK TOKEN_SEMICOLON .

    $default  reduce using rule 46 (command)


state 93

   35 block_of_instructions: TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END .

    $default  reduce using rule 35 (block_of_instructions)


state 94

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   57         | TOKEN_IDENTIFIER TOKEN_LPAR . call_parameters TOKEN_RPAR
   58 call_parameters: . expression
   59                | .  [TOKEN_COMMA, TOKEN_RPAR]
   60                | . call_parameters TOKEN_COMMA expression
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add

    TOKEN_LPAR          shift, and go to state 84
    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    $default  reduce using rule 59 (call_parameters)

    number           go to state 86
    call_fce         go to state 70
    call_parameters  go to state 126
    variable         go to state 87
    expression_base  go to state 88
    expression_mul   go to state 89
    expression_add   go to state 90
    expression       go to state 127


state 95

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce
   76 array_access: TOKEN_LSBRA . exps TOKEN_RSBRA
   78 exps: . expression
   79     | . exps TOKEN_COMMA expression
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add

    TOKEN_LPAR          shift, and go to state 84
    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number           go to state 86
    call_fce         go to state 70
    variable         go to state 87
    exps             go to state 128
    expression_base  go to state 88
    expression_mul   go to state 89
    expression_add   go to state 90
    expression       go to state 129


state 96

   56 variable_left: TOKEN_IDENTIFIER array_access .  [TOKEN_ASSIGN]
   72 variable: TOKEN_IDENTIFIER array_access .  [TOKEN_SEMICOLON, TOKEN_DOT, TOKEN_RPAR, TOKEN_PLUSPLUS, TOKEN_MINUSMINUS]
   77 array_access: array_access . TOKEN_LSBRA exps TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 130

    TOKEN_ASSIGN  reduce using rule 56 (variable_left)
    $default      reduce using rule 72 (variable)


state 97

   36 block_of_instructions: TOKEN_BEGIN commands TOKEN_END .

    $default  reduce using rule 36 (block_of_instructions)


state 98

   38 commands: commands matched .

    $default  reduce using rule 38 (commands)


state 99

   40 commands: commands unmatched .

    $default  reduce using rule 40 (commands)


state 100

   48 command: simple_command TOKEN_SEMICOLON .

    $default  reduce using rule 48 (command)


state 101

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   53 assign: variable_left TOKEN_ASSIGN . variable
   54       | variable_left TOKEN_ASSIGN . number
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce

    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number    go to state 131
    call_fce  go to state 70
    variable  go to state 132


state 102

   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   74 variable: variable TOKEN_DOT . TOKEN_IDENTIFIER
   75         | variable TOKEN_DOT . call_fce

    TOKEN_IDENTIFIER  shift, and go to state 133

    call_fce  go to state 134


state 103

   50 simple_command: variable TOKEN_PLUSPLUS .

    $default  reduce using rule 50 (simple_command)


state 104

   51 simple_command: variable TOKEN_MINUSMINUS .

    $default  reduce using rule 51 (simple_command)


state 105

   27 declare_function_: declare_function_ function_header TOKEN_LPAR names TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 27 (declare_function_)


state 106

   20 values: TOKEN_IDENTIFIER .

    $default  reduce using rule 20 (values)


state 107

   18 names: names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values . TOKEN_END
   21 values: values . TOKEN_COMMA TOKEN_IDENTIFIER
   22       | values . TOKEN_COMMA number

    TOKEN_COMMA  shift, and go to state 135
    TOKEN_END    shift, and go to state 136


state 108

   19 values: number .

    $default  reduce using rule 19 (values)


state 109

   90 expression_bool_base: expression .  [TOKEN_BOOL_AND, TOKEN_BOOL_OR, TOKEN_SEMICOLON, TOKEN_RPAR]
   91                     | expression . TOKEN_OPER_REL expression

    TOKEN_OPER_REL  shift, and go to state 137

    $default  reduce using rule 90 (expression_bool_base)


state 110

   92 expression_bool_or: expression_bool_base .

    $default  reduce using rule 92 (expression_bool_or)


state 111

   93 expression_bool_or: expression_bool_or . TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   94 expression_bool: expression_bool_or .  [TOKEN_BOOL_AND, TOKEN_SEMICOLON, TOKEN_RPAR]

    TOKEN_BOOL_OR  shift, and go to state 138

    $default  reduce using rule 94 (expression_bool)


state 112

   61 matched: TOKEN_IF TOKEN_LPAR expression_bool . TOKEN_RPAR matched TOKEN_ELSE matched
   64 unmatched: TOKEN_IF TOKEN_LPAR expression_bool . TOKEN_RPAR block_of_instructions
   65          | TOKEN_IF TOKEN_LPAR expression_bool . TOKEN_RPAR command
   66          | TOKEN_IF TOKEN_LPAR expression_bool . TOKEN_RPAR matched TOKEN_ELSE unmatched
   95 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_BOOL_AND  shift, and go to state 139
    TOKEN_RPAR      shift, and go to state 140


state 113

   43 command: TOKEN_WHILE TOKEN_LPAR expression_bool . TOKEN_RPAR block_of_instructions
   95 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_BOOL_AND  shift, and go to state 139
    TOKEN_RPAR      shift, and go to state 141


state 114

   42 command: TOKEN_DO block_of_instructions TOKEN_WHILE . TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON

    TOKEN_LPAR  shift, and go to state 142


state 115

   68 init: TOKEN_VAR_REAL . TOKEN_IDENTIFIER TOKEN_ASSIGN expression

    TOKEN_IDENTIFIER  shift, and go to state 143


state 116

   67 init: TOKEN_VAR_INT . TOKEN_IDENTIFIER TOKEN_ASSIGN expression

    TOKEN_IDENTIFIER  shift, and go to state 144


state 117

   69 init: TOKEN_IDENTIFIER . TOKEN_ASSIGN expression
   70     | TOKEN_IDENTIFIER . TOKEN_LSBRA expression TOKEN_RSBRA TOKEN_ASSIGN expression

    TOKEN_LSBRA   shift, and go to state 145
    TOKEN_ASSIGN  shift, and go to state 146


state 118

   41 command: TOKEN_FOR TOKEN_LPAR init . TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions

    TOKEN_SEMICOLON  shift, and go to state 147


state 119

   84 expression_base: TOKEN_LPAR expression . TOKEN_RPAR

    TOKEN_RPAR  shift, and go to state 148


state 120

   72 variable: TOKEN_IDENTIFIER array_access .  [TOKEN_BOOL_AND, TOKEN_BOOL_OR, TOKEN_SEMICOLON, TOKEN_DOT, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD, TOKEN_OPER_MUL, TOKEN_PLUSPLUS, TOKEN_MINUSMINUS]
   77 array_access: array_access . TOKEN_LSBRA exps TOKEN_RSBRA

    TOKEN_LSBRA  shift, and go to state 130

    $default  reduce using rule 72 (variable)


state 121

   83 expression_base: variable TOKEN_PLUSPLUS .

    $default  reduce using rule 83 (expression_base)


state 122

   82 expression_base: variable TOKEN_MINUSMINUS .

    $default  reduce using rule 82 (expression_base)


state 123

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   86 expression_mul: expression_mul TOKEN_OPER_MUL . expression_base

    TOKEN_LPAR          shift, and go to state 84
    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number           go to state 86
    call_fce         go to state 70
    variable         go to state 87
    expression_base  go to state 149


state 124

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   88 expression_add: expression_add TOKEN_OPER_SIGNADD . expression_mul

    TOKEN_LPAR          shift, and go to state 84
    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number           go to state 86
    call_fce         go to state 70
    variable         go to state 87
    expression_base  go to state 88
    expression_mul   go to state 150


state 125

   44 command: TOKEN_RETURN expression TOKEN_SEMICOLON .

    $default  reduce using rule 44 (command)


state 126

   57 call_fce: TOKEN_IDENTIFIER TOKEN_LPAR call_parameters . TOKEN_RPAR
   60 call_parameters: call_parameters . TOKEN_COMMA expression

    TOKEN_COMMA  shift, and go to state 151
    TOKEN_RPAR   shift, and go to state 152


state 127

   58 call_parameters: expression .

    $default  reduce using rule 58 (call_parameters)


state 128

   76 array_access: TOKEN_LSBRA exps . TOKEN_RSBRA
   79 exps: exps . TOKEN_COMMA expression

    TOKEN_COMMA  shift, and go to state 153
    TOKEN_RSBRA  shift, and go to state 154


state 129

   78 exps: expression .

    $default  reduce using rule 78 (exps)


state 130

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce
   77 array_access: array_access TOKEN_LSBRA . exps TOKEN_RSBRA
   78 exps: . expression
   79     | . exps TOKEN_COMMA expression
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add

    TOKEN_LPAR          shift, and go to state 84
    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number           go to state 86
    call_fce         go to state 70
    variable         go to state 87
    exps             go to state 155
    expression_base  go to state 88
    expression_mul   go to state 89
    expression_add   go to state 90
    expression       go to state 129


state 131

   54 assign: variable_left TOKEN_ASSIGN number .

    $default  reduce using rule 54 (assign)


state 132

   53 assign: variable_left TOKEN_ASSIGN variable .  [TOKEN_SEMICOLON, TOKEN_RPAR]
   74 variable: variable . TOKEN_DOT TOKEN_IDENTIFIER
   75         | variable . TOKEN_DOT call_fce

    TOKEN_DOT  shift, and go to state 102

    $default  reduce using rule 53 (assign)


state 133

   57 call_fce: TOKEN_IDENTIFIER . TOKEN_LPAR call_parameters TOKEN_RPAR
   74 variable: variable TOKEN_DOT TOKEN_IDENTIFIER .  [TOKEN_BOOL_AND, TOKEN_BOOL_OR, TOKEN_SEMICOLON, TOKEN_DOT, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD, TOKEN_OPER_MUL, TOKEN_PLUSPLUS, TOKEN_MINUSMINUS]

    TOKEN_LPAR  shift, and go to state 94

    $default  reduce using rule 74 (variable)


state 134

   75 variable: variable TOKEN_DOT call_fce .

    $default  reduce using rule 75 (variable)


state 135

   21 values: values TOKEN_COMMA . TOKEN_IDENTIFIER
   22       | values TOKEN_COMMA . number
   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT

    TOKEN_IDENTIFIER    shift, and go to state 156
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number  go to state 157


state 136

   18 names: names TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_ASSIGN TOKEN_BEGIN values TOKEN_END .

    $default  reduce using rule 18 (names)


state 137

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add
   91 expression_bool_base: expression TOKEN_OPER_REL . expression

    TOKEN_LPAR          shift, and go to state 84
    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number           go to state 86
    call_fce         go to state 70
    variable         go to state 87
    expression_base  go to state 88
    expression_mul   go to state 89
    expression_add   go to state 90
    expression       go to state 158


state 138

   93 expression_bool_or: expression_bool_or TOKEN_BOOL_OR . TOKEN_LPAR expression_bool TOKEN_RPAR

    TOKEN_LPAR  shift, and go to state 159


state 139

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add
   90 expression_bool_base: . expression
   91                     | . expression TOKEN_OPER_REL expression
   92 expression_bool_or: . expression_bool_base
   93                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   95 expression_bool: expression_bool TOKEN_BOOL_AND . expression_bool_or

    TOKEN_LPAR          shift, and go to state 84
    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number                go to state 86
    call_fce              go to state 70
    variable              go to state 87
    expression_base       go to state 88
    expression_mul        go to state 89
    expression_add        go to state 90
    expression            go to state 109
    expression_bool_base  go to state 110
    expression_bool_or    go to state 160


state 140

    4 local_variables: . simple_type names TOKEN_SEMICOLON
    5                | . complex_type names TOKEN_SEMICOLON
    6 simple_type: . TOKEN_VAR_REAL
    7            | . TOKEN_VAR_INT
    8            | . TOKEN_LOCATION
    9            | . TOKEN_OBJECT
   10 complex_type: . simple_type ranges
   11             | . complex_type simple_type ranges
   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END
   41 command: . TOKEN_FOR TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   42        | . TOKEN_DO block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   43        | . TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   44        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   45        | . TOKEN_RETURN TOKEN_SEMICOLON
   46        | . TOKEN_BREAK TOKEN_SEMICOLON
   47        | . local_variables
   48        | . simple_command TOKEN_SEMICOLON
   49 simple_command: . assign
   50               | . variable TOKEN_PLUSPLUS
   51               | . variable TOKEN_MINUSMINUS
   52               | . variable
   53 assign: . variable_left TOKEN_ASSIGN variable
   54       | . variable_left TOKEN_ASSIGN number
   55 variable_left: . TOKEN_IDENTIFIER
   56              | . TOKEN_IDENTIFIER array_access
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   61 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   61        | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR . matched TOKEN_ELSE matched
   62        | . command
   63        | . block_of_instructions
   64 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR . block_of_instructions
   65          | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR . command
   66          | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR . matched TOKEN_ELSE unmatched
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce

    TOKEN_LOCATION    shift, and go to state 4
    TOKEN_OBJECT      shift, and go to state 5
    TOKEN_VAR_REAL    shift, and go to state 6
    TOKEN_VAR_INT     shift, and go to state 7
    TOKEN_IF          shift, and go to state 161
    TOKEN_WHILE       shift, and go to state 55
    TOKEN_DO          shift, and go to state 56
    TOKEN_FOR         shift, and go to state 57
    TOKEN_RETURN      shift, and go to state 58
    TOKEN_BREAK       shift, and go to state 59
    TOKEN_BEGIN       shift, and go to state 44
    TOKEN_IDENTIFIER  shift, and go to state 62

    local_variables        go to state 63
    simple_type            go to state 10
    complex_type           go to state 11
    block_of_instructions  go to state 162
    command                go to state 163
    simple_command         go to state 67
    assign                 go to state 68
    variable_left          go to state 69
    call_fce               go to state 70
    matched                go to state 164
    variable               go to state 73


state 141

   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END
   43 command: TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR . block_of_instructions

    TOKEN_BEGIN  shift, and go to state 44

    block_of_instructions  go to state 165


state 142

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   42 command: TOKEN_DO block_of_instructions TOKEN_WHILE TOKEN_LPAR . expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add
   90 expression_bool_base: . expression
   91                     | . expression TOKEN_OPER_REL expression
   92 expression_bool_or: . expression_bool_base
   93                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   94 expression_bool: . expression_bool_or
   95                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR          shift, and go to state 84
    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number                go to state 86
    call_fce              go to state 70
    variable              go to state 87
    expression_base       go to state 88
    expression_mul        go to state 89
    expression_add        go to state 90
    expression            go to state 109
    expression_bool_base  go to state 110
    expression_bool_or    go to state 111
    expression_bool       go to state 166


state 143

   68 init: TOKEN_VAR_REAL TOKEN_IDENTIFIER . TOKEN_ASSIGN expression

    TOKEN_ASSIGN  shift, and go to state 167


state 144

   67 init: TOKEN_VAR_INT TOKEN_IDENTIFIER . TOKEN_ASSIGN expression

    TOKEN_ASSIGN  shift, and go to state 168


state 145

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   70 init: TOKEN_IDENTIFIER TOKEN_LSBRA . expression TOKEN_RSBRA TOKEN_ASSIGN expression
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add

    TOKEN_LPAR          shift, and go to state 84
    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number           go to state 86
    call_fce         go to state 70
    variable         go to state 87
    expression_base  go to state 88
    expression_mul   go to state 89
    expression_add   go to state 90
    expression       go to state 169


state 146

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   69 init: TOKEN_IDENTIFIER TOKEN_ASSIGN . expression
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add

    TOKEN_LPAR          shift, and go to state 84
    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number           go to state 86
    call_fce         go to state 70
    variable         go to state 87
    expression_base  go to state 88
    expression_mul   go to state 89
    expression_add   go to state 90
    expression       go to state 170


state 147

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   41 command: TOKEN_FOR TOKEN_LPAR init TOKEN_SEMICOLON . expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add
   90 expression_bool_base: . expression
   91                     | . expression TOKEN_OPER_REL expression
   92 expression_bool_or: . expression_bool_base
   93                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   94 expression_bool: . expression_bool_or
   95                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR          shift, and go to state 84
    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number                go to state 86
    call_fce              go to state 70
    variable              go to state 87
    expression_base       go to state 88
    expression_mul        go to state 89
    expression_add        go to state 90
    expression            go to state 109
    expression_bool_base  go to state 110
    expression_bool_or    go to state 111
    expression_bool       go to state 171


state 148

   84 expression_base: TOKEN_LPAR expression TOKEN_RPAR .

    $default  reduce using rule 84 (expression_base)


state 149

   86 expression_mul: expression_mul TOKEN_OPER_MUL expression_base .

    $default  reduce using rule 86 (expression_mul)


state 150

   86 expression_mul: expression_mul . TOKEN_OPER_MUL expression_base
   88 expression_add: expression_add TOKEN_OPER_SIGNADD expression_mul .  [TOKEN_BOOL_AND, TOKEN_BOOL_OR, TOKEN_SEMICOLON, TOKEN_COMMA, TOKEN_RPAR, TOKEN_RSBRA, TOKEN_OPER_REL, TOKEN_OPER_SIGNADD]

    TOKEN_OPER_MUL  shift, and go to state 123

    $default  reduce using rule 88 (expression_add)


state 151

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   60 call_parameters: call_parameters TOKEN_COMMA . expression
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add

    TOKEN_LPAR          shift, and go to state 84
    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number           go to state 86
    call_fce         go to state 70
    variable         go to state 87
    expression_base  go to state 88
    expression_mul   go to state 89
    expression_add   go to state 90
    expression       go to state 172


state 152

   57 call_fce: TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR .

    $default  reduce using rule 57 (call_fce)


state 153

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce
   79 exps: exps TOKEN_COMMA . expression
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add

    TOKEN_LPAR          shift, and go to state 84
    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number           go to state 86
    call_fce         go to state 70
    variable         go to state 87
    expression_base  go to state 88
    expression_mul   go to state 89
    expression_add   go to state 90
    expression       go to state 173


state 154

   76 array_access: TOKEN_LSBRA exps TOKEN_RSBRA .

    $default  reduce using rule 76 (array_access)


state 155

   77 array_access: array_access TOKEN_LSBRA exps . TOKEN_RSBRA
   79 exps: exps . TOKEN_COMMA expression

    TOKEN_COMMA  shift, and go to state 153
    TOKEN_RSBRA  shift, and go to state 174


state 156

   21 values: values TOKEN_COMMA TOKEN_IDENTIFIER .

    $default  reduce using rule 21 (values)


state 157

   22 values: values TOKEN_COMMA number .

    $default  reduce using rule 22 (values)


state 158

   91 expression_bool_base: expression TOKEN_OPER_REL expression .

    $default  reduce using rule 91 (expression_bool_base)


state 159

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add
   90 expression_bool_base: . expression
   91                     | . expression TOKEN_OPER_REL expression
   92 expression_bool_or: . expression_bool_base
   93                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   93                   | expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR . expression_bool TOKEN_RPAR
   94 expression_bool: . expression_bool_or
   95                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR          shift, and go to state 84
    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number                go to state 86
    call_fce              go to state 70
    variable              go to state 87
    expression_base       go to state 88
    expression_mul        go to state 89
    expression_add        go to state 90
    expression            go to state 109
    expression_bool_base  go to state 110
    expression_bool_or    go to state 111
    expression_bool       go to state 175


state 160

   93 expression_bool_or: expression_bool_or . TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   95 expression_bool: expression_bool TOKEN_BOOL_AND expression_bool_or .  [TOKEN_BOOL_AND, TOKEN_SEMICOLON, TOKEN_RPAR]

    TOKEN_BOOL_OR  shift, and go to state 138

    $default  reduce using rule 95 (expression_bool)


state 161

   61 matched: TOKEN_IF . TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched

    TOKEN_LPAR  shift, and go to state 176


state 162

   63 matched: block_of_instructions .  [TOKEN_ELSE]
   64 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions .  [TOKEN_LOCATION, TOKEN_OBJECT, TOKEN_VAR_REAL, TOKEN_VAR_INT, TOKEN_IF, TOKEN_WHILE, TOKEN_DO, TOKEN_FOR, TOKEN_RETURN, TOKEN_BREAK, TOKEN_BEGIN, TOKEN_END, TOKEN_IDENTIFIER]

    TOKEN_ELSE  reduce using rule 63 (matched)
    $default    reduce using rule 64 (unmatched)


state 163

   62 matched: command .  [TOKEN_ELSE]
   65 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR command .  [TOKEN_LOCATION, TOKEN_OBJECT, TOKEN_VAR_REAL, TOKEN_VAR_INT, TOKEN_IF, TOKEN_WHILE, TOKEN_DO, TOKEN_FOR, TOKEN_RETURN, TOKEN_BREAK, TOKEN_BEGIN, TOKEN_END, TOKEN_IDENTIFIER]

    TOKEN_ELSE  reduce using rule 62 (matched)
    $default    reduce using rule 65 (unmatched)


state 164

   61 matched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched . TOKEN_ELSE matched
   66 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched . TOKEN_ELSE unmatched

    TOKEN_ELSE  shift, and go to state 177


state 165

   43 command: TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 43 (command)


state 166

   42 command: TOKEN_DO block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool . TOKEN_RPAR TOKEN_SEMICOLON
   95 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_BOOL_AND  shift, and go to state 139
    TOKEN_RPAR      shift, and go to state 178


state 167

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   68 init: TOKEN_VAR_REAL TOKEN_IDENTIFIER TOKEN_ASSIGN . expression
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add

    TOKEN_LPAR          shift, and go to state 84
    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number           go to state 86
    call_fce         go to state 70
    variable         go to state 87
    expression_base  go to state 88
    expression_mul   go to state 89
    expression_add   go to state 90
    expression       go to state 179


state 168

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   67 init: TOKEN_VAR_INT TOKEN_IDENTIFIER TOKEN_ASSIGN . expression
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add

    TOKEN_LPAR          shift, and go to state 84
    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number           go to state 86
    call_fce         go to state 70
    variable         go to state 87
    expression_base  go to state 88
    expression_mul   go to state 89
    expression_add   go to state 90
    expression       go to state 180


state 169

   70 init: TOKEN_IDENTIFIER TOKEN_LSBRA expression . TOKEN_RSBRA TOKEN_ASSIGN expression

    TOKEN_RSBRA  shift, and go to state 181


state 170

   69 init: TOKEN_IDENTIFIER TOKEN_ASSIGN expression .

    $default  reduce using rule 69 (init)


state 171

   41 command: TOKEN_FOR TOKEN_LPAR init TOKEN_SEMICOLON expression_bool . TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   95 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_BOOL_AND   shift, and go to state 139
    TOKEN_SEMICOLON  shift, and go to state 182


state 172

   60 call_parameters: call_parameters TOKEN_COMMA expression .

    $default  reduce using rule 60 (call_parameters)


state 173

   79 exps: exps TOKEN_COMMA expression .

    $default  reduce using rule 79 (exps)


state 174

   77 array_access: array_access TOKEN_LSBRA exps TOKEN_RSBRA .

    $default  reduce using rule 77 (array_access)


state 175

   93 expression_bool_or: expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool . TOKEN_RPAR
   95 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_BOOL_AND  shift, and go to state 139
    TOKEN_RPAR      shift, and go to state 183


state 176

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   61 matched: TOKEN_IF TOKEN_LPAR . expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add
   90 expression_bool_base: . expression
   91                     | . expression TOKEN_OPER_REL expression
   92 expression_bool_or: . expression_bool_base
   93                   | . expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR
   94 expression_bool: . expression_bool_or
   95                | . expression_bool TOKEN_BOOL_AND expression_bool_or

    TOKEN_LPAR          shift, and go to state 84
    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number                go to state 86
    call_fce              go to state 70
    variable              go to state 87
    expression_base       go to state 88
    expression_mul        go to state 89
    expression_add        go to state 90
    expression            go to state 109
    expression_bool_base  go to state 110
    expression_bool_or    go to state 111
    expression_bool       go to state 184


state 177

    4 local_variables: . simple_type names TOKEN_SEMICOLON
    5                | . complex_type names TOKEN_SEMICOLON
    6 simple_type: . TOKEN_VAR_REAL
    7            | . TOKEN_VAR_INT
    8            | . TOKEN_LOCATION
    9            | . TOKEN_OBJECT
   10 complex_type: . simple_type ranges
   11             | . complex_type simple_type ranges
   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END
   41 command: . TOKEN_FOR TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   42        | . TOKEN_DO block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   43        | . TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   44        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   45        | . TOKEN_RETURN TOKEN_SEMICOLON
   46        | . TOKEN_BREAK TOKEN_SEMICOLON
   47        | . local_variables
   48        | . simple_command TOKEN_SEMICOLON
   49 simple_command: . assign
   50               | . variable TOKEN_PLUSPLUS
   51               | . variable TOKEN_MINUSMINUS
   52               | . variable
   53 assign: . variable_left TOKEN_ASSIGN variable
   54       | . variable_left TOKEN_ASSIGN number
   55 variable_left: . TOKEN_IDENTIFIER
   56              | . TOKEN_IDENTIFIER array_access
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   61 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   61        | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE . matched
   62        | . command
   63        | . block_of_instructions
   64 unmatched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   65          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR command
   66          | . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched
   66          | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE . unmatched
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce

    TOKEN_LOCATION    shift, and go to state 4
    TOKEN_OBJECT      shift, and go to state 5
    TOKEN_VAR_REAL    shift, and go to state 6
    TOKEN_VAR_INT     shift, and go to state 7
    TOKEN_IF          shift, and go to state 54
    TOKEN_WHILE       shift, and go to state 55
    TOKEN_DO          shift, and go to state 56
    TOKEN_FOR         shift, and go to state 57
    TOKEN_RETURN      shift, and go to state 58
    TOKEN_BREAK       shift, and go to state 59
    TOKEN_BEGIN       shift, and go to state 44
    TOKEN_IDENTIFIER  shift, and go to state 62

    local_variables        go to state 63
    simple_type            go to state 10
    complex_type           go to state 11
    block_of_instructions  go to state 64
    command                go to state 66
    simple_command         go to state 67
    assign                 go to state 68
    variable_left          go to state 69
    call_fce               go to state 70
    matched                go to state 185
    unmatched              go to state 186
    variable               go to state 73


state 178

   42 command: TOKEN_DO block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 187


state 179

   68 init: TOKEN_VAR_REAL TOKEN_IDENTIFIER TOKEN_ASSIGN expression .

    $default  reduce using rule 68 (init)


state 180

   67 init: TOKEN_VAR_INT TOKEN_IDENTIFIER TOKEN_ASSIGN expression .

    $default  reduce using rule 67 (init)


state 181

   70 init: TOKEN_IDENTIFIER TOKEN_LSBRA expression TOKEN_RSBRA . TOKEN_ASSIGN expression

    TOKEN_ASSIGN  shift, and go to state 188


state 182

   41 command: TOKEN_FOR TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON . simple_command TOKEN_RPAR block_of_instructions
   49 simple_command: . assign
   50               | . variable TOKEN_PLUSPLUS
   51               | . variable TOKEN_MINUSMINUS
   52               | . variable
   53 assign: . variable_left TOKEN_ASSIGN variable
   54       | . variable_left TOKEN_ASSIGN number
   55 variable_left: . TOKEN_IDENTIFIER
   56              | . TOKEN_IDENTIFIER array_access
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce

    TOKEN_IDENTIFIER  shift, and go to state 62

    simple_command  go to state 189
    assign          go to state 68
    variable_left   go to state 69
    call_fce        go to state 70
    variable        go to state 73


state 183

   93 expression_bool_or: expression_bool_or TOKEN_BOOL_OR TOKEN_LPAR expression_bool TOKEN_RPAR .

    $default  reduce using rule 93 (expression_bool_or)


state 184

   61 matched: TOKEN_IF TOKEN_LPAR expression_bool . TOKEN_RPAR matched TOKEN_ELSE matched
   95 expression_bool: expression_bool . TOKEN_BOOL_AND expression_bool_or

    TOKEN_BOOL_AND  shift, and go to state 139
    TOKEN_RPAR      shift, and go to state 190


state 185

   61 matched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched .

    $default  reduce using rule 61 (matched)


state 186

   66 unmatched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE unmatched .

    $default  reduce using rule 66 (unmatched)


state 187

   42 command: TOKEN_DO block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON .

    $default  reduce using rule 42 (command)


state 188

   30 number: . TOKEN_OPER_SIGNADD TOKEN_REAL
   31       | . TOKEN_OPER_SIGNADD TOKEN_UINT
   32       | . TOKEN_REAL
   33       | . TOKEN_UINT
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   70 init: TOKEN_IDENTIFIER TOKEN_LSBRA expression TOKEN_RSBRA TOKEN_ASSIGN . expression
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce
   80 expression_base: . variable
   81                | . number
   82                | . variable TOKEN_MINUSMINUS
   83                | . variable TOKEN_PLUSPLUS
   84                | . TOKEN_LPAR expression TOKEN_RPAR
   85 expression_mul: . expression_base
   86               | . expression_mul TOKEN_OPER_MUL expression_base
   87 expression_add: . expression_mul
   88               | . expression_add TOKEN_OPER_SIGNADD expression_mul
   89 expression: . expression_add

    TOKEN_LPAR          shift, and go to state 84
    TOKEN_IDENTIFIER    shift, and go to state 85
    TOKEN_UINT          shift, and go to state 37
    TOKEN_REAL          shift, and go to state 38
    TOKEN_OPER_SIGNADD  shift, and go to state 39

    number           go to state 86
    call_fce         go to state 70
    variable         go to state 87
    expression_base  go to state 88
    expression_mul   go to state 89
    expression_add   go to state 90
    expression       go to state 191


state 189

   41 command: TOKEN_FOR TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command . TOKEN_RPAR block_of_instructions

    TOKEN_RPAR  shift, and go to state 192


state 190

    4 local_variables: . simple_type names TOKEN_SEMICOLON
    5                | . complex_type names TOKEN_SEMICOLON
    6 simple_type: . TOKEN_VAR_REAL
    7            | . TOKEN_VAR_INT
    8            | . TOKEN_LOCATION
    9            | . TOKEN_OBJECT
   10 complex_type: . simple_type ranges
   11             | . complex_type simple_type ranges
   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END
   41 command: . TOKEN_FOR TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   42        | . TOKEN_DO block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   43        | . TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   44        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   45        | . TOKEN_RETURN TOKEN_SEMICOLON
   46        | . TOKEN_BREAK TOKEN_SEMICOLON
   47        | . local_variables
   48        | . simple_command TOKEN_SEMICOLON
   49 simple_command: . assign
   50               | . variable TOKEN_PLUSPLUS
   51               | . variable TOKEN_MINUSMINUS
   52               | . variable
   53 assign: . variable_left TOKEN_ASSIGN variable
   54       | . variable_left TOKEN_ASSIGN number
   55 variable_left: . TOKEN_IDENTIFIER
   56              | . TOKEN_IDENTIFIER array_access
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   61 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   61        | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR . matched TOKEN_ELSE matched
   62        | . command
   63        | . block_of_instructions
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce

    TOKEN_LOCATION    shift, and go to state 4
    TOKEN_OBJECT      shift, and go to state 5
    TOKEN_VAR_REAL    shift, and go to state 6
    TOKEN_VAR_INT     shift, and go to state 7
    TOKEN_IF          shift, and go to state 161
    TOKEN_WHILE       shift, and go to state 55
    TOKEN_DO          shift, and go to state 56
    TOKEN_FOR         shift, and go to state 57
    TOKEN_RETURN      shift, and go to state 58
    TOKEN_BREAK       shift, and go to state 59
    TOKEN_BEGIN       shift, and go to state 44
    TOKEN_IDENTIFIER  shift, and go to state 62

    local_variables        go to state 63
    simple_type            go to state 10
    complex_type           go to state 11
    block_of_instructions  go to state 64
    command                go to state 66
    simple_command         go to state 67
    assign                 go to state 68
    variable_left          go to state 69
    call_fce               go to state 70
    matched                go to state 193
    variable               go to state 73


state 191

   70 init: TOKEN_IDENTIFIER TOKEN_LSBRA expression TOKEN_RSBRA TOKEN_ASSIGN expression .

    $default  reduce using rule 70 (init)


state 192

   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END
   41 command: TOKEN_FOR TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR . block_of_instructions

    TOKEN_BEGIN  shift, and go to state 44

    block_of_instructions  go to state 194


state 193

   61 matched: TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched . TOKEN_ELSE matched

    TOKEN_ELSE  shift, and go to state 195


state 194

   41 command: TOKEN_FOR TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions .

    $default  reduce using rule 41 (command)


state 195

    4 local_variables: . simple_type names TOKEN_SEMICOLON
    5                | . complex_type names TOKEN_SEMICOLON
    6 simple_type: . TOKEN_VAR_REAL
    7            | . TOKEN_VAR_INT
    8            | . TOKEN_LOCATION
    9            | . TOKEN_OBJECT
   10 complex_type: . simple_type ranges
   11             | . complex_type simple_type ranges
   34 block_of_instructions: . TOKEN_BEGIN TOKEN_END
   35                      | . TOKEN_BEGIN TOKEN_SEMICOLON TOKEN_END
   36                      | . TOKEN_BEGIN commands TOKEN_END
   41 command: . TOKEN_FOR TOKEN_LPAR init TOKEN_SEMICOLON expression_bool TOKEN_SEMICOLON simple_command TOKEN_RPAR block_of_instructions
   42        | . TOKEN_DO block_of_instructions TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR TOKEN_SEMICOLON
   43        | . TOKEN_WHILE TOKEN_LPAR expression_bool TOKEN_RPAR block_of_instructions
   44        | . TOKEN_RETURN expression TOKEN_SEMICOLON
   45        | . TOKEN_RETURN TOKEN_SEMICOLON
   46        | . TOKEN_BREAK TOKEN_SEMICOLON
   47        | . local_variables
   48        | . simple_command TOKEN_SEMICOLON
   49 simple_command: . assign
   50               | . variable TOKEN_PLUSPLUS
   51               | . variable TOKEN_MINUSMINUS
   52               | . variable
   53 assign: . variable_left TOKEN_ASSIGN variable
   54       | . variable_left TOKEN_ASSIGN number
   55 variable_left: . TOKEN_IDENTIFIER
   56              | . TOKEN_IDENTIFIER array_access
   57 call_fce: . TOKEN_IDENTIFIER TOKEN_LPAR call_parameters TOKEN_RPAR
   61 matched: . TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE matched
   61        | TOKEN_IF TOKEN_LPAR expression_bool TOKEN_RPAR matched TOKEN_ELSE . matched
   62        | . command
   63        | . block_of_instructions
   71 variable: . TOKEN_IDENTIFIER
   72         | . TOKEN_IDENTIFIER array_access
   73         | . call_fce
   74         | . variable TOKEN_DOT TOKEN_IDENTIFIER
   75         | . variable TOKEN_DOT call_fce

    TOKEN_LOCATION    shift, and go to state 4
    TOKEN_OBJECT      shift, and go to state 5
    TOKEN_VAR_REAL    shift, and go to state 6
    TOKEN_VAR_INT     shift, and go to state 7
    TOKEN_IF          shift, and go to state 161
    TOKEN_WHILE       shift, and go to state 55
    TOKEN_DO          shift, and go to state 56
    TOKEN_FOR         shift, and go to state 57
    TOKEN_RETURN      shift, and go to state 58
    TOKEN_BREAK       shift, and go to state 59
    TOKEN_BEGIN       shift, and go to state 44
    TOKEN_IDENTIFIER  shift, and go to state 62

    local_variables        go to state 63
    simple_type            go to state 10
    complex_type           go to state 11
    block_of_instructions  go to state 64
    command                go to state 66
    simple_command         go to state 67
    assign                 go to state 68
    variable_left          go to state 69
    call_fce               go to state 70
    matched                go to state 185
    variable               go to state 73
